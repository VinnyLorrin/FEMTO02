###############################################################################
#
# IAR C/C++ Compiler V6.80.5.1069 for Atmel AVR           06/Sep/2017  20:23:58
# Copyright 1996-2016 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Atmel AVR
#
#    Source file  =  
#        D:\workspace\Femto2\software\source\2_MCU\0V1_test_for_ES9018_Reg_120725\App_0V1_start2.C
#    Command line =  
#        D:\workspace\Femto2\software\source\2_MCU\0V1_test_for_ES9018_Reg_120725\App_0V1_start2.C
#        --cpu=m128 -ms -o
#        D:\workspace\Femto2\software\source\2_MCU\0V1_test_for_ES9018_Reg_120725\Debug\Obj
#        -lC
#        D:\workspace\Femto2\software\source\2_MCU\0V1_test_for_ES9018_Reg_120725\Debug\List
#        -lA
#        D:\workspace\Femto2\software\source\2_MCU\0V1_test_for_ES9018_Reg_120725\Debug\List
#        -y --initializers_in_flash --no_cse --no_inline --no_code_motion
#        --no_cross_call --no_clustering --no_tbaa --debug
#        -DENABLE_BIT_DEFINITIONS -e --eeprom_size 4096 --clib -Ol
#    Locale       =  Korean_Korea.949
#    List file    =  
#        D:\workspace\Femto2\software\source\2_MCU\0V1_test_for_ES9018_Reg_120725\Debug\List\App_0V1_start2.lst
#    Object file  =  
#        D:\workspace\Femto2\software\source\2_MCU\0V1_test_for_ES9018_Reg_120725\Debug\Obj\App_0V1_start2.r90
#
###############################################################################

D:\workspace\Femto2\software\source\2_MCU\0V1_test_for_ES9018_Reg_120725\App_0V1_start2.C
      1          //2012.07.25
      2          
      3          // OCDEN, JTAGEN, CKOPT, SPIEN
      4          
      5          #include <iom128.h>

   \                                 In  segment ABSOLUTE, at 0x20
   \   union <unnamed> volatile __io _A_PINF
   \                     _A_PINF:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x21
   \   union <unnamed> volatile __io _A_PINE
   \                     _A_PINE:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x22
   \   union <unnamed> volatile __io _A_DDRE
   \                     _A_DDRE:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x23
   \   union <unnamed> volatile __io _A_PORTE
   \                     _A_PORTE:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x30
   \   union <unnamed> volatile __io _A_PIND
   \                     _A_PIND:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x31
   \   union <unnamed> volatile __io _A_DDRD
   \                     _A_DDRD:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x32
   \   union <unnamed> volatile __io _A_PORTD
   \                     _A_PORTD:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x33
   \   union <unnamed> volatile __io _A_PINC
   \                     _A_PINC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x34
   \   union <unnamed> volatile __io _A_DDRC
   \                     _A_DDRC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x35
   \   union <unnamed> volatile __io _A_PORTC
   \                     _A_PORTC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x36
   \   union <unnamed> volatile __io _A_PINB
   \                     _A_PINB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x37
   \   union <unnamed> volatile __io _A_DDRB
   \                     _A_DDRB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x38
   \   union <unnamed> volatile __io _A_PORTB
   \                     _A_PORTB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x39
   \   union <unnamed> volatile __io _A_PINA
   \                     _A_PINA:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x3a
   \   union <unnamed> volatile __io _A_DDRA
   \                     _A_DDRA:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x3b
   \   union <unnamed> volatile __io _A_PORTA
   \                     _A_PORTA:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x44
   \   union <unnamed> volatile __io _A_TCNT2
   \                     _A_TCNT2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x45
   \   union <unnamed> volatile __io _A_TCCR2
   \                     _A_TCCR2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x4c
   \   union <unnamed> volatile __io _A_TCNT1
   \                     _A_TCNT1:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x4e
   \   union <unnamed> volatile __io _A_TCCR1B
   \                     _A_TCCR1B:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x51
   \   union <unnamed> volatile __io _A_OCR0
   \                     _A_OCR0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x52
   \   union <unnamed> volatile __io _A_TCNT0
   \                     _A_TCNT0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x53
   \   union <unnamed> volatile __io _A_TCCR0
   \                     _A_TCCR0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x56
   \   union <unnamed> volatile __io _A_TIFR
   \                     _A_TIFR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x57
   \   union <unnamed> volatile __io _A_TIMSK
   \                     _A_TIMSK:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x58
   \   union <unnamed> volatile __io _A_EIFR
   \                     _A_EIFR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x59
   \   union <unnamed> volatile __io _A_EIMSK
   \                     _A_EIMSK:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x5a
   \   union <unnamed> volatile __io _A_EICRB
   \                     _A_EICRB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x61
   \   union <unnamed> volatile __io _A_DDRF
   \                     _A_DDRF:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x62
   \   union <unnamed> volatile __io _A_PORTF
   \                     _A_PORTF:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x63
   \   union <unnamed> volatile __io _A_PING
   \                     _A_PING:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x64
   \   union <unnamed> volatile __io _A_DDRG
   \                     _A_DDRG:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x65
   \   union <unnamed> volatile __io _A_PORTG
   \                     _A_PORTG:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x6a
   \   union <unnamed> volatile __io _A_EICRA
   \                     _A_EICRA:
   \   00000000                      DS8 1
      6          #include <inavr.h>
      7          #include "InitBoard.c"

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char test_eeprom[32]
   \                     test_eeprom:
   \   00000000                      DS8 32

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char IR_data[20]
   \                     IR_data:
   \   00000000                      DS8 20

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char IR_data_flag
   \                     IR_data_flag:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int rom_add_pt
   \                     rom_add_pt:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned long rom_cnt
   \                     rom_cnt:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char rom_cnt_high
   \                     rom_cnt_high:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char rom_cnt_mid
   \                     rom_cnt_mid:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char rom_cnt_low
   \                     rom_cnt_low:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char rom_func_data
   \                     rom_func_data:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char rom_add_pt_high
   \                     rom_add_pt_high:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char rom_add_pt_low
   \                     rom_add_pt_low:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char rom_device_high
   \                     rom_device_high:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char rom_device_low
   \                     rom_device_low:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char rom_add_check_sum
   \                     rom_add_check_sum:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char phase_data
   \                     phase_data:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for phase_data>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char interrupt_eicra
   \                     interrupt_eicra:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for interrupt_eicra>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char init_setting_check
   \                     init_setting_check:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char ess_automute
   \                     ess_automute:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char ess_lock_ck
   \                     ess_lock_ck:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char old_ess_automute
   \                     old_ess_automute:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char old_ess_lock_ck
   \                     old_ess_lock_ck:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char exMute
   \                     exMute:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char old_exMute
   \                     old_exMute:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int key_tmr
   \                     key_tmr:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char tmr_osc_ck
   \                     tmr_osc_ck:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char key_int_flag
   \                     key_int_flag:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int rom_tmr
   \                     rom_tmr:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char rom_save_flag
   \                     rom_save_flag:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for rom_save_flag>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char rom_save_flag2
   \                     rom_save_flag2:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for rom_save_flag2>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char Time_500us
   \                     Time_500us:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int Time_50ms
   \                     Time_50ms:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char dot_light_reg
   \                     dot_light_reg:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for dot_light_reg>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char ch_led_data
   \                     ch_led_data:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char ch_led_enable
   \                     ch_led_enable:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for ch_led_enable>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char sr_led_data
   \                     sr_led_data:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for sr_led_data>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char display_num
   \                     display_num:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for display_num>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char ess_lch_master_trim
   \                     ess_lch_master_trim:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char ess_rch_master_trim
   \                     ess_rch_master_trim:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char vol_dB
   \                     vol_dB:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for vol_dB>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char i2s_flag
   \                     i2s_flag:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for i2s_flag>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char usb_sr
   \                     usb_sr:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for usb_sr>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char button_data
   \                     button_data:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char filter_flag
   \                     filter_flag:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char mute_enable
   \                     mute_enable:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for mute_enable>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char key_func
   \                     key_func:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int key_func_tmr
   \                     key_func_tmr:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char key_condition
   \                     key_condition:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char es9018_reg10
   \                     es9018_reg10:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for es9018_reg10>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char es9018_lock
   \                     es9018_lock:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char es9018_lock_flag
   \                     es9018_lock_flag:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int dac_audio_timer
   \                     dac_audio_timer:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int sample_rate
   \                     sample_rate:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int sample_rate2
   \                     sample_rate2:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int min44
   \                     min44:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for min44>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int max44
   \                     max44:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for max44>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int min48
   \                     min48:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for min48>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int max48
   \                     max48:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for max48>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int min88
   \                     min88:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for min88>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int max88
   \                     max88:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for max88>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int min96
   \                     min96:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for min96>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int max96
   \                     max96:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for max96>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int min176
   \                     min176:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for min176>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int max176
   \                     max176:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for max176>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int min192
   \                     min192:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for min192>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int max192
   \                     max192:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for max192>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char tmr_osc
   \                     tmr_osc:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char interface_ch
   \                     interface_ch:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for interface_ch>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int cs_audio_timer
   \                     cs_audio_timer:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int usb_audio_timer
   \                     usb_audio_timer:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char KeyReady
   \                     KeyReady:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for KeyReady>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char I2C_error
   \                     I2C_error:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char ch_name[8][6]
   \                     ch_name:
   \   00000000                      DS8 48
   \   00000030                      REQUIRE `?<Initializer for ch_name>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char sr_name[7][6]
   \                     sr_name:
   \   00000000                      DS8 42
   \   0000002A                      REQUIRE `?<Initializer for sr_name>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char filter_name[3][8]
   \                     filter_name:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for filter_name>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char phase_name[8]
   \                     phase_name:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for phase_name>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char normal_name[8]
   \                     normal_name:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for normal_name>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char ch_data
   \                     ch_data:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char sr_data
   \                     sr_data:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char filter_data
   \                     filter_data:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char inverse_data
   \                     inverse_data:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char dot_string[16]
   \                     dot_string:
   \   00000000                      DS8 16

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char ess_volume[4]
   \                     ess_volume:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   long f1_coeff_st1[64]
   \                     f1_coeff_st1:
   \   00000000                      DS8 256
   \   00000100                      REQUIRE `?<Initializer for f1_coeff_st1>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   long f1_coeff_st2[16]
   \                     f1_coeff_st2:
   \   00000000                      DS8 64
   \   00000040                      REQUIRE `?<Initializer for f1_coeff_st2>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   long f2_coeff_st1[64]
   \                     f2_coeff_st1:
   \   00000000                      DS8 256
   \   00000100                      REQUIRE `?<Initializer for f2_coeff_st1>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   long f2_coeff_st2[16]
   \                     f2_coeff_st2:
   \   00000000                      DS8 64
   \   00000040                      REQUIRE `?<Initializer for f2_coeff_st2>`

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void DelayTime(unsigned int)
   \                     DelayTime:
   \                     ??DelayTime_0:
   \   00000000   0198               MOVW    R19:R18, R17:R16
   \   00000002   0189               MOVW    R17:R16, R19:R18
   \   00000004   5001               SUBI    R16, 1
   \   00000006   4010               SBCI    R17, 0
   \   00000008   2B23               OR      R18, R19
   \   0000000A   F7D1               BRNE    ??DelayTime_0
   \   0000000C   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void DelayTime_ms(unsigned int)
   \                     DelayTime_ms:
   \   00000000   01B8               MOVW    R23:R22, R17:R16
   \   00000002   E040               LDI     R20, 0
   \   00000004   C004               RJMP    ??DelayTime_ms_0
   \                     ??DelayTime_ms_1:
   \   00000006   E800               LDI     R16, 128
   \   00000008   E31E               LDI     R17, 62
   \   0000000A   ....               RCALL   DelayTime
   \   0000000C   9543               INC     R20
   \                     ??DelayTime_ms_0:
   \   0000000E   01FB               MOVW    R31:R30, R23:R22
   \   00000010   9631               ADIW    R31:R30, 1
   \   00000012   E050               LDI     R21, 0
   \   00000014   17E4               CP      R30, R20
   \   00000016   07F5               CPC     R31, R21
   \   00000018   F7B0               BRCC    ??DelayTime_ms_1
   \   0000001A   9508               RET

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char _porta
   \                     _porta:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char _portb
   \                     _portb:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char _portc
   \                     _portc:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char _portd
   \                     _portd:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char _porte
   \                     _porte:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char _portf
   \                     _portf:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char _portg
   \                     _portg:
   \   00000000                      DS8 1

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void _outport(unsigned char, char)
   \                     _outport:
   \   00000000   5001               SUBI    R16, 1
   \   00000002   F069               BREQ    ??_outport_0
   \   00000004   950A               DEC     R16
   \   00000006   F089               BREQ    ??_outport_1
   \   00000008   950A               DEC     R16
   \   0000000A   F0A9               BREQ    ??_outport_2
   \   0000000C   950A               DEC     R16
   \   0000000E   F0C9               BREQ    ??_outport_3
   \   00000010   950A               DEC     R16
   \   00000012   F0E9               BREQ    ??_outport_4
   \   00000014   950A               DEC     R16
   \   00000016   F109               BREQ    ??_outport_5
   \   00000018   950A               DEC     R16
   \   0000001A   F131               BREQ    ??_outport_6
   \   0000001C   9508               RET
   \                     ??_outport_0:
   \   0000001E   9310....           STS     _porta, R17
   \   00000022   9100....           LDS     R16, _porta
   \   00000026   BB0B               OUT     0x1B, R16
   \   00000028   9508               RET
   \                     ??_outport_1:
   \   0000002A   9310....           STS     _portb, R17
   \   0000002E   9100....           LDS     R16, _portb
   \   00000032   BB08               OUT     0x18, R16
   \   00000034   9508               RET
   \                     ??_outport_2:
   \   00000036   9310....           STS     _portc, R17
   \   0000003A   9100....           LDS     R16, _portc
   \   0000003E   BB05               OUT     0x15, R16
   \   00000040   9508               RET
   \                     ??_outport_3:
   \   00000042   9310....           STS     _portd, R17
   \   00000046   9100....           LDS     R16, _portd
   \   0000004A   BB02               OUT     0x12, R16
   \   0000004C   9508               RET
   \                     ??_outport_4:
   \   0000004E   9310....           STS     _porte, R17
   \   00000052   9100....           LDS     R16, _porte
   \   00000056   B903               OUT     0x03, R16
   \   00000058   9508               RET
   \                     ??_outport_5:
   \   0000005A   9310....           STS     _portf, R17
   \   0000005E   9100....           LDS     R16, _portf
   \   00000062   9300....           STS     _A_PORTF, R16
   \   00000066   9508               RET
   \                     ??_outport_6:
   \   00000068   9310....           STS     _portg, R17
   \   0000006C   9100....           LDS     R16, _portg
   \   00000070   9300....           STS     _A_PORTG, R16
   \   00000074   9508               RET
   \   00000076                      REQUIRE _A_PORTA
   \   00000076                      REQUIRE _A_PORTB
   \   00000076                      REQUIRE _A_PORTC
   \   00000076                      REQUIRE _A_PORTD
   \   00000076                      REQUIRE _A_PORTE
   \   00000076                      REQUIRE _A_PORTF
   \   00000076                      REQUIRE _A_PORTG

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 unsigned char _inport(unsigned char)
   \                     _inport:
   \   00000000   5001               SUBI    R16, 1
   \   00000002   F069               BREQ    ??_inport_0
   \   00000004   950A               DEC     R16
   \   00000006   F069               BREQ    ??_inport_1
   \   00000008   950A               DEC     R16
   \   0000000A   F069               BREQ    ??_inport_2
   \   0000000C   950A               DEC     R16
   \   0000000E   F069               BREQ    ??_inport_3
   \   00000010   950A               DEC     R16
   \   00000012   F069               BREQ    ??_inport_4
   \   00000014   950A               DEC     R16
   \   00000016   F069               BREQ    ??_inport_5
   \   00000018   950A               DEC     R16
   \   0000001A   F069               BREQ    ??_inport_6
   \   0000001C   C00E               RJMP    ??_inport_7
   \                     ??_inport_0:
   \   0000001E   B319               IN      R17, 0x19
   \   00000020   C00C               RJMP    ??_inport_7
   \                     ??_inport_1:
   \   00000022   B316               IN      R17, 0x16
   \   00000024   C00A               RJMP    ??_inport_7
   \                     ??_inport_2:
   \   00000026   B313               IN      R17, 0x13
   \   00000028   C008               RJMP    ??_inport_7
   \                     ??_inport_3:
   \   0000002A   B310               IN      R17, 0x10
   \   0000002C   C006               RJMP    ??_inport_7
   \                     ??_inport_4:
   \   0000002E   B111               IN      R17, 0x01
   \   00000030   C004               RJMP    ??_inport_7
   \                     ??_inport_5:
   \   00000032   B110               IN      R17, 0x00
   \   00000034   C002               RJMP    ??_inport_7
   \                     ??_inport_6:
   \   00000036   9110....           LDS     R17, _A_PING
   \                     ??_inport_7:
   \   0000003A   2F01               MOV     R16, R17
   \   0000003C   9508               RET
   \   0000003E                      REQUIRE _A_PINA
   \   0000003E                      REQUIRE _A_PINB
   \   0000003E                      REQUIRE _A_PINC
   \   0000003E                      REQUIRE _A_PIND
   \   0000003E                      REQUIRE _A_PINE
   \   0000003E                      REQUIRE _A_PINF
   \   0000003E                      REQUIRE _A_PING

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 char _inbit(unsigned char, unsigned char)
   \                     _inbit:
   \   00000000   2F20               MOV     R18, R16
   \   00000002   2F41               MOV     R20, R17
   \   00000004   E000               LDI     R16, 0
   \   00000006   5021               SUBI    R18, 1
   \   00000008   F079               BREQ    ??_inbit_0
   \   0000000A   952A               DEC     R18
   \   0000000C   F0C9               BREQ    ??_inbit_1
   \   0000000E   952A               DEC     R18
   \   00000010   F119               BREQ    ??_inbit_2
   \   00000012   952A               DEC     R18
   \   00000014   F169               BREQ    ??_inbit_3
   \   00000016   952A               DEC     R18
   \   00000018   F1B9               BREQ    ??_inbit_4
   \   0000001A   952A               DEC     R18
   \   0000001C   F409               BRNE    $+2+2
   \   0000001E   C040               RJMP    ??_inbit_5
   \   00000020   952A               DEC     R18
   \   00000022   F409               BRNE    $+2+2
   \   00000024   C049               RJMP    ??_inbit_6
   \   00000026   9508               RET
   \                     ??_inbit_0:
   \   00000028   B329               IN      R18, 0x19
   \   0000002A   E001               LDI     R16, 1
   \   0000002C   E010               LDI     R17, 0
   \   0000002E   ........           CALL    ?S_SHL_L02
   \   00000032   2320               AND     R18, R16
   \   00000034   2322               TST     R18
   \   00000036   F011               BREQ    ??_inbit_7
   \   00000038   E001               LDI     R16, 1
   \   0000003A   9508               RET
   \                     ??_inbit_7:
   \   0000003C   E000               LDI     R16, 0
   \   0000003E   9508               RET
   \                     ??_inbit_1:
   \   00000040   B326               IN      R18, 0x16
   \   00000042   E001               LDI     R16, 1
   \   00000044   E010               LDI     R17, 0
   \   00000046   ........           CALL    ?S_SHL_L02
   \   0000004A   2320               AND     R18, R16
   \   0000004C   2322               TST     R18
   \   0000004E   F011               BREQ    ??_inbit_8
   \   00000050   E001               LDI     R16, 1
   \   00000052   9508               RET
   \                     ??_inbit_8:
   \   00000054   E000               LDI     R16, 0
   \   00000056   9508               RET
   \                     ??_inbit_2:
   \   00000058   B323               IN      R18, 0x13
   \   0000005A   E001               LDI     R16, 1
   \   0000005C   E010               LDI     R17, 0
   \   0000005E   ........           CALL    ?S_SHL_L02
   \   00000062   2320               AND     R18, R16
   \   00000064   2322               TST     R18
   \   00000066   F011               BREQ    ??_inbit_9
   \   00000068   E001               LDI     R16, 1
   \   0000006A   9508               RET
   \                     ??_inbit_9:
   \   0000006C   E000               LDI     R16, 0
   \   0000006E   9508               RET
   \                     ??_inbit_3:
   \   00000070   B320               IN      R18, 0x10
   \   00000072   E001               LDI     R16, 1
   \   00000074   E010               LDI     R17, 0
   \   00000076   ........           CALL    ?S_SHL_L02
   \   0000007A   2320               AND     R18, R16
   \   0000007C   2322               TST     R18
   \   0000007E   F011               BREQ    ??_inbit_10
   \   00000080   E001               LDI     R16, 1
   \   00000082   9508               RET
   \                     ??_inbit_10:
   \   00000084   E000               LDI     R16, 0
   \   00000086   9508               RET
   \                     ??_inbit_4:
   \   00000088   B121               IN      R18, 0x01
   \   0000008A   E001               LDI     R16, 1
   \   0000008C   E010               LDI     R17, 0
   \   0000008E   ........           CALL    ?S_SHL_L02
   \   00000092   2320               AND     R18, R16
   \   00000094   2322               TST     R18
   \   00000096   F011               BREQ    ??_inbit_11
   \   00000098   E001               LDI     R16, 1
   \   0000009A   9508               RET
   \                     ??_inbit_11:
   \   0000009C   E000               LDI     R16, 0
   \   0000009E   9508               RET
   \                     ??_inbit_5:
   \   000000A0   B120               IN      R18, 0x00
   \   000000A2   E001               LDI     R16, 1
   \   000000A4   E010               LDI     R17, 0
   \   000000A6   ........           CALL    ?S_SHL_L02
   \   000000AA   2320               AND     R18, R16
   \   000000AC   2322               TST     R18
   \   000000AE   F011               BREQ    ??_inbit_12
   \   000000B0   E001               LDI     R16, 1
   \   000000B2   9508               RET
   \                     ??_inbit_12:
   \   000000B4   E000               LDI     R16, 0
   \   000000B6   9508               RET
   \                     ??_inbit_6:
   \   000000B8   9120....           LDS     R18, _A_PING
   \   000000BC   E001               LDI     R16, 1
   \   000000BE   E010               LDI     R17, 0
   \   000000C0   ........           CALL    ?S_SHL_L02
   \   000000C4   2320               AND     R18, R16
   \   000000C6   2322               TST     R18
   \   000000C8   F011               BREQ    ??_inbit_13
   \   000000CA   E001               LDI     R16, 1
   \   000000CC   9508               RET
   \                     ??_inbit_13:
   \   000000CE   E000               LDI     R16, 0
   \   000000D0   9508               RET
   \   000000D2                      REQUIRE _A_PINA
   \   000000D2                      REQUIRE _A_PINB
   \   000000D2                      REQUIRE _A_PINC
   \   000000D2                      REQUIRE _A_PIND
   \   000000D2                      REQUIRE _A_PINE
   \   000000D2                      REQUIRE _A_PINF
   \   000000D2                      REQUIRE _A_PING

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void _outbit(unsigned char, unsigned char, char)
   \                     _outbit:
   \   00000000   2F41               MOV     R20, R17
   \   00000002   5001               SUBI    R16, 1
   \   00000004   F091               BREQ    ??_outbit_0
   \   00000006   950A               DEC     R16
   \   00000008   F151               BREQ    ??_outbit_1
   \   0000000A   950A               DEC     R16
   \   0000000C   F409               BRNE    $+2+2
   \   0000000E   C041               RJMP    ??_outbit_2
   \   00000010   950A               DEC     R16
   \   00000012   F409               BRNE    $+2+2
   \   00000014   C058               RJMP    ??_outbit_3
   \   00000016   950A               DEC     R16
   \   00000018   F409               BRNE    $+2+2
   \   0000001A   C06F               RJMP    ??_outbit_4
   \   0000001C   950A               DEC     R16
   \   0000001E   F409               BRNE    $+2+2
   \   00000020   C086               RJMP    ??_outbit_5
   \   00000022   950A               DEC     R16
   \   00000024   F409               BRNE    $+2+2
   \   00000026   C09E               RJMP    ??_outbit_6
   \   00000028   9508               RET
   \                     ??_outbit_0:
   \   0000002A   2322               TST     R18
   \   0000002C   F051               BREQ    ??_outbit_7
   \   0000002E   E001               LDI     R16, 1
   \   00000030   E010               LDI     R17, 0
   \   00000032   ........           CALL    ?S_SHL_L02
   \   00000036   9110....           LDS     R17, _porta
   \   0000003A   2B10               OR      R17, R16
   \   0000003C   9310....           STS     _porta, R17
   \   00000040   C00A               RJMP    ??_outbit_8
   \                     ??_outbit_7:
   \   00000042   E001               LDI     R16, 1
   \   00000044   E010               LDI     R17, 0
   \   00000046   ........           CALL    ?S_SHL_L02
   \   0000004A   9500               COM     R16
   \   0000004C   9110....           LDS     R17, _porta
   \   00000050   2310               AND     R17, R16
   \   00000052   9310....           STS     _porta, R17
   \                     ??_outbit_8:
   \   00000056   9100....           LDS     R16, _porta
   \   0000005A   BB0B               OUT     0x1B, R16
   \   0000005C   9508               RET
   \                     ??_outbit_1:
   \   0000005E   2322               TST     R18
   \   00000060   F051               BREQ    ??_outbit_9
   \   00000062   E001               LDI     R16, 1
   \   00000064   E010               LDI     R17, 0
   \   00000066   ........           CALL    ?S_SHL_L02
   \   0000006A   9110....           LDS     R17, _portb
   \   0000006E   2B10               OR      R17, R16
   \   00000070   9310....           STS     _portb, R17
   \   00000074   C00A               RJMP    ??_outbit_10
   \                     ??_outbit_9:
   \   00000076   E001               LDI     R16, 1
   \   00000078   E010               LDI     R17, 0
   \   0000007A   ........           CALL    ?S_SHL_L02
   \   0000007E   9500               COM     R16
   \   00000080   9110....           LDS     R17, _portb
   \   00000084   2310               AND     R17, R16
   \   00000086   9310....           STS     _portb, R17
   \                     ??_outbit_10:
   \   0000008A   9100....           LDS     R16, _portb
   \   0000008E   BB08               OUT     0x18, R16
   \   00000090   9508               RET
   \                     ??_outbit_2:
   \   00000092   2322               TST     R18
   \   00000094   F051               BREQ    ??_outbit_11
   \   00000096   E001               LDI     R16, 1
   \   00000098   E010               LDI     R17, 0
   \   0000009A   ........           CALL    ?S_SHL_L02
   \   0000009E   9110....           LDS     R17, _portc
   \   000000A2   2B10               OR      R17, R16
   \   000000A4   9310....           STS     _portc, R17
   \   000000A8   C00A               RJMP    ??_outbit_12
   \                     ??_outbit_11:
   \   000000AA   E001               LDI     R16, 1
   \   000000AC   E010               LDI     R17, 0
   \   000000AE   ........           CALL    ?S_SHL_L02
   \   000000B2   9500               COM     R16
   \   000000B4   9110....           LDS     R17, _portc
   \   000000B8   2310               AND     R17, R16
   \   000000BA   9310....           STS     _portc, R17
   \                     ??_outbit_12:
   \   000000BE   9100....           LDS     R16, _portc
   \   000000C2   BB05               OUT     0x15, R16
   \   000000C4   9508               RET
   \                     ??_outbit_3:
   \   000000C6   2322               TST     R18
   \   000000C8   F051               BREQ    ??_outbit_13
   \   000000CA   E001               LDI     R16, 1
   \   000000CC   E010               LDI     R17, 0
   \   000000CE   ........           CALL    ?S_SHL_L02
   \   000000D2   9110....           LDS     R17, _portd
   \   000000D6   2B10               OR      R17, R16
   \   000000D8   9310....           STS     _portd, R17
   \   000000DC   C00A               RJMP    ??_outbit_14
   \                     ??_outbit_13:
   \   000000DE   E001               LDI     R16, 1
   \   000000E0   E010               LDI     R17, 0
   \   000000E2   ........           CALL    ?S_SHL_L02
   \   000000E6   9500               COM     R16
   \   000000E8   9110....           LDS     R17, _portd
   \   000000EC   2310               AND     R17, R16
   \   000000EE   9310....           STS     _portd, R17
   \                     ??_outbit_14:
   \   000000F2   9100....           LDS     R16, _portd
   \   000000F6   BB02               OUT     0x12, R16
   \   000000F8   9508               RET
   \                     ??_outbit_4:
   \   000000FA   2322               TST     R18
   \   000000FC   F051               BREQ    ??_outbit_15
   \   000000FE   E001               LDI     R16, 1
   \   00000100   E010               LDI     R17, 0
   \   00000102   ........           CALL    ?S_SHL_L02
   \   00000106   9110....           LDS     R17, _porte
   \   0000010A   2B10               OR      R17, R16
   \   0000010C   9310....           STS     _porte, R17
   \   00000110   C00A               RJMP    ??_outbit_16
   \                     ??_outbit_15:
   \   00000112   E001               LDI     R16, 1
   \   00000114   E010               LDI     R17, 0
   \   00000116   ........           CALL    ?S_SHL_L02
   \   0000011A   9500               COM     R16
   \   0000011C   9110....           LDS     R17, _porte
   \   00000120   2310               AND     R17, R16
   \   00000122   9310....           STS     _porte, R17
   \                     ??_outbit_16:
   \   00000126   9100....           LDS     R16, _porte
   \   0000012A   B903               OUT     0x03, R16
   \   0000012C   9508               RET
   \                     ??_outbit_5:
   \   0000012E   2322               TST     R18
   \   00000130   F051               BREQ    ??_outbit_17
   \   00000132   E001               LDI     R16, 1
   \   00000134   E010               LDI     R17, 0
   \   00000136   ........           CALL    ?S_SHL_L02
   \   0000013A   9110....           LDS     R17, _portf
   \   0000013E   2B10               OR      R17, R16
   \   00000140   9310....           STS     _portf, R17
   \   00000144   C00A               RJMP    ??_outbit_18
   \                     ??_outbit_17:
   \   00000146   E001               LDI     R16, 1
   \   00000148   E010               LDI     R17, 0
   \   0000014A   ........           CALL    ?S_SHL_L02
   \   0000014E   9500               COM     R16
   \   00000150   9110....           LDS     R17, _portf
   \   00000154   2310               AND     R17, R16
   \   00000156   9310....           STS     _portf, R17
   \                     ??_outbit_18:
   \   0000015A   9100....           LDS     R16, _portf
   \   0000015E   9300....           STS     _A_PORTF, R16
   \   00000162   9508               RET
   \                     ??_outbit_6:
   \   00000164   2322               TST     R18
   \   00000166   F051               BREQ    ??_outbit_19
   \   00000168   E001               LDI     R16, 1
   \   0000016A   E010               LDI     R17, 0
   \   0000016C   ........           CALL    ?S_SHL_L02
   \   00000170   9110....           LDS     R17, _portg
   \   00000174   2B10               OR      R17, R16
   \   00000176   9310....           STS     _portg, R17
   \   0000017A   C00A               RJMP    ??_outbit_20
   \                     ??_outbit_19:
   \   0000017C   E001               LDI     R16, 1
   \   0000017E   E010               LDI     R17, 0
   \   00000180   ........           CALL    ?S_SHL_L02
   \   00000184   9500               COM     R16
   \   00000186   9110....           LDS     R17, _portg
   \   0000018A   2310               AND     R17, R16
   \   0000018C   9310....           STS     _portg, R17
   \                     ??_outbit_20:
   \   00000190   9100....           LDS     R16, _portg
   \   00000194   9300....           STS     _A_PORTG, R16
   \   00000198   9508               RET
   \   0000019A                      REQUIRE _A_PORTA
   \   0000019A                      REQUIRE _A_PORTB
   \   0000019A                      REQUIRE _A_PORTC
   \   0000019A                      REQUIRE _A_PORTD
   \   0000019A                      REQUIRE _A_PORTE
   \   0000019A                      REQUIRE _A_PORTF
   \   0000019A                      REQUIRE _A_PORTG

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void _port_init(unsigned char, unsigned char)
   \                     _port_init:
   \   00000000   5001               SUBI    R16, 1
   \   00000002   F069               BREQ    ??_port_init_0
   \   00000004   950A               DEC     R16
   \   00000006   F069               BREQ    ??_port_init_1
   \   00000008   950A               DEC     R16
   \   0000000A   F069               BREQ    ??_port_init_2
   \   0000000C   950A               DEC     R16
   \   0000000E   F069               BREQ    ??_port_init_3
   \   00000010   950A               DEC     R16
   \   00000012   F069               BREQ    ??_port_init_4
   \   00000014   950A               DEC     R16
   \   00000016   F069               BREQ    ??_port_init_5
   \   00000018   950A               DEC     R16
   \   0000001A   F071               BREQ    ??_port_init_6
   \   0000001C   9508               RET
   \                     ??_port_init_0:
   \   0000001E   BB1A               OUT     0x1A, R17
   \   00000020   9508               RET
   \                     ??_port_init_1:
   \   00000022   BB17               OUT     0x17, R17
   \   00000024   9508               RET
   \                     ??_port_init_2:
   \   00000026   BB14               OUT     0x14, R17
   \   00000028   9508               RET
   \                     ??_port_init_3:
   \   0000002A   BB11               OUT     0x11, R17
   \   0000002C   9508               RET
   \                     ??_port_init_4:
   \   0000002E   B912               OUT     0x02, R17
   \   00000030   9508               RET
   \                     ??_port_init_5:
   \   00000032   9310....           STS     _A_DDRF, R17
   \   00000036   9508               RET
   \                     ??_port_init_6:
   \   00000038   9310....           STS     _A_DDRG, R17
   \   0000003C   9508               RET
   \   0000003E                      REQUIRE _A_DDRA
   \   0000003E                      REQUIRE _A_DDRB
   \   0000003E                      REQUIRE _A_DDRC
   \   0000003E                      REQUIRE _A_DDRD
   \   0000003E                      REQUIRE _A_DDRE
   \   0000003E                      REQUIRE _A_DDRF
   \   0000003E                      REQUIRE _A_DDRG

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void _bit_init(unsigned char, unsigned char, char)
   \                     _bit_init:
   \   00000000   2F41               MOV     R20, R17
   \   00000002   5001               SUBI    R16, 1
   \   00000004   F089               BREQ    ??_bit_init_0
   \   00000006   950A               DEC     R16
   \   00000008   F111               BREQ    ??_bit_init_1
   \   0000000A   950A               DEC     R16
   \   0000000C   F199               BREQ    ??_bit_init_2
   \   0000000E   950A               DEC     R16
   \   00000010   F409               BRNE    $+2+2
   \   00000012   C043               RJMP    ??_bit_init_3
   \   00000014   950A               DEC     R16
   \   00000016   F409               BRNE    $+2+2
   \   00000018   C053               RJMP    ??_bit_init_4
   \   0000001A   950A               DEC     R16
   \   0000001C   F409               BRNE    $+2+2
   \   0000001E   C063               RJMP    ??_bit_init_5
   \   00000020   950A               DEC     R16
   \   00000022   F409               BRNE    $+2+2
   \   00000024   C077               RJMP    ??_bit_init_6
   \   00000026   9508               RET
   \                     ??_bit_init_0:
   \   00000028   2322               TST     R18
   \   0000002A   F041               BREQ    ??_bit_init_7
   \   0000002C   E001               LDI     R16, 1
   \   0000002E   E010               LDI     R17, 0
   \   00000030   ........           CALL    ?S_SHL_L02
   \   00000034   B31A               IN      R17, 0x1A
   \   00000036   2B10               OR      R17, R16
   \   00000038   BB1A               OUT     0x1A, R17
   \   0000003A   9508               RET
   \                     ??_bit_init_7:
   \   0000003C   E001               LDI     R16, 1
   \   0000003E   E010               LDI     R17, 0
   \   00000040   ........           CALL    ?S_SHL_L02
   \   00000044   9500               COM     R16
   \   00000046   B31A               IN      R17, 0x1A
   \   00000048   2310               AND     R17, R16
   \   0000004A   BB1A               OUT     0x1A, R17
   \   0000004C   9508               RET
   \                     ??_bit_init_1:
   \   0000004E   2322               TST     R18
   \   00000050   F041               BREQ    ??_bit_init_8
   \   00000052   E001               LDI     R16, 1
   \   00000054   E010               LDI     R17, 0
   \   00000056   ........           CALL    ?S_SHL_L02
   \   0000005A   B317               IN      R17, 0x17
   \   0000005C   2B10               OR      R17, R16
   \   0000005E   BB17               OUT     0x17, R17
   \   00000060   9508               RET
   \                     ??_bit_init_8:
   \   00000062   E001               LDI     R16, 1
   \   00000064   E010               LDI     R17, 0
   \   00000066   ........           CALL    ?S_SHL_L02
   \   0000006A   9500               COM     R16
   \   0000006C   B317               IN      R17, 0x17
   \   0000006E   2310               AND     R17, R16
   \   00000070   BB17               OUT     0x17, R17
   \   00000072   9508               RET
   \                     ??_bit_init_2:
   \   00000074   2322               TST     R18
   \   00000076   F041               BREQ    ??_bit_init_9
   \   00000078   E001               LDI     R16, 1
   \   0000007A   E010               LDI     R17, 0
   \   0000007C   ........           CALL    ?S_SHL_L02
   \   00000080   B314               IN      R17, 0x14
   \   00000082   2B10               OR      R17, R16
   \   00000084   BB14               OUT     0x14, R17
   \   00000086   9508               RET
   \                     ??_bit_init_9:
   \   00000088   E001               LDI     R16, 1
   \   0000008A   E010               LDI     R17, 0
   \   0000008C   ........           CALL    ?S_SHL_L02
   \   00000090   9500               COM     R16
   \   00000092   B314               IN      R17, 0x14
   \   00000094   2310               AND     R17, R16
   \   00000096   BB14               OUT     0x14, R17
   \   00000098   9508               RET
   \                     ??_bit_init_3:
   \   0000009A   2322               TST     R18
   \   0000009C   F041               BREQ    ??_bit_init_10
   \   0000009E   E001               LDI     R16, 1
   \   000000A0   E010               LDI     R17, 0
   \   000000A2   ........           CALL    ?S_SHL_L02
   \   000000A6   B311               IN      R17, 0x11
   \   000000A8   2B10               OR      R17, R16
   \   000000AA   BB11               OUT     0x11, R17
   \   000000AC   9508               RET
   \                     ??_bit_init_10:
   \   000000AE   E001               LDI     R16, 1
   \   000000B0   E010               LDI     R17, 0
   \   000000B2   ........           CALL    ?S_SHL_L02
   \   000000B6   9500               COM     R16
   \   000000B8   B311               IN      R17, 0x11
   \   000000BA   2310               AND     R17, R16
   \   000000BC   BB11               OUT     0x11, R17
   \   000000BE   9508               RET
   \                     ??_bit_init_4:
   \   000000C0   2322               TST     R18
   \   000000C2   F041               BREQ    ??_bit_init_11
   \   000000C4   E001               LDI     R16, 1
   \   000000C6   E010               LDI     R17, 0
   \   000000C8   ........           CALL    ?S_SHL_L02
   \   000000CC   B112               IN      R17, 0x02
   \   000000CE   2B10               OR      R17, R16
   \   000000D0   B912               OUT     0x02, R17
   \   000000D2   9508               RET
   \                     ??_bit_init_11:
   \   000000D4   E001               LDI     R16, 1
   \   000000D6   E010               LDI     R17, 0
   \   000000D8   ........           CALL    ?S_SHL_L02
   \   000000DC   9500               COM     R16
   \   000000DE   B112               IN      R17, 0x02
   \   000000E0   2310               AND     R17, R16
   \   000000E2   B912               OUT     0x02, R17
   \   000000E4   9508               RET
   \                     ??_bit_init_5:
   \   000000E6   2322               TST     R18
   \   000000E8   F051               BREQ    ??_bit_init_12
   \   000000EA   E001               LDI     R16, 1
   \   000000EC   E010               LDI     R17, 0
   \   000000EE   ........           CALL    ?S_SHL_L02
   \   000000F2   9110....           LDS     R17, _A_DDRF
   \   000000F6   2B10               OR      R17, R16
   \   000000F8   9310....           STS     _A_DDRF, R17
   \   000000FC   9508               RET
   \                     ??_bit_init_12:
   \   000000FE   E001               LDI     R16, 1
   \   00000100   E010               LDI     R17, 0
   \   00000102   ........           CALL    ?S_SHL_L02
   \   00000106   9500               COM     R16
   \   00000108   9110....           LDS     R17, _A_DDRF
   \   0000010C   2310               AND     R17, R16
   \   0000010E   9310....           STS     _A_DDRF, R17
   \   00000112   9508               RET
   \                     ??_bit_init_6:
   \   00000114   2322               TST     R18
   \   00000116   F051               BREQ    ??_bit_init_13
   \   00000118   E001               LDI     R16, 1
   \   0000011A   E010               LDI     R17, 0
   \   0000011C   ........           CALL    ?S_SHL_L02
   \   00000120   9110....           LDS     R17, _A_DDRG
   \   00000124   2B10               OR      R17, R16
   \   00000126   9310....           STS     _A_DDRG, R17
   \   0000012A   9508               RET
   \                     ??_bit_init_13:
   \   0000012C   E001               LDI     R16, 1
   \   0000012E   E010               LDI     R17, 0
   \   00000130   ........           CALL    ?S_SHL_L02
   \   00000134   9500               COM     R16
   \   00000136   9110....           LDS     R17, _A_DDRG
   \   0000013A   2310               AND     R17, R16
   \   0000013C   9310....           STS     _A_DDRG, R17
   \   00000140   9508               RET
   \   00000142                      REQUIRE _A_DDRA
   \   00000142                      REQUIRE _A_DDRB
   \   00000142                      REQUIRE _A_DDRC
   \   00000142                      REQUIRE _A_DDRD
   \   00000142                      REQUIRE _A_DDRE
   \   00000142                      REQUIRE _A_DDRF
   \   00000142                      REQUIRE _A_DDRG

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char inByte
   \                     inByte:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char grAck
   \                     grAck:
   \   00000000                      DS8 1

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void I2C_START(void)
   \                     I2C_START:
   \   00000000   9A91               SBI     0x12, 0x01
   \   00000002   9A90               SBI     0x12, 0x00
   \   00000004   E00A               LDI     R16, 10
   \   00000006   E010               LDI     R17, 0
   \   00000008   ....               RCALL   DelayTime
   \   0000000A   9891               CBI     0x12, 0x01
   \   0000000C   E208               LDI     R16, 40
   \   0000000E   E010               LDI     R17, 0
   \   00000010   ....               RCALL   DelayTime
   \   00000012   9890               CBI     0x12, 0x00
   \   00000014   E906               LDI     R16, 150
   \   00000016   E010               LDI     R17, 0
   \   00000018   ....               RCALL   DelayTime
   \   0000001A   9508               RET
   \   0000001C                      REQUIRE _A_PORTD

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void I2C_STOP(void)
   \                     I2C_STOP:
   \   00000000   E906               LDI     R16, 150
   \   00000002   E010               LDI     R17, 0
   \   00000004   ....               RCALL   DelayTime
   \   00000006   9891               CBI     0x12, 0x01
   \   00000008   E00A               LDI     R16, 10
   \   0000000A   E010               LDI     R17, 0
   \   0000000C   ....               RCALL   DelayTime
   \   0000000E   9A90               SBI     0x12, 0x00
   \   00000010   E208               LDI     R16, 40
   \   00000012   E010               LDI     R17, 0
   \   00000014   ....               RCALL   DelayTime
   \   00000016   9A91               SBI     0x12, 0x01
   \   00000018   9508               RET
   \   0000001A                      REQUIRE _A_PORTD

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 unsigned char I2C_SHOUT(unsigned char)
   \                     I2C_SHOUT:
   \   00000000   2F50               MOV     R21, R16
   \   00000002   E040               LDI     R20, 0
   \   00000004   C00F               RJMP    ??I2C_SHOUT_0
   \                     ??I2C_SHOUT_1:
   \   00000006   9890               CBI     0x12, 0x00
   \   00000008   E00A               LDI     R16, 10
   \   0000000A   E010               LDI     R17, 0
   \   0000000C   ....               RCALL   DelayTime
   \   0000000E   2F05               MOV     R16, R21
   \   00000010   FD07               SBRC    R16, 7
   \   00000012   9A91               SBI     0x12, 0x01
   \                     ??I2C_SHOUT_2:
   \   00000014   FF07               SBRS    R16, 7
   \   00000016   9891               CBI     0x12, 0x01
   \                     ??I2C_SHOUT_3:
   \   00000018   0F55               LSL     R21
   \   0000001A   9A90               SBI     0x12, 0x00
   \   0000001C   E00A               LDI     R16, 10
   \   0000001E   E010               LDI     R17, 0
   \   00000020   ....               RCALL   DelayTime
   \   00000022   9543               INC     R20
   \                     ??I2C_SHOUT_0:
   \   00000024   3048               CPI     R20, 8
   \   00000026   F378               BRCS    ??I2C_SHOUT_1
   \   00000028   9890               CBI     0x12, 0x00
   \   0000002A   E104               LDI     R16, 20
   \   0000002C   E010               LDI     R17, 0
   \   0000002E   ....               RCALL   DelayTime
   \   00000030   9889               CBI     0x11, 0x01
   \   00000032   9A91               SBI     0x12, 0x01
   \   00000034   E00A               LDI     R16, 10
   \   00000036   E010               LDI     R17, 0
   \   00000038   ....               RCALL   DelayTime
   \   0000003A   9B81               SBIS    0x10, 0x01
   \   0000003C   C002               RJMP    ??I2C_SHOUT_4
   \   0000003E   E041               LDI     R20, 1
   \   00000040   C001               RJMP    ??I2C_SHOUT_5
   \                     ??I2C_SHOUT_4:
   \   00000042   E040               LDI     R20, 0
   \                     ??I2C_SHOUT_5:
   \   00000044   2F04               MOV     R16, R20
   \   00000046   FD00               SBRC    R16, 0
   \   00000048   9A91               SBI     0x12, 0x01
   \                     ??I2C_SHOUT_6:
   \   0000004A   FF00               SBRS    R16, 0
   \   0000004C   9891               CBI     0x12, 0x01
   \                     ??I2C_SHOUT_7:
   \   0000004E   E104               LDI     R16, 20
   \   00000050   E010               LDI     R17, 0
   \   00000052   ....               RCALL   DelayTime
   \   00000054   9A90               SBI     0x12, 0x00
   \   00000056   E10E               LDI     R16, 30
   \   00000058   E010               LDI     R17, 0
   \   0000005A   ....               RCALL   DelayTime
   \   0000005C   9890               CBI     0x12, 0x00
   \   0000005E   9A89               SBI     0x11, 0x01
   \   00000060   E604               LDI     R16, 100
   \   00000062   E010               LDI     R17, 0
   \   00000064   ....               RCALL   DelayTime
   \   00000066   2F04               MOV     R16, R20
   \   00000068   9508               RET
   \   0000006A                      REQUIRE _A_PORTD
   \   0000006A                      REQUIRE _A_DDRD
   \   0000006A                      REQUIRE _A_PIND

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void I2C_SHIN(unsigned char)
   \                     I2C_SHIN:
   \   00000000   2F50               MOV     R21, R16
   \   00000002   E000               LDI     R16, 0
   \   00000004   9300....           STS     inByte, R16
   \   00000008   E000               LDI     R16, 0
   \   0000000A   9300....           STS     grAck, R16
   \   0000000E   E00A               LDI     R16, 10
   \   00000010   E010               LDI     R17, 0
   \   00000012   ....               RCALL   DelayTime
   \   00000014   9889               CBI     0x11, 0x01
   \   00000016   9A91               SBI     0x12, 0x01
   \   00000018   E00A               LDI     R16, 10
   \   0000001A   E010               LDI     R17, 0
   \   0000001C   ....               RCALL   DelayTime
   \   0000001E   E040               LDI     R20, 0
   \   00000020   C012               RJMP    ??I2C_SHIN_0
   \                     ??I2C_SHIN_1:
   \   00000022   E000               LDI     R16, 0
   \                     ??I2C_SHIN_2:
   \   00000024   9110....           LDS     R17, inByte
   \   00000028   2B10               OR      R17, R16
   \   0000002A   9310....           STS     inByte, R17
   \   0000002E   3047               CPI     R20, 7
   \   00000030   F428               BRCC    ??I2C_SHIN_3
   \   00000032   9100....           LDS     R16, inByte
   \   00000036   0F00               LSL     R16
   \   00000038   9300....           STS     inByte, R16
   \                     ??I2C_SHIN_3:
   \   0000003C   9A90               SBI     0x12, 0x00
   \   0000003E   E00A               LDI     R16, 10
   \   00000040   E010               LDI     R17, 0
   \   00000042   ....               RCALL   DelayTime
   \   00000044   9543               INC     R20
   \                     ??I2C_SHIN_0:
   \   00000046   3048               CPI     R20, 8
   \   00000048   F440               BRCC    ??I2C_SHIN_4
   \   0000004A   9890               CBI     0x12, 0x00
   \   0000004C   E00A               LDI     R16, 10
   \   0000004E   E010               LDI     R17, 0
   \   00000050   ....               RCALL   DelayTime
   \   00000052   9B81               SBIS    0x10, 0x01
   \   00000054   CFE6               RJMP    ??I2C_SHIN_1
   \   00000056   E001               LDI     R16, 1
   \   00000058   CFE5               RJMP    ??I2C_SHIN_2
   \                     ??I2C_SHIN_4:
   \   0000005A   9890               CBI     0x12, 0x00
   \   0000005C   E10E               LDI     R16, 30
   \   0000005E   E010               LDI     R17, 0
   \   00000060   ....               RCALL   DelayTime
   \   00000062   9A89               SBI     0x11, 0x01
   \   00000064   9891               CBI     0x12, 0x01
   \   00000066   2355               TST     R21
   \   00000068   F421               BRNE    ??I2C_SHIN_5
   \   0000006A   E000               LDI     R16, 0
   \   0000006C   9300....           STS     grAck, R16
   \   00000070   C003               RJMP    ??I2C_SHIN_6
   \                     ??I2C_SHIN_5:
   \   00000072   E001               LDI     R16, 1
   \   00000074   9300....           STS     grAck, R16
   \                     ??I2C_SHIN_6:
   \   00000078   ....               LDI     R30, LOW(grAck)
   \   0000007A   ....               LDI     R31, (grAck) >> 8
   \   0000007C   8100               LD      R16, Z
   \   0000007E   FD00               SBRC    R16, 0
   \   00000080   9A91               SBI     0x12, 0x01
   \                     ??I2C_SHIN_7:
   \   00000082   FF00               SBRS    R16, 0
   \   00000084   9891               CBI     0x12, 0x01
   \                     ??I2C_SHIN_8:
   \   00000086   E104               LDI     R16, 20
   \   00000088   E010               LDI     R17, 0
   \   0000008A   ....               RCALL   DelayTime
   \   0000008C   9A90               SBI     0x12, 0x00
   \   0000008E   E10E               LDI     R16, 30
   \   00000090   E010               LDI     R17, 0
   \   00000092   ....               RCALL   DelayTime
   \   00000094   9890               CBI     0x12, 0x00
   \   00000096   E604               LDI     R16, 100
   \   00000098   E010               LDI     R17, 0
   \   0000009A   ....               RCALL   DelayTime
   \   0000009C   9508               RET
   \   0000009E                      REQUIRE _A_DDRD
   \   0000009E                      REQUIRE _A_PORTD
   \   0000009E                      REQUIRE _A_PIND

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void I2C_Write(unsigned char, unsigned char, unsigned char)
   \                     I2C_Write:
   \   00000000   2F40               MOV     R20, R16
   \   00000002   2F61               MOV     R22, R17
   \   00000004   2F72               MOV     R23, R18
   \   00000006   ....               RCALL   I2C_START
   \   00000008   2F04               MOV     R16, R20
   \   0000000A   ....               RCALL   I2C_SHOUT
   \   0000000C   2F06               MOV     R16, R22
   \   0000000E   ....               RCALL   I2C_SHOUT
   \   00000010   2F07               MOV     R16, R23
   \   00000012   ....               RCALL   I2C_SHOUT
   \   00000014   ....               RCALL   I2C_STOP
   \   00000016   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void rom_cnt_check()
   \                     rom_cnt_check:
   \   00000000   ....               LDI     R30, LOW(rom_cnt)
   \   00000002   ....               LDI     R31, (rom_cnt) >> 8
   \   00000004   8100               LD      R16, Z
   \   00000006   8111               LDD     R17, Z+1
   \   00000008   8122               LDD     R18, Z+2
   \   0000000A   8133               LDD     R19, Z+3
   \   0000000C   3001               CPI     R16, 1
   \   0000000E   E345               LDI     R20, 53
   \   00000010   0714               CPC     R17, R20
   \   00000012   E04C               LDI     R20, 12
   \   00000014   0724               CPC     R18, R20
   \   00000016   E040               LDI     R20, 0
   \   00000018   0734               CPC     R19, R20
   \   0000001A   F408               BRCC    $+2+2
   \   0000001C   C05D               RJMP    ??rom_cnt_check_0
   \   0000001E   ....               LDI     R30, LOW(rom_add_pt)
   \   00000020   ....               LDI     R31, (rom_add_pt) >> 8
   \   00000022   8100               LD      R16, Z
   \   00000024   8111               LDD     R17, Z+1
   \   00000026   3F0F               CPI     R16, 255
   \   00000028   E027               LDI     R18, 7
   \   0000002A   0712               CPC     R17, R18
   \   0000002C   F008               BRCS    $+2+2
   \   0000002E   C062               RJMP    ??rom_cnt_check_1
   \   00000030   ....               LDI     R30, LOW(rom_add_pt)
   \   00000032   ....               LDI     R31, (rom_add_pt) >> 8
   \   00000034   8100               LD      R16, Z
   \   00000036   8111               LDD     R17, Z+1
   \   00000038   5F0B               SUBI    R16, 251
   \   0000003A   4F1F               SBCI    R17, 255
   \   0000003C   8300               ST      Z, R16
   \   0000003E   8311               STD     Z+1, R17
   \   00000040   ....               LDI     R30, LOW(rom_add_pt)
   \   00000042   ....               LDI     R31, (rom_add_pt) >> 8
   \   00000044   8100               LD      R16, Z
   \   00000046   700F               ANDI    R16, 0x0F
   \   00000048   300F               CPI     R16, 15
   \   0000004A   F441               BRNE    ??rom_cnt_check_2
   \   0000004C   ....               LDI     R30, LOW(rom_add_pt)
   \   0000004E   ....               LDI     R31, (rom_add_pt) >> 8
   \   00000050   8100               LD      R16, Z
   \   00000052   8111               LDD     R17, Z+1
   \   00000054   5F0F               SUBI    R16, 255
   \   00000056   4F1F               SBCI    R17, 255
   \   00000058   8300               ST      Z, R16
   \   0000005A   8311               STD     Z+1, R17
   \                     ??rom_cnt_check_2:
   \   0000005C   ....               LDI     R30, LOW(rom_cnt)
   \   0000005E   ....               LDI     R31, (rom_cnt) >> 8
   \   00000060   E000               LDI     R16, 0
   \   00000062   8300               ST      Z, R16
   \   00000064   E000               LDI     R16, 0
   \   00000066   8301               STD     Z+1, R16
   \   00000068   E000               LDI     R16, 0
   \   0000006A   8302               STD     Z+2, R16
   \   0000006C   E000               LDI     R16, 0
   \   0000006E   8303               STD     Z+3, R16
   \   00000070   ....               LDI     R30, LOW(rom_add_pt)
   \   00000072   ....               LDI     R31, (rom_add_pt) >> 8
   \   00000074   8100               LD      R16, Z
   \   00000076   8111               LDD     R17, Z+1
   \   00000078   3F0F               CPI     R16, 255
   \   0000007A   E027               LDI     R18, 7
   \   0000007C   0712               CPC     R17, R18
   \   0000007E   F460               BRCC    ??rom_cnt_check_3
   \   00000080   ....               LDI     R30, LOW(rom_add_pt)
   \   00000082   ....               LDI     R31, (rom_add_pt) >> 8
   \   00000084   8111               LDD     R17, Z+1
   \   00000086   2F01               MOV     R16, R17
   \   00000088   9300....           STS     rom_add_pt_high, R16
   \   0000008C   ....               LDI     R30, LOW(rom_add_pt)
   \   0000008E   ....               LDI     R31, (rom_add_pt) >> 8
   \   00000090   8100               LD      R16, Z
   \   00000092   9300....           STS     rom_add_pt_low, R16
   \   00000096   C006               RJMP    ??rom_cnt_check_4
   \                     ??rom_cnt_check_3:
   \   00000098   E800               LDI     R16, 128
   \   0000009A   9300....           STS     rom_add_pt_high, R16
   \   0000009E   E000               LDI     R16, 0
   \   000000A0   9300....           STS     rom_add_pt_low, R16
   \                     ??rom_cnt_check_4:
   \   000000A4   9100....           LDS     R16, rom_add_pt_high
   \   000000A8   9110....           LDS     R17, rom_add_pt_low
   \   000000AC   0F01               ADD     R16, R17
   \   000000AE   9300....           STS     rom_add_check_sum, R16
   \   000000B2   ....               RCALL   I2C_START
   \   000000B4   EA00               LDI     R16, 160
   \   000000B6   ....               RCALL   I2C_SHOUT
   \   000000B8   E000               LDI     R16, 0
   \   000000BA   ....               RCALL   I2C_SHOUT
   \   000000BC   9100....           LDS     R16, rom_add_pt_high
   \   000000C0   ....               RCALL   I2C_SHOUT
   \   000000C2   9100....           LDS     R16, rom_add_pt_low
   \   000000C6   ....               RCALL   I2C_SHOUT
   \   000000C8   9100....           LDS     R16, rom_add_check_sum
   \   000000CC   ....               RCALL   I2C_SHOUT
   \   000000CE   ....               RCALL   I2C_STOP
   \   000000D0   E00A               LDI     R16, 10
   \   000000D2   E010               LDI     R17, 0
   \   000000D4   ....               RCALL   DelayTime_ms
   \   000000D6   9508               RET
   \                     ??rom_cnt_check_0:
   \   000000D8   ....               LDI     R30, LOW(rom_cnt)
   \   000000DA   ....               LDI     R31, (rom_cnt) >> 8
   \   000000DC   8100               LD      R16, Z
   \   000000DE   8111               LDD     R17, Z+1
   \   000000E0   8122               LDD     R18, Z+2
   \   000000E2   8133               LDD     R19, Z+3
   \   000000E4   5F0F               SUBI    R16, 255
   \   000000E6   4F1F               SBCI    R17, 255
   \   000000E8   4F2F               SBCI    R18, 255
   \   000000EA   4F3F               SBCI    R19, 255
   \   000000EC   8300               ST      Z, R16
   \   000000EE   8311               STD     Z+1, R17
   \   000000F0   8322               STD     Z+2, R18
   \   000000F2   8333               STD     Z+3, R19
   \                     ??rom_cnt_check_1:
   \   000000F4   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void rom_write_multi()
   \                     rom_write_multi:
   \   00000000   ....               RCALL   rom_cnt_check
   \   00000002   ....               LDI     R30, LOW(rom_add_pt)
   \   00000004   ....               LDI     R31, (rom_add_pt) >> 8
   \   00000006   8100               LD      R16, Z
   \   00000008   8111               LDD     R17, Z+1
   \   0000000A   3F0F               CPI     R16, 255
   \   0000000C   E027               LDI     R18, 7
   \   0000000E   0712               CPC     R17, R18
   \   00000010   F008               BRCS    $+2+2
   \   00000012   C056               RJMP    ??rom_write_multi_0
   \   00000014   E047               LDI     R20, 7
   \   00000016   ....               LDI     R30, LOW(rom_add_pt)
   \   00000018   ....               LDI     R31, (rom_add_pt) >> 8
   \   0000001A   8100               LD      R16, Z
   \   0000001C   8111               LDD     R17, Z+1
   \   0000001E   ........           CALL    ?US_SHR_L02
   \   00000022   700E               ANDI    R16, 0x0E
   \   00000024   5600               SUBI    R16, 96
   \   00000026   9300....           STS     rom_device_high, R16
   \   0000002A   ....               LDI     R30, LOW(rom_add_pt)
   \   0000002C   ....               LDI     R31, (rom_add_pt) >> 8
   \   0000002E   8100               LD      R16, Z
   \   00000030   9300....           STS     rom_device_low, R16
   \   00000034   ....               LDI     R30, LOW(rom_cnt)
   \   00000036   ....               LDI     R31, (rom_cnt) >> 8
   \   00000038   8122               LDD     R18, Z+2
   \   0000003A   2F02               MOV     R16, R18
   \   0000003C   9300....           STS     rom_cnt_high, R16
   \   00000040   ....               LDI     R30, LOW(rom_cnt)
   \   00000042   ....               LDI     R31, (rom_cnt) >> 8
   \   00000044   8111               LDD     R17, Z+1
   \   00000046   2F01               MOV     R16, R17
   \   00000048   9300....           STS     rom_cnt_mid, R16
   \   0000004C   ....               LDI     R30, LOW(rom_cnt)
   \   0000004E   ....               LDI     R31, (rom_cnt) >> 8
   \   00000050   8100               LD      R16, Z
   \   00000052   9300....           STS     rom_cnt_low, R16
   \   00000056   9100....           LDS     R16, ch_led_data
   \   0000005A   9300....           STS     rom_func_data, R16
   \   0000005E   9100....           LDS     R16, rom_func_data
   \   00000062   0F00               LSL     R16
   \   00000064   0F00               LSL     R16
   \   00000066   0F00               LSL     R16
   \   00000068   9300....           STS     rom_func_data, R16
   \   0000006C   9100....           LDS     R16, filter_flag
   \   00000070   9110....           LDS     R17, rom_func_data
   \   00000074   0F10               ADD     R17, R16
   \   00000076   9310....           STS     rom_func_data, R17
   \   0000007A   9100....           LDS     R16, rom_func_data
   \   0000007E   0F00               LSL     R16
   \   00000080   9300....           STS     rom_func_data, R16
   \   00000084   9100....           LDS     R16, phase_data
   \   00000088   9110....           LDS     R17, rom_func_data
   \   0000008C   0F10               ADD     R17, R16
   \   0000008E   9310....           STS     rom_func_data, R17
   \   00000092   ....               RCALL   I2C_START
   \   00000094   9100....           LDS     R16, rom_device_high
   \   00000098   ....               RCALL   I2C_SHOUT
   \   0000009A   9100....           LDS     R16, rom_device_low
   \   0000009E   ....               RCALL   I2C_SHOUT
   \   000000A0   9100....           LDS     R16, rom_cnt_high
   \   000000A4   ....               RCALL   I2C_SHOUT
   \   000000A6   9100....           LDS     R16, rom_cnt_mid
   \   000000AA   ....               RCALL   I2C_SHOUT
   \   000000AC   9100....           LDS     R16, rom_cnt_low
   \   000000B0   ....               RCALL   I2C_SHOUT
   \   000000B2   9100....           LDS     R16, vol_dB
   \   000000B6   ....               RCALL   I2C_SHOUT
   \   000000B8   9100....           LDS     R16, rom_func_data
   \   000000BC   ....               RCALL   I2C_SHOUT
   \   000000BE   ....               RCALL   I2C_STOP
   \                     ??rom_write_multi_0:
   \   000000C0   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 unsigned char I2C_Read(unsigned char, unsigned char)
   \                     I2C_Read:
   \   00000000   2F60               MOV     R22, R16
   \   00000002   2F71               MOV     R23, R17
   \   00000004   ....               RCALL   I2C_START
   \   00000006   2F06               MOV     R16, R22
   \   00000008   ....               RCALL   I2C_SHOUT
   \   0000000A   2F07               MOV     R16, R23
   \   0000000C   ....               RCALL   I2C_SHOUT
   \   0000000E   ....               RCALL   I2C_STOP
   \   00000010   ....               RCALL   I2C_START
   \   00000012   9563               INC     R22
   \   00000014   2F06               MOV     R16, R22
   \   00000016   ....               RCALL   I2C_SHOUT
   \   00000018   E001               LDI     R16, 1
   \   0000001A   ....               RCALL   I2C_SHIN
   \   0000001C   9140....           LDS     R20, inByte
   \   00000020   ....               RCALL   I2C_STOP
   \   00000022   2F04               MOV     R16, R20
   \   00000024   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 unsigned char rom_I2C_Read(unsigned int)
   \                     rom_I2C_Read:
   \   00000000   0198               MOVW    R19:R18, R17:R16
   \   00000002   E047               LDI     R20, 7
   \   00000004   0189               MOVW    R17:R16, R19:R18
   \   00000006   ........           CALL    ?US_SHR_L02
   \   0000000A   700E               ANDI    R16, 0x0E
   \   0000000C   5600               SUBI    R16, 96
   \   0000000E   2F12               MOV     R17, R18
   \   00000010   ....               RCALL   I2C_Read
   \   00000012   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void reset_eeprom(unsigned int)
   \                     reset_eeprom:
   \   00000000   0198               MOVW    R19:R18, R17:R16
   \   00000002   E047               LDI     R20, 7
   \   00000004   0189               MOVW    R17:R16, R19:R18
   \   00000006   ........           CALL    ?US_SHR_L02
   \   0000000A   700E               ANDI    R16, 0x0E
   \   0000000C   5600               SUBI    R16, 96
   \   0000000E   2F12               MOV     R17, R18
   \   00000010   EF2F               LDI     R18, 255
   \   00000012   ....               RCALL   I2C_Write
   \   00000014   E00A               LDI     R16, 10
   \   00000016   E010               LDI     R17, 0
   \   00000018   ....               RCALL   DelayTime_ms
   \   0000001A   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void test_set_eeprom(unsigned int, unsigned char)
   \                     test_set_eeprom:
   \   00000000   01B8               MOVW    R23:R22, R17:R16
   \   00000002   E047               LDI     R20, 7
   \   00000004   018B               MOVW    R17:R16, R23:R22
   \   00000006   ........           CALL    ?US_SHR_L02
   \   0000000A   700E               ANDI    R16, 0x0E
   \   0000000C   5600               SUBI    R16, 96
   \   0000000E   2F16               MOV     R17, R22
   \   00000010   ....               RCALL   I2C_Write
   \   00000012   E005               LDI     R16, 5
   \   00000014   E010               LDI     R17, 0
   \   00000016   ....               RCALL   DelayTime_ms
   \   00000018   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void dot_matrix_clear()
   \                     dot_matrix_clear:
   \   00000000   9897               CBI     0x12, 0x07
   \   00000002   E000               LDI     R16, 0
   \   00000004   9300....           STS     dot_light_reg, R16
   \   00000008   9508               RET
   \   0000000A                      REQUIRE _A_PORTD

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void dot_string_digit()
   \                     dot_string_digit:
   \   00000000   011C               MOVW    R3:R2, R25:R24
   \   00000002   E060               LDI     R22, 0
   \   00000004   9A97               SBI     0x12, 0x07
   \   00000006   91000062           LDS     R16, 98
   \   0000000A   6008               ORI     R16, 0x08
   \   0000000C   93000062           STS     98, R16
   \   00000010   E070               LDI     R23, 0
   \   00000012   C005               RJMP    ??dot_string_digit_0
   \                     ??dot_string_digit_1:
   \   00000014   E400               LDI     R16, 64
   \   00000016   E016               LDI     R17, 6
   \   00000018   ....               RCALL   DelayTime
   \   0000001A   E060               LDI     R22, 0
   \   0000001C   9573               INC     R23
   \                     ??dot_string_digit_0:
   \   0000001E   3072               CPI     R23, 2
   \   00000020   F008               BRCS    $+2+2
   \   00000022   C0CC               RJMP    ??dot_string_digit_2
   \   00000024   E080               LDI     R24, 0
   \   00000026   C00A               RJMP    ??dot_string_digit_3
   \                     ??dot_string_digit_4:
   \   00000028   91000065           LDS     R16, 101
   \   0000002C   6002               ORI     R16, 0x02
   \   0000002E   93000065           STS     101, R16
   \                     ??dot_string_digit_5:
   \   00000032   E100               LDI     R16, 16
   \   00000034   E010               LDI     R17, 0
   \   00000036   ....               RCALL   DelayTime
   \   00000038   9563               INC     R22
   \   0000003A   9583               INC     R24
   \                     ??dot_string_digit_3:
   \   0000003C   3088               CPI     R24, 8
   \   0000003E   F750               BRCC    ??dot_string_digit_1
   \   00000040   2366               TST     R22
   \   00000042   F481               BRNE    ??dot_string_digit_6
   \   00000044   91000062           LDS     R16, 98
   \   00000048   7F0B               ANDI    R16, 0xFB
   \   0000004A   93000062           STS     98, R16
   \   0000004E   91000062           LDS     R16, 98
   \   00000052   7F0D               ANDI    R16, 0xFD
   \   00000054   93000062           STS     98, R16
   \   00000058   91000062           LDS     R16, 98
   \   0000005C   7F0E               ANDI    R16, 0xFE
   \   0000005E   93000062           STS     98, R16
   \   00000062   C07D               RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_6:
   \   00000064   3061               CPI     R22, 1
   \   00000066   F481               BRNE    ??dot_string_digit_8
   \   00000068   91000062           LDS     R16, 98
   \   0000006C   7F0B               ANDI    R16, 0xFB
   \   0000006E   93000062           STS     98, R16
   \   00000072   91000062           LDS     R16, 98
   \   00000076   7F0D               ANDI    R16, 0xFD
   \   00000078   93000062           STS     98, R16
   \   0000007C   91000062           LDS     R16, 98
   \   00000080   6001               ORI     R16, 0x01
   \   00000082   93000062           STS     98, R16
   \   00000086   C06B               RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_8:
   \   00000088   3062               CPI     R22, 2
   \   0000008A   F481               BRNE    ??dot_string_digit_9
   \   0000008C   91000062           LDS     R16, 98
   \   00000090   7F0B               ANDI    R16, 0xFB
   \   00000092   93000062           STS     98, R16
   \   00000096   91000062           LDS     R16, 98
   \   0000009A   6002               ORI     R16, 0x02
   \   0000009C   93000062           STS     98, R16
   \   000000A0   91000062           LDS     R16, 98
   \   000000A4   7F0E               ANDI    R16, 0xFE
   \   000000A6   93000062           STS     98, R16
   \   000000AA   C059               RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_9:
   \   000000AC   3063               CPI     R22, 3
   \   000000AE   F481               BRNE    ??dot_string_digit_10
   \   000000B0   91000062           LDS     R16, 98
   \   000000B4   7F0B               ANDI    R16, 0xFB
   \   000000B6   93000062           STS     98, R16
   \   000000BA   91000062           LDS     R16, 98
   \   000000BE   6002               ORI     R16, 0x02
   \   000000C0   93000062           STS     98, R16
   \   000000C4   91000062           LDS     R16, 98
   \   000000C8   6001               ORI     R16, 0x01
   \   000000CA   93000062           STS     98, R16
   \   000000CE   C047               RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_10:
   \   000000D0   3064               CPI     R22, 4
   \   000000D2   F481               BRNE    ??dot_string_digit_11
   \   000000D4   91000062           LDS     R16, 98
   \   000000D8   6004               ORI     R16, 0x04
   \   000000DA   93000062           STS     98, R16
   \   000000DE   91000062           LDS     R16, 98
   \   000000E2   7F0D               ANDI    R16, 0xFD
   \   000000E4   93000062           STS     98, R16
   \   000000E8   91000062           LDS     R16, 98
   \   000000EC   7F0E               ANDI    R16, 0xFE
   \   000000EE   93000062           STS     98, R16
   \   000000F2   C035               RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_11:
   \   000000F4   3065               CPI     R22, 5
   \   000000F6   F481               BRNE    ??dot_string_digit_12
   \   000000F8   91000062           LDS     R16, 98
   \   000000FC   6004               ORI     R16, 0x04
   \   000000FE   93000062           STS     98, R16
   \   00000102   91000062           LDS     R16, 98
   \   00000106   7F0D               ANDI    R16, 0xFD
   \   00000108   93000062           STS     98, R16
   \   0000010C   91000062           LDS     R16, 98
   \   00000110   6001               ORI     R16, 0x01
   \   00000112   93000062           STS     98, R16
   \   00000116   C023               RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_12:
   \   00000118   3066               CPI     R22, 6
   \   0000011A   F481               BRNE    ??dot_string_digit_13
   \   0000011C   91000062           LDS     R16, 98
   \   00000120   6004               ORI     R16, 0x04
   \   00000122   93000062           STS     98, R16
   \   00000126   91000062           LDS     R16, 98
   \   0000012A   6002               ORI     R16, 0x02
   \   0000012C   93000062           STS     98, R16
   \   00000130   91000062           LDS     R16, 98
   \   00000134   7F0E               ANDI    R16, 0xFE
   \   00000136   93000062           STS     98, R16
   \   0000013A   C011               RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_13:
   \   0000013C   3067               CPI     R22, 7
   \   0000013E   F479               BRNE    ??dot_string_digit_7
   \   00000140   91000062           LDS     R16, 98
   \   00000144   6004               ORI     R16, 0x04
   \   00000146   93000062           STS     98, R16
   \   0000014A   91000062           LDS     R16, 98
   \   0000014E   6002               ORI     R16, 0x02
   \   00000150   93000062           STS     98, R16
   \   00000154   91000062           LDS     R16, 98
   \   00000158   6001               ORI     R16, 0x01
   \   0000015A   93000062           STS     98, R16
   \                     ??dot_string_digit_7:
   \   0000015E   2377               TST     R23
   \   00000160   F011               BREQ    ??dot_string_digit_14
   \   00000162   98AF               CBI     0x15, 0x07
   \   00000164   C005               RJMP    ??dot_string_digit_15
   \                     ??dot_string_digit_14:
   \   00000166   91000065           LDS     R16, 101
   \   0000016A   7F0D               ANDI    R16, 0xFD
   \   0000016C   93000065           STS     101, R16
   \                     ??dot_string_digit_15:
   \   00000170   E008               LDI     R16, 8
   \   00000172   E010               LDI     R17, 0
   \   00000174   ....               RCALL   DelayTime
   \   00000176   91000065           LDS     R16, 101
   \   0000017A   7F0B               ANDI    R16, 0xFB
   \   0000017C   93000065           STS     101, R16
   \   00000180   E008               LDI     R16, 8
   \   00000182   E010               LDI     R17, 0
   \   00000184   ....               RCALL   DelayTime
   \   00000186   2F07               MOV     R16, R23
   \   00000188   E010               LDI     R17, 0
   \   0000018A   E048               LDI     R20, 8
   \   0000018C   E050               LDI     R21, 0
   \   0000018E   ........           CALL    ?S_EC_MUL_L02
   \   00000192   E090               LDI     R25, 0
   \   00000194   0F08               ADD     R16, R24
   \   00000196   1F19               ADC     R17, R25
   \   00000198   01F8               MOVW    R31:R30, R17:R16
   \   0000019A   ....               SUBI    R30, LOW((-(dot_string) & 0xFFFF))
   \   0000019C   ....               SBCI    R31, (-(dot_string) & 0xFFFF) >> 8
   \   0000019E   8100               LD      R16, Z
   \   000001A0   BB0B               OUT     0x1B, R16
   \   000001A2   E100               LDI     R16, 16
   \   000001A4   E010               LDI     R17, 0
   \   000001A6   ....               RCALL   DelayTime
   \   000001A8   91000065           LDS     R16, 101
   \   000001AC   6004               ORI     R16, 0x04
   \   000001AE   93000065           STS     101, R16
   \   000001B2   2377               TST     R23
   \   000001B4   F409               BRNE    $+2+2
   \   000001B6   CF38               RJMP    ??dot_string_digit_4
   \   000001B8   9AAF               SBI     0x15, 0x07
   \   000001BA   CF3B               RJMP    ??dot_string_digit_5
   \                     ??dot_string_digit_2:
   \   000001BC   01C1               MOVW    R25:R24, R3:R2
   \   000001BE   9508               RET
   \   000001C0                      REQUIRE _A_PORTD
   \   000001C0                      REQUIRE _A_PORTF
   \   000001C0                      REQUIRE _A_PORTC
   \   000001C0                      REQUIRE _A_PORTG
   \   000001C0                      REQUIRE _A_PORTA

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void dot_matrix_digit(unsigned char, unsigned char)
   \                     dot_matrix_digit:
   \   00000000   2F40               MOV     R20, R16
   \   00000002   9A97               SBI     0x12, 0x07
   \   00000004   91000062           LDS     R16, 98
   \   00000008   6008               ORI     R16, 0x08
   \   0000000A   93000062           STS     98, R16
   \   0000000E   2311               TST     R17
   \   00000010   F481               BRNE    ??dot_matrix_digit_0
   \   00000012   91000062           LDS     R16, 98
   \   00000016   7F0B               ANDI    R16, 0xFB
   \   00000018   93000062           STS     98, R16
   \   0000001C   91000062           LDS     R16, 98
   \   00000020   7F0D               ANDI    R16, 0xFD
   \   00000022   93000062           STS     98, R16
   \   00000026   91000062           LDS     R16, 98
   \   0000002A   7F0E               ANDI    R16, 0xFE
   \   0000002C   93000062           STS     98, R16
   \   00000030   C07D               RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_0:
   \   00000032   3011               CPI     R17, 1
   \   00000034   F481               BRNE    ??dot_matrix_digit_2
   \   00000036   91000062           LDS     R16, 98
   \   0000003A   7F0B               ANDI    R16, 0xFB
   \   0000003C   93000062           STS     98, R16
   \   00000040   91000062           LDS     R16, 98
   \   00000044   7F0D               ANDI    R16, 0xFD
   \   00000046   93000062           STS     98, R16
   \   0000004A   91000062           LDS     R16, 98
   \   0000004E   6001               ORI     R16, 0x01
   \   00000050   93000062           STS     98, R16
   \   00000054   C06B               RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_2:
   \   00000056   3012               CPI     R17, 2
   \   00000058   F481               BRNE    ??dot_matrix_digit_3
   \   0000005A   91000062           LDS     R16, 98
   \   0000005E   7F0B               ANDI    R16, 0xFB
   \   00000060   93000062           STS     98, R16
   \   00000064   91000062           LDS     R16, 98
   \   00000068   6002               ORI     R16, 0x02
   \   0000006A   93000062           STS     98, R16
   \   0000006E   91000062           LDS     R16, 98
   \   00000072   7F0E               ANDI    R16, 0xFE
   \   00000074   93000062           STS     98, R16
   \   00000078   C059               RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_3:
   \   0000007A   3013               CPI     R17, 3
   \   0000007C   F481               BRNE    ??dot_matrix_digit_4
   \   0000007E   91000062           LDS     R16, 98
   \   00000082   7F0B               ANDI    R16, 0xFB
   \   00000084   93000062           STS     98, R16
   \   00000088   91000062           LDS     R16, 98
   \   0000008C   6002               ORI     R16, 0x02
   \   0000008E   93000062           STS     98, R16
   \   00000092   91000062           LDS     R16, 98
   \   00000096   6001               ORI     R16, 0x01
   \   00000098   93000062           STS     98, R16
   \   0000009C   C047               RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_4:
   \   0000009E   3014               CPI     R17, 4
   \   000000A0   F481               BRNE    ??dot_matrix_digit_5
   \   000000A2   91000062           LDS     R16, 98
   \   000000A6   6004               ORI     R16, 0x04
   \   000000A8   93000062           STS     98, R16
   \   000000AC   91000062           LDS     R16, 98
   \   000000B0   7F0D               ANDI    R16, 0xFD
   \   000000B2   93000062           STS     98, R16
   \   000000B6   91000062           LDS     R16, 98
   \   000000BA   7F0E               ANDI    R16, 0xFE
   \   000000BC   93000062           STS     98, R16
   \   000000C0   C035               RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_5:
   \   000000C2   3015               CPI     R17, 5
   \   000000C4   F481               BRNE    ??dot_matrix_digit_6
   \   000000C6   91000062           LDS     R16, 98
   \   000000CA   6004               ORI     R16, 0x04
   \   000000CC   93000062           STS     98, R16
   \   000000D0   91000062           LDS     R16, 98
   \   000000D4   7F0D               ANDI    R16, 0xFD
   \   000000D6   93000062           STS     98, R16
   \   000000DA   91000062           LDS     R16, 98
   \   000000DE   6001               ORI     R16, 0x01
   \   000000E0   93000062           STS     98, R16
   \   000000E4   C023               RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_6:
   \   000000E6   3016               CPI     R17, 6
   \   000000E8   F481               BRNE    ??dot_matrix_digit_7
   \   000000EA   91000062           LDS     R16, 98
   \   000000EE   6004               ORI     R16, 0x04
   \   000000F0   93000062           STS     98, R16
   \   000000F4   91000062           LDS     R16, 98
   \   000000F8   6002               ORI     R16, 0x02
   \   000000FA   93000062           STS     98, R16
   \   000000FE   91000062           LDS     R16, 98
   \   00000102   7F0E               ANDI    R16, 0xFE
   \   00000104   93000062           STS     98, R16
   \   00000108   C011               RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_7:
   \   0000010A   3017               CPI     R17, 7
   \   0000010C   F479               BRNE    ??dot_matrix_digit_1
   \   0000010E   91000062           LDS     R16, 98
   \   00000112   6004               ORI     R16, 0x04
   \   00000114   93000062           STS     98, R16
   \   00000118   91000062           LDS     R16, 98
   \   0000011C   6002               ORI     R16, 0x02
   \   0000011E   93000062           STS     98, R16
   \   00000122   91000062           LDS     R16, 98
   \   00000126   6001               ORI     R16, 0x01
   \   00000128   93000062           STS     98, R16
   \                     ??dot_matrix_digit_1:
   \   0000012C   E008               LDI     R16, 8
   \   0000012E   E010               LDI     R17, 0
   \   00000130   ....               RCALL   DelayTime
   \   00000132   91000065           LDS     R16, 101
   \   00000136   7F0D               ANDI    R16, 0xFD
   \   00000138   93000065           STS     101, R16
   \   0000013C   E008               LDI     R16, 8
   \   0000013E   E010               LDI     R17, 0
   \   00000140   ....               RCALL   DelayTime
   \   00000142   91000065           LDS     R16, 101
   \   00000146   7F0B               ANDI    R16, 0xFB
   \   00000148   93000065           STS     101, R16
   \   0000014C   E008               LDI     R16, 8
   \   0000014E   E010               LDI     R17, 0
   \   00000150   ....               RCALL   DelayTime
   \   00000152   BB4B               OUT     0x1B, R20
   \   00000154   E100               LDI     R16, 16
   \   00000156   E010               LDI     R17, 0
   \   00000158   ....               RCALL   DelayTime
   \   0000015A   91000065           LDS     R16, 101
   \   0000015E   6004               ORI     R16, 0x04
   \   00000160   93000065           STS     101, R16
   \   00000164   91000065           LDS     R16, 101
   \   00000168   6002               ORI     R16, 0x02
   \   0000016A   93000065           STS     101, R16
   \   0000016E   E100               LDI     R16, 16
   \   00000170   E010               LDI     R17, 0
   \   00000172   ....               RCALL   DelayTime
   \   00000174   9508               RET
   \   00000176                      REQUIRE _A_PORTD
   \   00000176                      REQUIRE _A_PORTF
   \   00000176                      REQUIRE _A_PORTG
   \   00000176                      REQUIRE _A_PORTA

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void dot_matrix_digit2(unsigned char, unsigned char)
   \                     dot_matrix_digit2:
   \   00000000   2F40               MOV     R20, R16
   \   00000002   9A97               SBI     0x12, 0x07
   \   00000004   91000062           LDS     R16, 98
   \   00000008   6008               ORI     R16, 0x08
   \   0000000A   93000062           STS     98, R16
   \   0000000E   2311               TST     R17
   \   00000010   F481               BRNE    ??dot_matrix_digit2_0
   \   00000012   91000062           LDS     R16, 98
   \   00000016   7F0B               ANDI    R16, 0xFB
   \   00000018   93000062           STS     98, R16
   \   0000001C   91000062           LDS     R16, 98
   \   00000020   7F0D               ANDI    R16, 0xFD
   \   00000022   93000062           STS     98, R16
   \   00000026   91000062           LDS     R16, 98
   \   0000002A   7F0E               ANDI    R16, 0xFE
   \   0000002C   93000062           STS     98, R16
   \   00000030   C07D               RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_0:
   \   00000032   3011               CPI     R17, 1
   \   00000034   F481               BRNE    ??dot_matrix_digit2_2
   \   00000036   91000062           LDS     R16, 98
   \   0000003A   7F0B               ANDI    R16, 0xFB
   \   0000003C   93000062           STS     98, R16
   \   00000040   91000062           LDS     R16, 98
   \   00000044   7F0D               ANDI    R16, 0xFD
   \   00000046   93000062           STS     98, R16
   \   0000004A   91000062           LDS     R16, 98
   \   0000004E   6001               ORI     R16, 0x01
   \   00000050   93000062           STS     98, R16
   \   00000054   C06B               RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_2:
   \   00000056   3012               CPI     R17, 2
   \   00000058   F481               BRNE    ??dot_matrix_digit2_3
   \   0000005A   91000062           LDS     R16, 98
   \   0000005E   7F0B               ANDI    R16, 0xFB
   \   00000060   93000062           STS     98, R16
   \   00000064   91000062           LDS     R16, 98
   \   00000068   6002               ORI     R16, 0x02
   \   0000006A   93000062           STS     98, R16
   \   0000006E   91000062           LDS     R16, 98
   \   00000072   7F0E               ANDI    R16, 0xFE
   \   00000074   93000062           STS     98, R16
   \   00000078   C059               RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_3:
   \   0000007A   3013               CPI     R17, 3
   \   0000007C   F481               BRNE    ??dot_matrix_digit2_4
   \   0000007E   91000062           LDS     R16, 98
   \   00000082   7F0B               ANDI    R16, 0xFB
   \   00000084   93000062           STS     98, R16
   \   00000088   91000062           LDS     R16, 98
   \   0000008C   6002               ORI     R16, 0x02
   \   0000008E   93000062           STS     98, R16
   \   00000092   91000062           LDS     R16, 98
   \   00000096   6001               ORI     R16, 0x01
   \   00000098   93000062           STS     98, R16
   \   0000009C   C047               RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_4:
   \   0000009E   3014               CPI     R17, 4
   \   000000A0   F481               BRNE    ??dot_matrix_digit2_5
   \   000000A2   91000062           LDS     R16, 98
   \   000000A6   6004               ORI     R16, 0x04
   \   000000A8   93000062           STS     98, R16
   \   000000AC   91000062           LDS     R16, 98
   \   000000B0   7F0D               ANDI    R16, 0xFD
   \   000000B2   93000062           STS     98, R16
   \   000000B6   91000062           LDS     R16, 98
   \   000000BA   7F0E               ANDI    R16, 0xFE
   \   000000BC   93000062           STS     98, R16
   \   000000C0   C035               RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_5:
   \   000000C2   3015               CPI     R17, 5
   \   000000C4   F481               BRNE    ??dot_matrix_digit2_6
   \   000000C6   91000062           LDS     R16, 98
   \   000000CA   6004               ORI     R16, 0x04
   \   000000CC   93000062           STS     98, R16
   \   000000D0   91000062           LDS     R16, 98
   \   000000D4   7F0D               ANDI    R16, 0xFD
   \   000000D6   93000062           STS     98, R16
   \   000000DA   91000062           LDS     R16, 98
   \   000000DE   6001               ORI     R16, 0x01
   \   000000E0   93000062           STS     98, R16
   \   000000E4   C023               RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_6:
   \   000000E6   3016               CPI     R17, 6
   \   000000E8   F481               BRNE    ??dot_matrix_digit2_7
   \   000000EA   91000062           LDS     R16, 98
   \   000000EE   6004               ORI     R16, 0x04
   \   000000F0   93000062           STS     98, R16
   \   000000F4   91000062           LDS     R16, 98
   \   000000F8   6002               ORI     R16, 0x02
   \   000000FA   93000062           STS     98, R16
   \   000000FE   91000062           LDS     R16, 98
   \   00000102   7F0E               ANDI    R16, 0xFE
   \   00000104   93000062           STS     98, R16
   \   00000108   C011               RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_7:
   \   0000010A   3017               CPI     R17, 7
   \   0000010C   F479               BRNE    ??dot_matrix_digit2_1
   \   0000010E   91000062           LDS     R16, 98
   \   00000112   6004               ORI     R16, 0x04
   \   00000114   93000062           STS     98, R16
   \   00000118   91000062           LDS     R16, 98
   \   0000011C   6002               ORI     R16, 0x02
   \   0000011E   93000062           STS     98, R16
   \   00000122   91000062           LDS     R16, 98
   \   00000126   6001               ORI     R16, 0x01
   \   00000128   93000062           STS     98, R16
   \                     ??dot_matrix_digit2_1:
   \   0000012C   E008               LDI     R16, 8
   \   0000012E   E010               LDI     R17, 0
   \   00000130   ....               RCALL   DelayTime
   \   00000132   98AF               CBI     0x15, 0x07
   \   00000134   E008               LDI     R16, 8
   \   00000136   E010               LDI     R17, 0
   \   00000138   ....               RCALL   DelayTime
   \   0000013A   91000065           LDS     R16, 101
   \   0000013E   7F0B               ANDI    R16, 0xFB
   \   00000140   93000065           STS     101, R16
   \   00000144   E008               LDI     R16, 8
   \   00000146   E010               LDI     R17, 0
   \   00000148   ....               RCALL   DelayTime
   \   0000014A   BB4B               OUT     0x1B, R20
   \   0000014C   E100               LDI     R16, 16
   \   0000014E   E010               LDI     R17, 0
   \   00000150   ....               RCALL   DelayTime
   \   00000152   91000065           LDS     R16, 101
   \   00000156   6004               ORI     R16, 0x04
   \   00000158   93000065           STS     101, R16
   \   0000015C   9AAF               SBI     0x15, 0x07
   \   0000015E   E100               LDI     R16, 16
   \   00000160   E010               LDI     R17, 0
   \   00000162   ....               RCALL   DelayTime
   \   00000164   9508               RET
   \   00000166                      REQUIRE _A_PORTD
   \   00000166                      REQUIRE _A_PORTF
   \   00000166                      REQUIRE _A_PORTC
   \   00000166                      REQUIRE _A_PORTG
   \   00000166                      REQUIRE _A_PORTA

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void dot_matrix_bright(unsigned char)
   \                     dot_matrix_bright:
   \   00000000   2F50               MOV     R21, R16
   \   00000002   E040               LDI     R20, 0
   \   00000004   C036               RJMP    ??dot_matrix_bright_0
   \                     ??dot_matrix_bright_1:
   \   00000006   3047               CPI     R20, 7
   \   00000008   F479               BRNE    ??dot_matrix_bright_2
   \   0000000A   91000062           LDS     R16, 98
   \   0000000E   6004               ORI     R16, 0x04
   \   00000010   93000062           STS     98, R16
   \   00000014   91000062           LDS     R16, 98
   \   00000018   6002               ORI     R16, 0x02
   \   0000001A   93000062           STS     98, R16
   \   0000001E   91000062           LDS     R16, 98
   \   00000022   6001               ORI     R16, 0x01
   \   00000024   93000062           STS     98, R16
   \                     ??dot_matrix_bright_2:
   \   00000028   E008               LDI     R16, 8
   \   0000002A   E010               LDI     R17, 0
   \   0000002C   ....               RCALL   DelayTime
   \   0000002E   91000065           LDS     R16, 101
   \   00000032   7F0D               ANDI    R16, 0xFD
   \   00000034   93000065           STS     101, R16
   \   00000038   E008               LDI     R16, 8
   \   0000003A   E010               LDI     R17, 0
   \   0000003C   ....               RCALL   DelayTime
   \   0000003E   91000065           LDS     R16, 101
   \   00000042   7F0B               ANDI    R16, 0xFB
   \   00000044   93000065           STS     101, R16
   \   00000048   E008               LDI     R16, 8
   \   0000004A   E010               LDI     R17, 0
   \   0000004C   ....               RCALL   DelayTime
   \   0000004E   BB5B               OUT     0x1B, R21
   \   00000050   E100               LDI     R16, 16
   \   00000052   E010               LDI     R17, 0
   \   00000054   ....               RCALL   DelayTime
   \   00000056   91000065           LDS     R16, 101
   \   0000005A   6004               ORI     R16, 0x04
   \   0000005C   93000065           STS     101, R16
   \   00000060   91000065           LDS     R16, 101
   \   00000064   6002               ORI     R16, 0x02
   \   00000066   93000065           STS     101, R16
   \   0000006A   E100               LDI     R16, 16
   \   0000006C   E010               LDI     R17, 0
   \   0000006E   ....               RCALL   DelayTime
   \   00000070   9543               INC     R20
   \                     ??dot_matrix_bright_0:
   \   00000072   3048               CPI     R20, 8
   \   00000074   F008               BRCS    $+2+2
   \   00000076   C085               RJMP    ??dot_matrix_bright_3
   \   00000078   9A97               SBI     0x12, 0x07
   \   0000007A   91000062           LDS     R16, 98
   \   0000007E   7F07               ANDI    R16, 0xF7
   \   00000080   93000062           STS     98, R16
   \   00000084   2344               TST     R20
   \   00000086   F481               BRNE    ??dot_matrix_bright_4
   \   00000088   91000062           LDS     R16, 98
   \   0000008C   7F0B               ANDI    R16, 0xFB
   \   0000008E   93000062           STS     98, R16
   \   00000092   91000062           LDS     R16, 98
   \   00000096   7F0D               ANDI    R16, 0xFD
   \   00000098   93000062           STS     98, R16
   \   0000009C   91000062           LDS     R16, 98
   \   000000A0   7F0E               ANDI    R16, 0xFE
   \   000000A2   93000062           STS     98, R16
   \   000000A6   CFC0               RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_4:
   \   000000A8   3041               CPI     R20, 1
   \   000000AA   F481               BRNE    ??dot_matrix_bright_5
   \   000000AC   91000062           LDS     R16, 98
   \   000000B0   7F0B               ANDI    R16, 0xFB
   \   000000B2   93000062           STS     98, R16
   \   000000B6   91000062           LDS     R16, 98
   \   000000BA   7F0D               ANDI    R16, 0xFD
   \   000000BC   93000062           STS     98, R16
   \   000000C0   91000062           LDS     R16, 98
   \   000000C4   6001               ORI     R16, 0x01
   \   000000C6   93000062           STS     98, R16
   \   000000CA   CFAE               RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_5:
   \   000000CC   3042               CPI     R20, 2
   \   000000CE   F481               BRNE    ??dot_matrix_bright_6
   \   000000D0   91000062           LDS     R16, 98
   \   000000D4   7F0B               ANDI    R16, 0xFB
   \   000000D6   93000062           STS     98, R16
   \   000000DA   91000062           LDS     R16, 98
   \   000000DE   6002               ORI     R16, 0x02
   \   000000E0   93000062           STS     98, R16
   \   000000E4   91000062           LDS     R16, 98
   \   000000E8   7F0E               ANDI    R16, 0xFE
   \   000000EA   93000062           STS     98, R16
   \   000000EE   CF9C               RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_6:
   \   000000F0   3043               CPI     R20, 3
   \   000000F2   F481               BRNE    ??dot_matrix_bright_7
   \   000000F4   91000062           LDS     R16, 98
   \   000000F8   7F0B               ANDI    R16, 0xFB
   \   000000FA   93000062           STS     98, R16
   \   000000FE   91000062           LDS     R16, 98
   \   00000102   6002               ORI     R16, 0x02
   \   00000104   93000062           STS     98, R16
   \   00000108   91000062           LDS     R16, 98
   \   0000010C   6001               ORI     R16, 0x01
   \   0000010E   93000062           STS     98, R16
   \   00000112   CF8A               RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_7:
   \   00000114   3044               CPI     R20, 4
   \   00000116   F481               BRNE    ??dot_matrix_bright_8
   \   00000118   91000062           LDS     R16, 98
   \   0000011C   6004               ORI     R16, 0x04
   \   0000011E   93000062           STS     98, R16
   \   00000122   91000062           LDS     R16, 98
   \   00000126   7F0D               ANDI    R16, 0xFD
   \   00000128   93000062           STS     98, R16
   \   0000012C   91000062           LDS     R16, 98
   \   00000130   7F0E               ANDI    R16, 0xFE
   \   00000132   93000062           STS     98, R16
   \   00000136   CF78               RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_8:
   \   00000138   3045               CPI     R20, 5
   \   0000013A   F481               BRNE    ??dot_matrix_bright_9
   \   0000013C   91000062           LDS     R16, 98
   \   00000140   6004               ORI     R16, 0x04
   \   00000142   93000062           STS     98, R16
   \   00000146   91000062           LDS     R16, 98
   \   0000014A   7F0D               ANDI    R16, 0xFD
   \   0000014C   93000062           STS     98, R16
   \   00000150   91000062           LDS     R16, 98
   \   00000154   6001               ORI     R16, 0x01
   \   00000156   93000062           STS     98, R16
   \   0000015A   CF66               RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_9:
   \   0000015C   3046               CPI     R20, 6
   \   0000015E   F009               BREQ    $+2+2
   \   00000160   CF52               RJMP    ??dot_matrix_bright_1
   \   00000162   91000062           LDS     R16, 98
   \   00000166   6004               ORI     R16, 0x04
   \   00000168   93000062           STS     98, R16
   \   0000016C   91000062           LDS     R16, 98
   \   00000170   6002               ORI     R16, 0x02
   \   00000172   93000062           STS     98, R16
   \   00000176   91000062           LDS     R16, 98
   \   0000017A   7F0E               ANDI    R16, 0xFE
   \   0000017C   93000062           STS     98, R16
   \   00000180   CF53               RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_3:
   \   00000182   E040               LDI     R20, 0
   \   00000184   C02E               RJMP    ??dot_matrix_bright_10
   \                     ??dot_matrix_bright_11:
   \   00000186   3047               CPI     R20, 7
   \   00000188   F479               BRNE    ??dot_matrix_bright_12
   \   0000018A   91000062           LDS     R16, 98
   \   0000018E   6004               ORI     R16, 0x04
   \   00000190   93000062           STS     98, R16
   \   00000194   91000062           LDS     R16, 98
   \   00000198   6002               ORI     R16, 0x02
   \   0000019A   93000062           STS     98, R16
   \   0000019E   91000062           LDS     R16, 98
   \   000001A2   6001               ORI     R16, 0x01
   \   000001A4   93000062           STS     98, R16
   \                     ??dot_matrix_bright_12:
   \   000001A8   E008               LDI     R16, 8
   \   000001AA   E010               LDI     R17, 0
   \   000001AC   ....               RCALL   DelayTime
   \   000001AE   98AF               CBI     0x15, 0x07
   \   000001B0   E008               LDI     R16, 8
   \   000001B2   E010               LDI     R17, 0
   \   000001B4   ....               RCALL   DelayTime
   \   000001B6   91000065           LDS     R16, 101
   \   000001BA   7F0B               ANDI    R16, 0xFB
   \   000001BC   93000065           STS     101, R16
   \   000001C0   E008               LDI     R16, 8
   \   000001C2   E010               LDI     R17, 0
   \   000001C4   ....               RCALL   DelayTime
   \   000001C6   BB5B               OUT     0x1B, R21
   \   000001C8   E100               LDI     R16, 16
   \   000001CA   E010               LDI     R17, 0
   \   000001CC   ....               RCALL   DelayTime
   \   000001CE   91000065           LDS     R16, 101
   \   000001D2   6004               ORI     R16, 0x04
   \   000001D4   93000065           STS     101, R16
   \   000001D8   9AAF               SBI     0x15, 0x07
   \   000001DA   E100               LDI     R16, 16
   \   000001DC   E010               LDI     R17, 0
   \   000001DE   ....               RCALL   DelayTime
   \   000001E0   9543               INC     R20
   \                     ??dot_matrix_bright_10:
   \   000001E2   3048               CPI     R20, 8
   \   000001E4   F008               BRCS    $+2+2
   \   000001E6   C085               RJMP    ??dot_matrix_bright_13
   \   000001E8   9A97               SBI     0x12, 0x07
   \   000001EA   91000062           LDS     R16, 98
   \   000001EE   7F07               ANDI    R16, 0xF7
   \   000001F0   93000062           STS     98, R16
   \   000001F4   2344               TST     R20
   \   000001F6   F481               BRNE    ??dot_matrix_bright_14
   \   000001F8   91000062           LDS     R16, 98
   \   000001FC   7F0B               ANDI    R16, 0xFB
   \   000001FE   93000062           STS     98, R16
   \   00000202   91000062           LDS     R16, 98
   \   00000206   7F0D               ANDI    R16, 0xFD
   \   00000208   93000062           STS     98, R16
   \   0000020C   91000062           LDS     R16, 98
   \   00000210   7F0E               ANDI    R16, 0xFE
   \   00000212   93000062           STS     98, R16
   \   00000216   CFC8               RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_14:
   \   00000218   3041               CPI     R20, 1
   \   0000021A   F481               BRNE    ??dot_matrix_bright_15
   \   0000021C   91000062           LDS     R16, 98
   \   00000220   7F0B               ANDI    R16, 0xFB
   \   00000222   93000062           STS     98, R16
   \   00000226   91000062           LDS     R16, 98
   \   0000022A   7F0D               ANDI    R16, 0xFD
   \   0000022C   93000062           STS     98, R16
   \   00000230   91000062           LDS     R16, 98
   \   00000234   6001               ORI     R16, 0x01
   \   00000236   93000062           STS     98, R16
   \   0000023A   CFB6               RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_15:
   \   0000023C   3042               CPI     R20, 2
   \   0000023E   F481               BRNE    ??dot_matrix_bright_16
   \   00000240   91000062           LDS     R16, 98
   \   00000244   7F0B               ANDI    R16, 0xFB
   \   00000246   93000062           STS     98, R16
   \   0000024A   91000062           LDS     R16, 98
   \   0000024E   6002               ORI     R16, 0x02
   \   00000250   93000062           STS     98, R16
   \   00000254   91000062           LDS     R16, 98
   \   00000258   7F0E               ANDI    R16, 0xFE
   \   0000025A   93000062           STS     98, R16
   \   0000025E   CFA4               RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_16:
   \   00000260   3043               CPI     R20, 3
   \   00000262   F481               BRNE    ??dot_matrix_bright_17
   \   00000264   91000062           LDS     R16, 98
   \   00000268   7F0B               ANDI    R16, 0xFB
   \   0000026A   93000062           STS     98, R16
   \   0000026E   91000062           LDS     R16, 98
   \   00000272   6002               ORI     R16, 0x02
   \   00000274   93000062           STS     98, R16
   \   00000278   91000062           LDS     R16, 98
   \   0000027C   6001               ORI     R16, 0x01
   \   0000027E   93000062           STS     98, R16
   \   00000282   CF92               RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_17:
   \   00000284   3044               CPI     R20, 4
   \   00000286   F481               BRNE    ??dot_matrix_bright_18
   \   00000288   91000062           LDS     R16, 98
   \   0000028C   6004               ORI     R16, 0x04
   \   0000028E   93000062           STS     98, R16
   \   00000292   91000062           LDS     R16, 98
   \   00000296   7F0D               ANDI    R16, 0xFD
   \   00000298   93000062           STS     98, R16
   \   0000029C   91000062           LDS     R16, 98
   \   000002A0   7F0E               ANDI    R16, 0xFE
   \   000002A2   93000062           STS     98, R16
   \   000002A6   CF80               RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_18:
   \   000002A8   3045               CPI     R20, 5
   \   000002AA   F481               BRNE    ??dot_matrix_bright_19
   \   000002AC   91000062           LDS     R16, 98
   \   000002B0   6004               ORI     R16, 0x04
   \   000002B2   93000062           STS     98, R16
   \   000002B6   91000062           LDS     R16, 98
   \   000002BA   7F0D               ANDI    R16, 0xFD
   \   000002BC   93000062           STS     98, R16
   \   000002C0   91000062           LDS     R16, 98
   \   000002C4   6001               ORI     R16, 0x01
   \   000002C6   93000062           STS     98, R16
   \   000002CA   CF6E               RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_19:
   \   000002CC   3046               CPI     R20, 6
   \   000002CE   F009               BREQ    $+2+2
   \   000002D0   CF5A               RJMP    ??dot_matrix_bright_11
   \   000002D2   91000062           LDS     R16, 98
   \   000002D6   6004               ORI     R16, 0x04
   \   000002D8   93000062           STS     98, R16
   \   000002DC   91000062           LDS     R16, 98
   \   000002E0   6002               ORI     R16, 0x02
   \   000002E2   93000062           STS     98, R16
   \   000002E6   91000062           LDS     R16, 98
   \   000002EA   7F0E               ANDI    R16, 0xFE
   \   000002EC   93000062           STS     98, R16
   \   000002F0   CF5B               RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_13:
   \   000002F2   9508               RET
   \   000002F4                      REQUIRE _A_PORTD
   \   000002F4                      REQUIRE _A_PORTF
   \   000002F4                      REQUIRE _A_PORTG
   \   000002F4                      REQUIRE _A_PORTA
   \   000002F4                      REQUIRE _A_PORTC

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void dot_0x_hexadecimal(unsigned char)
   \                     dot_0x_hexadecimal:
   \   00000000   2F60               MOV     R22, R16
   \   00000002   E013               LDI     R17, 3
   \   00000004   E300               LDI     R16, 48
   \   00000006   ....               RCALL   dot_matrix_digit
   \   00000008   E012               LDI     R17, 2
   \   0000000A   E708               LDI     R16, 120
   \   0000000C   ....               RCALL   dot_matrix_digit
   \   0000000E   E052               LDI     R21, 2
   \   00000010   C005               RJMP    ??dot_0x_hexadecimal_0
   \                     ??dot_0x_hexadecimal_1:
   \   00000012   2F15               MOV     R17, R21
   \   00000014   951A               DEC     R17
   \   00000016   5C09               SUBI    R16, 201
   \   00000018   ....               RCALL   dot_matrix_digit
   \                     ??dot_0x_hexadecimal_2:
   \   0000001A   955A               DEC     R21
   \                     ??dot_0x_hexadecimal_0:
   \   0000001C   2355               TST     R21
   \   0000001E   F089               BREQ    ??dot_0x_hexadecimal_3
   \   00000020   2F06               MOV     R16, R22
   \   00000022   E010               LDI     R17, 0
   \   00000024   2F35               MOV     R19, R21
   \   00000026   953A               DEC     R19
   \   00000028   E024               LDI     R18, 4
   \   0000002A   9F32               MUL     R19, R18
   \   0000002C   2D40               MOV     R20, R0
   \   0000002E   ........           CALL    ?SS_SHR_L02
   \   00000032   700F               ANDI    R16, 0x0F
   \   00000034   300A               CPI     R16, 10
   \   00000036   F768               BRCC    ??dot_0x_hexadecimal_1
   \   00000038   2F15               MOV     R17, R21
   \   0000003A   951A               DEC     R17
   \   0000003C   5D00               SUBI    R16, 208
   \   0000003E   ....               RCALL   dot_matrix_digit
   \   00000040   CFEC               RJMP    ??dot_0x_hexadecimal_2
   \                     ??dot_0x_hexadecimal_3:
   \   00000042   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void dot_vol_hextodeci(unsigned char)
   \                     dot_vol_hextodeci:
   \   00000000   2F10               MOV     R17, R16
   \   00000002   9100....           LDS     R16, mute_enable
   \   00000006   2300               TST     R16
   \   00000008   F469               BRNE    ??dot_vol_hextodeci_0
   \   0000000A   E40D               LDI     R16, 77
   \   0000000C   9300....           STS     ess_volume, R16
   \   00000010   E505               LDI     R16, 85
   \   00000012   9300....           STS     (ess_volume + 1), R16
   \   00000016   E504               LDI     R16, 84
   \   00000018   9300....           STS     (ess_volume + 2), R16
   \   0000001C   E405               LDI     R16, 69
   \   0000001E   9300....           STS     (ess_volume + 3), R16
   \   00000022   C04B               RJMP    ??dot_vol_hextodeci_1
   \                     ??dot_vol_hextodeci_0:
   \   00000024   2311               TST     R17
   \   00000026   F469               BRNE    ??dot_vol_hextodeci_2
   \   00000028   E200               LDI     R16, 32
   \   0000002A   9300....           STS     ess_volume, R16
   \   0000002E   E301               LDI     R16, 49
   \   00000030   9300....           STS     (ess_volume + 1), R16
   \   00000034   E300               LDI     R16, 48
   \   00000036   9300....           STS     (ess_volume + 2), R16
   \   0000003A   E300               LDI     R16, 48
   \   0000003C   9300....           STS     (ess_volume + 3), R16
   \   00000040   C03C               RJMP    ??dot_vol_hextodeci_1
   \                     ??dot_vol_hextodeci_2:
   \   00000042   3F1F               CPI     R17, 255
   \   00000044   F469               BRNE    ??dot_vol_hextodeci_3
   \   00000046   E300               LDI     R16, 48
   \   00000048   9300....           STS     ess_volume, R16
   \   0000004C   E300               LDI     R16, 48
   \   0000004E   9300....           STS     (ess_volume + 1), R16
   \   00000052   E20E               LDI     R16, 46
   \   00000054   9300....           STS     (ess_volume + 2), R16
   \   00000058   E300               LDI     R16, 48
   \   0000005A   9300....           STS     (ess_volume + 3), R16
   \   0000005E   C02D               RJMP    ??dot_vol_hextodeci_1
   \                     ??dot_vol_hextodeci_3:
   \   00000060   E134               LDI     R19, 20
   \   00000062   EC08               LDI     R16, 200
   \   00000064   1B01               SUB     R16, R17
   \   00000066   2F10               MOV     R17, R16
   \   00000068   E020               LDI     R18, 0
   \   0000006A   C016               RJMP    ??dot_vol_hextodeci_4
   \                     ??dot_vol_hextodeci_5:
   \   0000006C   2F01               MOV     R16, R17
   \   0000006E   2F43               MOV     R20, R19
   \   00000070   ........           CALL    ?UC_DIVMOD_L01
   \   00000074   5D00               SUBI    R16, 208
   \   00000076   2F42               MOV     R20, R18
   \   00000078   E050               LDI     R21, 0
   \   0000007A   01FA               MOVW    R31:R30, R21:R20
   \   0000007C   ....               SUBI    R30, LOW((-(ess_volume) & 0xFFFF))
   \   0000007E   ....               SBCI    R31, (-(ess_volume) & 0xFFFF) >> 8
   \   00000080   8300               ST      Z, R16
   \   00000082   2F01               MOV     R16, R17
   \   00000084   2F43               MOV     R20, R19
   \   00000086   ........           CALL    ?UC_DIVMOD_L01
   \   0000008A   2F14               MOV     R17, R20
   \   0000008C   E04A               LDI     R20, 10
   \   0000008E   2F03               MOV     R16, R19
   \   00000090   ........           CALL    ?UC_DIVMOD_L01
   \   00000094   2F30               MOV     R19, R16
   \   00000096   9523               INC     R18
   \                     ??dot_vol_hextodeci_4:
   \   00000098   3022               CPI     R18, 2
   \   0000009A   F340               BRCS    ??dot_vol_hextodeci_5
   \   0000009C   2311               TST     R17
   \   0000009E   F039               BREQ    ??dot_vol_hextodeci_6
   \   000000A0   E20E               LDI     R16, 46
   \   000000A2   9300....           STS     (ess_volume + 2), R16
   \   000000A6   E305               LDI     R16, 53
   \   000000A8   9300....           STS     (ess_volume + 3), R16
   \   000000AC   C006               RJMP    ??dot_vol_hextodeci_1
   \                     ??dot_vol_hextodeci_6:
   \   000000AE   E20E               LDI     R16, 46
   \   000000B0   9300....           STS     (ess_volume + 2), R16
   \   000000B4   E300               LDI     R16, 48
   \   000000B6   9300....           STS     (ess_volume + 3), R16
   \                     ??dot_vol_hextodeci_1:
   \   000000BA   E020               LDI     R18, 0
   \   000000BC   C00B               RJMP    ??dot_vol_hextodeci_7
   \                     ??dot_vol_hextodeci_8:
   \   000000BE   E030               LDI     R19, 0
   \   000000C0   01F9               MOVW    R31:R30, R19:R18
   \   000000C2   ....               SUBI    R30, LOW((-(ess_volume) & 0xFFFF))
   \   000000C4   ....               SBCI    R31, (-(ess_volume) & 0xFFFF) >> 8
   \   000000C6   8100               LD      R16, Z
   \   000000C8   E030               LDI     R19, 0
   \   000000CA   01F9               MOVW    R31:R30, R19:R18
   \   000000CC   ....               SUBI    R30, LOW((-(dot_string) & 0xFFFF))
   \   000000CE   ....               SBCI    R31, (-(dot_string) & 0xFFFF) >> 8
   \   000000D0   8704               STD     Z+12, R16
   \   000000D2   9523               INC     R18
   \                     ??dot_vol_hextodeci_7:
   \   000000D4   3024               CPI     R18, 4
   \   000000D6   F398               BRCS    ??dot_vol_hextodeci_8
   \   000000D8   ....               RCALL   dot_string_digit
   \   000000DA   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void dot_matrix_set()
   \                     dot_matrix_set:
   \   00000000   9A97               SBI     0x12, 0x07
   \   00000002   E001               LDI     R16, 1
   \   00000004   9300....           STS     dot_light_reg, R16
   \   00000008   91000065           LDS     R16, 101
   \   0000000C   6001               ORI     R16, 0x01
   \   0000000E   93000065           STS     101, R16
   \   00000012   E004               LDI     R16, 4
   \   00000014   ....               RCALL   dot_matrix_bright
   \   00000016   9508               RET
   \   00000018                      REQUIRE _A_PORTD
   \   00000018                      REQUIRE _A_PORTG

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char test_osc
   \                     test_osc:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for test_osc>`

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void ess_mute()
   \                     ess_mute:
   \   00000000   9100....           LDS     R16, key_func
   \   00000004   2300               TST     R16
   \   00000006   F529               BRNE    ??ess_mute_0
   \   00000008   9100....           LDS     R16, mute_enable
   \   0000000C   2300               TST     R16
   \   0000000E   F421               BRNE    ??ess_mute_1
   \   00000010   E001               LDI     R16, 1
   \   00000012   9300....           STS     mute_enable, R16
   \   00000016   C003               RJMP    ??ess_mute_2
   \                     ??ess_mute_1:
   \   00000018   E000               LDI     R16, 0
   \   0000001A   9300....           STS     mute_enable, R16
   \                     ??ess_mute_2:
   \   0000001E   9100....           LDS     R16, mute_enable
   \   00000022   2300               TST     R16
   \   00000024   F411               BRNE    ??ess_mute_3
   \   00000026   E011               LDI     R17, 1
   \   00000028   C001               RJMP    ??ess_mute_4
   \                     ??ess_mute_3:
   \   0000002A   E010               LDI     R17, 0
   \                     ??ess_mute_4:
   \   0000002C   9100....           LDS     R16, es9018_reg10
   \   00000030   7C0E               ANDI    R16, 0xCE
   \   00000032   0F01               ADD     R16, R17
   \   00000034   9300....           STS     es9018_reg10, R16
   \   00000038   9120....           LDS     R18, es9018_reg10
   \   0000003C   E01A               LDI     R17, 10
   \   0000003E   E900               LDI     R16, 144
   \   00000040   ....               RCALL   I2C_Write
   \   00000042   9120....           LDS     R18, es9018_reg10
   \   00000046   E01A               LDI     R17, 10
   \   00000048   E902               LDI     R16, 146
   \   0000004A   ....               RCALL   I2C_Write
   \   0000004C   9100....           LDS     R16, vol_dB
   \   00000050   ....               RCALL   dot_vol_hextodeci
   \                     ??ess_mute_0:
   \   00000052   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void phase_ess()
   \                     phase_ess:
   \   00000000   9100....           LDS     R16, phase_data
   \   00000004   2300               TST     R16
   \   00000006   F449               BRNE    ??phase_ess_0
   \   00000008   EF2F               LDI     R18, 255
   \   0000000A   E01D               LDI     R17, 13
   \   0000000C   E900               LDI     R16, 144
   \   0000000E   ....               RCALL   I2C_Write
   \   00000010   EF2F               LDI     R18, 255
   \   00000012   E01D               LDI     R17, 13
   \   00000014   E902               LDI     R16, 146
   \   00000016   ....               RCALL   I2C_Write
   \   00000018   C008               RJMP    ??phase_ess_1
   \                     ??phase_ess_0:
   \   0000001A   E020               LDI     R18, 0
   \   0000001C   E01D               LDI     R17, 13
   \   0000001E   E900               LDI     R16, 144
   \   00000020   ....               RCALL   I2C_Write
   \   00000022   E020               LDI     R18, 0
   \   00000024   E01D               LDI     R17, 13
   \   00000026   E902               LDI     R16, 146
   \   00000028   ....               RCALL   I2C_Write
   \                     ??phase_ess_1:
   \   0000002A   ....               RCALL   rom_write_multi
   \   0000002C   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void volume_set()
   \                     volume_set:
   \   00000000   E0E0               LDI     R30, 0
   \   00000002   C00B               RJMP    ??volume_set_0
   \                     ??volume_set_1:
   \   00000004   9120....           LDS     R18, vol_dB
   \   00000008   2F1E               MOV     R17, R30
   \   0000000A   E900               LDI     R16, 144
   \   0000000C   ....               RCALL   I2C_Write
   \   0000000E   9120....           LDS     R18, vol_dB
   \   00000012   2F1E               MOV     R17, R30
   \   00000014   E902               LDI     R16, 146
   \   00000016   ....               RCALL   I2C_Write
   \   00000018   95E3               INC     R30
   \                     ??volume_set_0:
   \   0000001A   30E8               CPI     R30, 8
   \   0000001C   F398               BRCS    ??volume_set_1
   \   0000001E   ....               RCALL   rom_write_multi
   \   00000020   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void init_vol_dn(unsigned char)
   \                     init_vol_dn:
   \   00000000   E72F               LDI     R18, 127
   \   00000002   9100....           LDS     R16, ess_lch_master_trim
   \   00000006   1B20               SUB     R18, R16
   \   00000008   E117               LDI     R17, 23
   \   0000000A   E900               LDI     R16, 144
   \   0000000C   ....               RCALL   I2C_Write
   \   0000000E   E72F               LDI     R18, 127
   \   00000010   9100....           LDS     R16, ess_rch_master_trim
   \   00000014   1B20               SUB     R18, R16
   \   00000016   E117               LDI     R17, 23
   \   00000018   E902               LDI     R16, 146
   \   0000001A   ....               RCALL   I2C_Write
   \   0000001C   EF2E               LDI     R18, 254
   \   0000001E   E114               LDI     R17, 20
   \   00000020   E900               LDI     R16, 144
   \   00000022   ....               RCALL   I2C_Write
   \   00000024   EF2E               LDI     R18, 254
   \   00000026   E114               LDI     R17, 20
   \   00000028   E902               LDI     R16, 146
   \   0000002A   ....               RCALL   I2C_Write
   \   0000002C   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void init_vol(unsigned char)
   \                     init_vol:
   \   00000000   EF2F               LDI     R18, 255
   \   00000002   E114               LDI     R17, 20
   \   00000004   E900               LDI     R16, 144
   \   00000006   ....               RCALL   I2C_Write
   \   00000008   EF2F               LDI     R18, 255
   \   0000000A   E114               LDI     R17, 20
   \   0000000C   E902               LDI     R16, 146
   \   0000000E   ....               RCALL   I2C_Write
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void audio_level_sp_down()
   \                     audio_level_sp_down:
   \   00000000   9100....           LDS     R16, key_func
   \   00000004   2300               TST     R16
   \   00000006   F4B9               BRNE    ??audio_level_sp_down_0
   \   00000008   9110....           LDS     R17, vol_dB
   \   0000000C   9100....           LDS     R16, vol_dB
   \   00000010   3C05               CPI     R16, 197
   \   00000012   F430               BRCC    ??audio_level_sp_down_1
   \   00000014   9100....           LDS     R16, vol_dB
   \   00000018   5F0D               SUBI    R16, 253
   \   0000001A   9300....           STS     vol_dB, R16
   \   0000001E   C003               RJMP    ??audio_level_sp_down_2
   \                     ??audio_level_sp_down_1:
   \   00000020   EF0F               LDI     R16, 255
   \   00000022   9300....           STS     vol_dB, R16
   \                     ??audio_level_sp_down_2:
   \   00000026   9100....           LDS     R16, vol_dB
   \   0000002A   1710               CP      R17, R16
   \   0000002C   F021               BREQ    ??audio_level_sp_down_0
   \   0000002E   ....               RCALL   volume_set
   \   00000030   9100....           LDS     R16, vol_dB
   \   00000034   ....               RCALL   dot_vol_hextodeci
   \                     ??audio_level_sp_down_0:
   \   00000036   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void audio_level_sp_up()
   \                     audio_level_sp_up:
   \   00000000   9100....           LDS     R16, key_func
   \   00000004   2300               TST     R16
   \   00000006   F4F9               BRNE    ??audio_level_sp_up_0
   \   00000008   9110....           LDS     R17, vol_dB
   \   0000000C   9100....           LDS     R16, vol_dB
   \   00000010   3F0F               CPI     R16, 255
   \   00000012   F421               BRNE    ??audio_level_sp_up_1
   \   00000014   EC07               LDI     R16, 199
   \   00000016   9300....           STS     vol_dB, R16
   \   0000001A   C00D               RJMP    ??audio_level_sp_up_2
   \                     ??audio_level_sp_up_1:
   \   0000001C   9100....           LDS     R16, vol_dB
   \   00000020   3003               CPI     R16, 3
   \   00000022   F030               BRCS    ??audio_level_sp_up_3
   \   00000024   9100....           LDS     R16, vol_dB
   \   00000028   5003               SUBI    R16, 3
   \   0000002A   9300....           STS     vol_dB, R16
   \   0000002E   C003               RJMP    ??audio_level_sp_up_2
   \                     ??audio_level_sp_up_3:
   \   00000030   E000               LDI     R16, 0
   \   00000032   9300....           STS     vol_dB, R16
   \                     ??audio_level_sp_up_2:
   \   00000036   9100....           LDS     R16, vol_dB
   \   0000003A   1710               CP      R17, R16
   \   0000003C   F021               BREQ    ??audio_level_sp_up_0
   \   0000003E   ....               RCALL   volume_set
   \   00000040   9100....           LDS     R16, vol_dB
   \   00000044   ....               RCALL   dot_vol_hextodeci
   \                     ??audio_level_sp_up_0:
   \   00000046   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void audio_level_down()
   \                     audio_level_down:
   \   00000000   9100....           LDS     R16, key_func
   \   00000004   2300               TST     R16
   \   00000006   F4E1               BRNE    ??audio_level_down_0
   \   00000008   9100....           LDS     R16, mute_enable
   \   0000000C   2300               TST     R16
   \   0000000E   F409               BRNE    ??audio_level_down_1
   \   00000010   ....               RCALL   ess_mute
   \                     ??audio_level_down_1:
   \   00000012   9110....           LDS     R17, vol_dB
   \   00000016   9100....           LDS     R16, vol_dB
   \   0000001A   3C07               CPI     R16, 199
   \   0000001C   F430               BRCC    ??audio_level_down_2
   \   0000001E   9100....           LDS     R16, vol_dB
   \   00000022   9503               INC     R16
   \   00000024   9300....           STS     vol_dB, R16
   \   00000028   C003               RJMP    ??audio_level_down_3
   \                     ??audio_level_down_2:
   \   0000002A   EF0F               LDI     R16, 255
   \   0000002C   9300....           STS     vol_dB, R16
   \                     ??audio_level_down_3:
   \   00000030   9100....           LDS     R16, vol_dB
   \   00000034   1710               CP      R17, R16
   \   00000036   F021               BREQ    ??audio_level_down_0
   \   00000038   ....               RCALL   volume_set
   \   0000003A   9100....           LDS     R16, vol_dB
   \   0000003E   ....               RCALL   dot_vol_hextodeci
   \                     ??audio_level_down_0:
   \   00000040   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void audio_level_up()
   \                     audio_level_up:
   \   00000000   9100....           LDS     R16, key_func
   \   00000004   2300               TST     R16
   \   00000006   F501               BRNE    ??audio_level_up_0
   \   00000008   9100....           LDS     R16, mute_enable
   \   0000000C   2300               TST     R16
   \   0000000E   F409               BRNE    ??audio_level_up_1
   \   00000010   ....               RCALL   ess_mute
   \                     ??audio_level_up_1:
   \   00000012   9110....           LDS     R17, vol_dB
   \   00000016   9100....           LDS     R16, vol_dB
   \   0000001A   3F0F               CPI     R16, 255
   \   0000001C   F421               BRNE    ??audio_level_up_2
   \   0000001E   EC07               LDI     R16, 199
   \   00000020   9300....           STS     vol_dB, R16
   \   00000024   C009               RJMP    ??audio_level_up_3
   \                     ??audio_level_up_2:
   \   00000026   9100....           LDS     R16, vol_dB
   \   0000002A   2300               TST     R16
   \   0000002C   F029               BREQ    ??audio_level_up_3
   \   0000002E   9100....           LDS     R16, vol_dB
   \   00000032   950A               DEC     R16
   \   00000034   9300....           STS     vol_dB, R16
   \                     ??audio_level_up_3:
   \   00000038   9100....           LDS     R16, vol_dB
   \   0000003C   1710               CP      R17, R16
   \   0000003E   F021               BREQ    ??audio_level_up_0
   \   00000040   ....               RCALL   volume_set
   \   00000042   9100....           LDS     R16, vol_dB
   \   00000046   ....               RCALL   dot_vol_hextodeci
   \                     ??audio_level_up_0:
   \   00000048   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void channel_change()
   \                     channel_change:
   \   00000000   9100....           LDS     R16, mute_enable
   \   00000004   2300               TST     R16
   \   00000006   F041               BREQ    ??channel_change_0
   \   00000008   EC2F               LDI     R18, 207
   \   0000000A   E01A               LDI     R17, 10
   \   0000000C   E900               LDI     R16, 144
   \   0000000E   ....               RCALL   I2C_Write
   \   00000010   EC2F               LDI     R18, 207
   \   00000012   E01A               LDI     R17, 10
   \   00000014   E902               LDI     R16, 146
   \   00000016   ....               RCALL   I2C_Write
   \                     ??channel_change_0:
   \   00000018   9100....           LDS     R16, ch_led_data
   \   0000001C   3007               CPI     R16, 7
   \   0000001E   F411               BRNE    ??channel_change_1
   \   00000020   E000               LDI     R16, 0
   \   00000022   C001               RJMP    ??channel_change_2
   \                     ??channel_change_1:
   \   00000024   E001               LDI     R16, 1
   \                     ??channel_change_2:
   \   00000026   9110....           LDS     R17, i2s_flag
   \   0000002A   1701               CP      R16, R17
   \   0000002C   F049               BREQ    ??channel_change_3
   \   0000002E   9300....           STS     i2s_flag, R16
   \   00000032   ....               LDI     R30, LOW(i2s_flag)
   \   00000034   ....               LDI     R31, (i2s_flag) >> 8
   \   00000036   8100               LD      R16, Z
   \   00000038   FD00               SBRC    R16, 0
   \   0000003A   9A1B               SBI     0x03, 0x03
   \                     ??channel_change_4:
   \   0000003C   FF00               SBRS    R16, 0
   \   0000003E   981B               CBI     0x03, 0x03
   \                     ??channel_change_3:
   \   00000040   9100....           LDS     R16, interface_ch
   \   00000044   7C07               ANDI    R16, 0xC7
   \   00000046   9300....           STS     interface_ch, R16
   \   0000004A   9100....           LDS     R16, ch_led_data
   \   0000004E   0F00               LSL     R16
   \   00000050   0F00               LSL     R16
   \   00000052   0F00               LSL     R16
   \   00000054   9110....           LDS     R17, interface_ch
   \   00000058   0F10               ADD     R17, R16
   \   0000005A   9310....           STS     interface_ch, R17
   \   0000005E   9120....           LDS     R18, interface_ch
   \   00000062   E014               LDI     R17, 4
   \   00000064   E200               LDI     R16, 32
   \   00000066   ....               RCALL   I2C_Write
   \   00000068   9100....           LDS     R16, mute_enable
   \   0000006C   2300               TST     R16
   \   0000006E   F041               BREQ    ??channel_change_5
   \   00000070   EC2E               LDI     R18, 206
   \   00000072   E01A               LDI     R17, 10
   \   00000074   E900               LDI     R16, 144
   \   00000076   ....               RCALL   I2C_Write
   \   00000078   EC2E               LDI     R18, 206
   \   0000007A   E01A               LDI     R17, 10
   \   0000007C   E902               LDI     R16, 146
   \   0000007E   ....               RCALL   I2C_Write
   \                     ??channel_change_5:
   \   00000080   ....               RCALL   rom_write_multi
   \   00000082   9508               RET
   \   00000084                      REQUIRE _A_PORTE

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void channel_up()
   \                     channel_up:
   \   00000000   9100....           LDS     R16, key_func
   \   00000004   2300               TST     R16
   \   00000006   F471               BRNE    ??channel_up_0
   \   00000008   9100....           LDS     R16, ch_led_data
   \   0000000C   3007               CPI     R16, 7
   \   0000000E   F430               BRCC    ??channel_up_1
   \   00000010   9100....           LDS     R16, ch_led_data
   \   00000014   9503               INC     R16
   \   00000016   9300....           STS     ch_led_data, R16
   \   0000001A   C003               RJMP    ??channel_up_2
   \                     ??channel_up_1:
   \   0000001C   E000               LDI     R16, 0
   \   0000001E   9300....           STS     ch_led_data, R16
   \                     ??channel_up_2:
   \   00000022   ....               RCALL   channel_change
   \                     ??channel_up_0:
   \   00000024   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void channel_down()
   \                     channel_down:
   \   00000000   9100....           LDS     R16, key_func
   \   00000004   2300               TST     R16
   \   00000006   F471               BRNE    ??channel_down_0
   \   00000008   9100....           LDS     R16, ch_led_data
   \   0000000C   2300               TST     R16
   \   0000000E   F031               BREQ    ??channel_down_1
   \   00000010   9100....           LDS     R16, ch_led_data
   \   00000014   950A               DEC     R16
   \   00000016   9300....           STS     ch_led_data, R16
   \   0000001A   C003               RJMP    ??channel_down_2
   \                     ??channel_down_1:
   \   0000001C   E007               LDI     R16, 7
   \   0000001E   9300....           STS     ch_led_data, R16
   \                     ??channel_down_2:
   \   00000022   ....               RCALL   channel_change
   \                     ??channel_down_0:
   \   00000024   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void ess_filter()
   \                     ess_filter:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   E000               LDI     R16, 0
   \   00000006   9300....           STS     rom_save_flag2, R16
   \   0000000A   E000               LDI     R16, 0
   \   0000000C   BF08               OUT     0x38, R16
   \   0000000E   9100....           LDS     R16, filter_flag
   \   00000012   3003               CPI     R16, 3
   \   00000014   F419               BRNE    ??ess_filter_0
   \   00000016   E000               LDI     R16, 0
   \   00000018   9300....           STS     filter_flag, R16
   \                     ??ess_filter_0:
   \   0000001C   9180....           LDS     R24, filter_flag
   \   00000020   ....               RCALL   rom_write_multi
   \   00000022   E005               LDI     R16, 5
   \   00000024   E010               LDI     R17, 0
   \   00000026   ........           CALL    DelayTime_ms
   \   0000002A   2388               TST     R24
   \   0000002C   F489               BRNE    ??ess_filter_1
   \   0000002E   E020               LDI     R18, 0
   \   00000030   E215               LDI     R17, 37
   \   00000032   E900               LDI     R16, 144
   \   00000034   ....               RCALL   I2C_Write
   \   00000036   E020               LDI     R18, 0
   \   00000038   E215               LDI     R17, 37
   \   0000003A   E902               LDI     R16, 146
   \   0000003C   ....               RCALL   I2C_Write
   \   0000003E   E02B               LDI     R18, 11
   \   00000040   E01E               LDI     R17, 14
   \   00000042   E900               LDI     R16, 144
   \   00000044   ....               RCALL   I2C_Write
   \   00000046   E02B               LDI     R18, 11
   \   00000048   E01E               LDI     R17, 14
   \   0000004A   E902               LDI     R16, 146
   \   0000004C   ....               RCALL   I2C_Write
   \   0000004E   C0FA               RJMP    ??ess_filter_2
   \                     ??ess_filter_1:
   \   00000050   3081               CPI     R24, 1
   \   00000052   F019               BREQ    ??ess_filter_3
   \   00000054   3082               CPI     R24, 2
   \   00000056   F009               BREQ    $+2+2
   \   00000058   C0F5               RJMP    ??ess_filter_2
   \                     ??ess_filter_3:
   \   0000005A   E120               LDI     R18, 16
   \   0000005C   E215               LDI     R17, 37
   \   0000005E   E900               LDI     R16, 144
   \   00000060   ....               RCALL   I2C_Write
   \   00000062   E120               LDI     R18, 16
   \   00000064   E215               LDI     R17, 37
   \   00000066   E902               LDI     R16, 146
   \   00000068   ....               RCALL   I2C_Write
   \   0000006A   E0E0               LDI     R30, 0
   \   0000006C   C02E               RJMP    ??ess_filter_4
   \                     ??ess_filter_5:
   \   0000006E   0191               MOVW    R19:R18, R3:R2
   \   00000070   2F03               MOV     R16, R19
   \   00000072   2F20               MOV     R18, R16
   \   00000074   E219               LDI     R17, 41
   \   00000076   E900               LDI     R16, 144
   \   00000078   ....               RCALL   I2C_Write
   \   0000007A   0191               MOVW    R19:R18, R3:R2
   \   0000007C   2F03               MOV     R16, R19
   \   0000007E   2F20               MOV     R18, R16
   \   00000080   E219               LDI     R17, 41
   \   00000082   E902               LDI     R16, 146
   \   00000084   ....               RCALL   I2C_Write
   \   00000086   0191               MOVW    R19:R18, R3:R2
   \   00000088   2F02               MOV     R16, R18
   \   0000008A   2F20               MOV     R18, R16
   \   0000008C   E218               LDI     R17, 40
   \   0000008E   E900               LDI     R16, 144
   \   00000090   ....               RCALL   I2C_Write
   \   00000092   0191               MOVW    R19:R18, R3:R2
   \   00000094   2F02               MOV     R16, R18
   \   00000096   2F20               MOV     R18, R16
   \   00000098   E218               LDI     R17, 40
   \   0000009A   E902               LDI     R16, 146
   \   0000009C   ....               RCALL   I2C_Write
   \   0000009E   0190               MOVW    R19:R18, R1:R0
   \   000000A0   2F23               MOV     R18, R19
   \   000000A2   E217               LDI     R17, 39
   \   000000A4   E900               LDI     R16, 144
   \   000000A6   ....               RCALL   I2C_Write
   \   000000A8   0190               MOVW    R19:R18, R1:R0
   \   000000AA   2F23               MOV     R18, R19
   \   000000AC   E217               LDI     R17, 39
   \   000000AE   E902               LDI     R16, 146
   \   000000B0   ....               RCALL   I2C_Write
   \   000000B2   0190               MOVW    R19:R18, R1:R0
   \   000000B4   E216               LDI     R17, 38
   \   000000B6   E900               LDI     R16, 144
   \   000000B8   ....               RCALL   I2C_Write
   \   000000BA   0190               MOVW    R19:R18, R1:R0
   \   000000BC   E216               LDI     R17, 38
   \   000000BE   E902               LDI     R16, 146
   \   000000C0   ....               RCALL   I2C_Write
   \   000000C2   95F3               INC     R31
   \                     ??ess_filter_6:
   \   000000C4   30F8               CPI     R31, 8
   \   000000C6   F298               BRCS    ??ess_filter_5
   \   000000C8   95E3               INC     R30
   \                     ??ess_filter_4:
   \   000000CA   34E0               CPI     R30, 64
   \   000000CC   F508               BRCC    ??ess_filter_7
   \   000000CE   3081               CPI     R24, 1
   \   000000D0   F471               BRNE    ??ess_filter_8
   \   000000D2   2F0E               MOV     R16, R30
   \   000000D4   E010               LDI     R17, 0
   \   000000D6   0F00               LSL     R16
   \   000000D8   1F11               ROL     R17
   \   000000DA   0F00               LSL     R16
   \   000000DC   1F11               ROL     R17
   \   000000DE   01D8               MOVW    R27:R26, R17:R16
   \   000000E0   ....               SUBI    R26, LOW((-(f1_coeff_st1) & 0xFFFF))
   \   000000E2   ....               SBCI    R27, (-(f1_coeff_st1) & 0xFFFF) >> 8
   \   000000E4   900D               LD      R0, X+
   \   000000E6   901D               LD      R1, X+
   \   000000E8   902D               LD      R2, X+
   \   000000EA   903C               LD      R3, X
   \   000000EC   C00F               RJMP    ??ess_filter_9
   \                     ??ess_filter_8:
   \   000000EE   3082               CPI     R24, 2
   \   000000F0   F469               BRNE    ??ess_filter_9
   \   000000F2   2F0E               MOV     R16, R30
   \   000000F4   E010               LDI     R17, 0
   \   000000F6   0F00               LSL     R16
   \   000000F8   1F11               ROL     R17
   \   000000FA   0F00               LSL     R16
   \   000000FC   1F11               ROL     R17
   \   000000FE   01D8               MOVW    R27:R26, R17:R16
   \   00000100   ....               SUBI    R26, LOW((-(f2_coeff_st1) & 0xFFFF))
   \   00000102   ....               SBCI    R27, (-(f2_coeff_st1) & 0xFFFF) >> 8
   \   00000104   900D               LD      R0, X+
   \   00000106   901D               LD      R1, X+
   \   00000108   902D               LD      R2, X+
   \   0000010A   903C               LD      R3, X
   \                     ??ess_filter_9:
   \   0000010C   E0F0               LDI     R31, 0
   \   0000010E   CFDA               RJMP    ??ess_filter_6
   \                     ??ess_filter_7:
   \   00000110   E020               LDI     R18, 0
   \   00000112   E216               LDI     R17, 38
   \   00000114   E900               LDI     R16, 144
   \   00000116   ....               RCALL   I2C_Write
   \   00000118   E020               LDI     R18, 0
   \   0000011A   E216               LDI     R17, 38
   \   0000011C   E902               LDI     R16, 146
   \   0000011E   ....               RCALL   I2C_Write
   \   00000120   E020               LDI     R18, 0
   \   00000122   E215               LDI     R17, 37
   \   00000124   E900               LDI     R16, 144
   \   00000126   ....               RCALL   I2C_Write
   \   00000128   E020               LDI     R18, 0
   \   0000012A   E215               LDI     R17, 37
   \   0000012C   E902               LDI     R16, 146
   \   0000012E   ....               RCALL   I2C_Write
   \   00000130   E021               LDI     R18, 1
   \   00000132   E215               LDI     R17, 37
   \   00000134   E900               LDI     R16, 144
   \   00000136   ....               RCALL   I2C_Write
   \   00000138   E021               LDI     R18, 1
   \   0000013A   E215               LDI     R17, 37
   \   0000013C   E902               LDI     R16, 146
   \   0000013E   ....               RCALL   I2C_Write
   \   00000140   E0E0               LDI     R30, 0
   \   00000142   C02E               RJMP    ??ess_filter_10
   \                     ??ess_filter_11:
   \   00000144   0191               MOVW    R19:R18, R3:R2
   \   00000146   2F03               MOV     R16, R19
   \   00000148   2F20               MOV     R18, R16
   \   0000014A   E21D               LDI     R17, 45
   \   0000014C   E900               LDI     R16, 144
   \   0000014E   ....               RCALL   I2C_Write
   \   00000150   0191               MOVW    R19:R18, R3:R2
   \   00000152   2F03               MOV     R16, R19
   \   00000154   2F20               MOV     R18, R16
   \   00000156   E21D               LDI     R17, 45
   \   00000158   E902               LDI     R16, 146
   \   0000015A   ....               RCALL   I2C_Write
   \   0000015C   0191               MOVW    R19:R18, R3:R2
   \   0000015E   2F02               MOV     R16, R18
   \   00000160   2F20               MOV     R18, R16
   \   00000162   E21C               LDI     R17, 44
   \   00000164   E900               LDI     R16, 144
   \   00000166   ....               RCALL   I2C_Write
   \   00000168   0191               MOVW    R19:R18, R3:R2
   \   0000016A   2F02               MOV     R16, R18
   \   0000016C   2F20               MOV     R18, R16
   \   0000016E   E21C               LDI     R17, 44
   \   00000170   E902               LDI     R16, 146
   \   00000172   ....               RCALL   I2C_Write
   \   00000174   0190               MOVW    R19:R18, R1:R0
   \   00000176   2F23               MOV     R18, R19
   \   00000178   E21B               LDI     R17, 43
   \   0000017A   E900               LDI     R16, 144
   \   0000017C   ....               RCALL   I2C_Write
   \   0000017E   0190               MOVW    R19:R18, R1:R0
   \   00000180   2F23               MOV     R18, R19
   \   00000182   E21B               LDI     R17, 43
   \   00000184   E902               LDI     R16, 146
   \   00000186   ....               RCALL   I2C_Write
   \   00000188   0190               MOVW    R19:R18, R1:R0
   \   0000018A   E21A               LDI     R17, 42
   \   0000018C   E900               LDI     R16, 144
   \   0000018E   ....               RCALL   I2C_Write
   \   00000190   0190               MOVW    R19:R18, R1:R0
   \   00000192   E21A               LDI     R17, 42
   \   00000194   E902               LDI     R16, 146
   \   00000196   ....               RCALL   I2C_Write
   \   00000198   95F3               INC     R31
   \                     ??ess_filter_12:
   \   0000019A   30F8               CPI     R31, 8
   \   0000019C   F298               BRCS    ??ess_filter_11
   \   0000019E   95E3               INC     R30
   \                     ??ess_filter_10:
   \   000001A0   31E0               CPI     R30, 16
   \   000001A2   F508               BRCC    ??ess_filter_13
   \   000001A4   3081               CPI     R24, 1
   \   000001A6   F471               BRNE    ??ess_filter_14
   \   000001A8   2F0E               MOV     R16, R30
   \   000001AA   E010               LDI     R17, 0
   \   000001AC   0F00               LSL     R16
   \   000001AE   1F11               ROL     R17
   \   000001B0   0F00               LSL     R16
   \   000001B2   1F11               ROL     R17
   \   000001B4   01D8               MOVW    R27:R26, R17:R16
   \   000001B6   ....               SUBI    R26, LOW((-(f1_coeff_st2) & 0xFFFF))
   \   000001B8   ....               SBCI    R27, (-(f1_coeff_st2) & 0xFFFF) >> 8
   \   000001BA   900D               LD      R0, X+
   \   000001BC   901D               LD      R1, X+
   \   000001BE   902D               LD      R2, X+
   \   000001C0   903C               LD      R3, X
   \   000001C2   C00F               RJMP    ??ess_filter_15
   \                     ??ess_filter_14:
   \   000001C4   3082               CPI     R24, 2
   \   000001C6   F469               BRNE    ??ess_filter_15
   \   000001C8   2F0E               MOV     R16, R30
   \   000001CA   E010               LDI     R17, 0
   \   000001CC   0F00               LSL     R16
   \   000001CE   1F11               ROL     R17
   \   000001D0   0F00               LSL     R16
   \   000001D2   1F11               ROL     R17
   \   000001D4   01D8               MOVW    R27:R26, R17:R16
   \   000001D6   ....               SUBI    R26, LOW((-(f2_coeff_st2) & 0xFFFF))
   \   000001D8   ....               SBCI    R27, (-(f2_coeff_st2) & 0xFFFF) >> 8
   \   000001DA   900D               LD      R0, X+
   \   000001DC   901D               LD      R1, X+
   \   000001DE   902D               LD      R2, X+
   \   000001E0   903C               LD      R3, X
   \                     ??ess_filter_15:
   \   000001E2   E0F0               LDI     R31, 0
   \   000001E4   CFDA               RJMP    ??ess_filter_12
   \                     ??ess_filter_13:
   \   000001E6   E020               LDI     R18, 0
   \   000001E8   E21A               LDI     R17, 42
   \   000001EA   E900               LDI     R16, 144
   \   000001EC   ....               RCALL   I2C_Write
   \   000001EE   E020               LDI     R18, 0
   \   000001F0   E21A               LDI     R17, 42
   \   000001F2   E902               LDI     R16, 146
   \   000001F4   ....               RCALL   I2C_Write
   \   000001F6   E020               LDI     R18, 0
   \   000001F8   E215               LDI     R17, 37
   \   000001FA   E900               LDI     R16, 144
   \   000001FC   ....               RCALL   I2C_Write
   \   000001FE   E020               LDI     R18, 0
   \   00000200   E215               LDI     R17, 37
   \   00000202   E902               LDI     R16, 146
   \   00000204   ....               RCALL   I2C_Write
   \   00000206   E222               LDI     R18, 34
   \   00000208   E215               LDI     R17, 37
   \   0000020A   E900               LDI     R16, 144
   \   0000020C   ....               RCALL   I2C_Write
   \   0000020E   E222               LDI     R18, 34
   \   00000210   E215               LDI     R17, 37
   \   00000212   E902               LDI     R16, 146
   \   00000214   ....               RCALL   I2C_Write
   \   00000216   3081               CPI     R24, 1
   \   00000218   F449               BRNE    ??ess_filter_16
   \   0000021A   E02A               LDI     R18, 10
   \   0000021C   E01E               LDI     R17, 14
   \   0000021E   E900               LDI     R16, 144
   \   00000220   ....               RCALL   I2C_Write
   \   00000222   E02C               LDI     R18, 12
   \   00000224   E01E               LDI     R17, 14
   \   00000226   E902               LDI     R16, 146
   \   00000228   ....               RCALL   I2C_Write
   \   0000022A   C00C               RJMP    ??ess_filter_2
   \                     ??ess_filter_16:
   \   0000022C   3082               CPI     R24, 2
   \   0000022E   F451               BRNE    ??ess_filter_2
   \   00000230   E02A               LDI     R18, 10
   \   00000232   E01E               LDI     R17, 14
   \   00000234   E900               LDI     R16, 144
   \   00000236   ........           CALL    I2C_Write
   \   0000023A   E02E               LDI     R18, 14
   \   0000023C   E01E               LDI     R17, 14
   \   0000023E   E902               LDI     R16, 146
   \   00000240   ........           CALL    I2C_Write
   \                     ??ess_filter_2:
   \   00000244   E001               LDI     R16, 1
   \   00000246   9300....           STS     rom_save_flag2, R16
   \   0000024A   ....               LDI     R30, LOW(rom_tmr)
   \   0000024C   ....               LDI     R31, (rom_tmr) >> 8
   \   0000024E   E000               LDI     R16, 0
   \   00000250   8300               ST      Z, R16
   \   00000252   E000               LDI     R16, 0
   \   00000254   8301               STD     Z+1, R16
   \   00000256   E008               LDI     R16, 8
   \   00000258   BF08               OUT     0x38, R16
   \   0000025A   E0E4               LDI     R30, 4
   \   0000025C   ........           JMP     ?EPILOGUE_B4_L09
   \   00000260                      REQUIRE _A_EIFR

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void femto_function()
   \                     femto_function:
   \   00000000   9100....           LDS     R16, key_func
   \   00000004   3001               CPI     R16, 1
   \   00000006   F021               BREQ    ??femto_function_0
   \   00000008   9100....           LDS     R16, key_func
   \   0000000C   3002               CPI     R16, 2
   \   0000000E   F421               BRNE    ??femto_function_1
   \                     ??femto_function_0:
   \   00000010   E001               LDI     R16, 1
   \   00000012   9300....           STS     key_condition, R16
   \   00000016   C03C               RJMP    ??femto_function_2
   \                     ??femto_function_1:
   \   00000018   9100....           LDS     R16, key_func
   \   0000001C   3003               CPI     R16, 3
   \   0000001E   F469               BRNE    ??femto_function_3
   \   00000020   9100....           LDS     R16, phase_data
   \   00000024   2300               TST     R16
   \   00000026   F421               BRNE    ??femto_function_4
   \   00000028   E001               LDI     R16, 1
   \   0000002A   9300....           STS     phase_data, R16
   \   0000002E   C003               RJMP    ??femto_function_5
   \                     ??femto_function_4:
   \   00000030   E000               LDI     R16, 0
   \   00000032   9300....           STS     phase_data, R16
   \                     ??femto_function_5:
   \   00000036   ....               RCALL   phase_ess
   \   00000038   C02B               RJMP    ??femto_function_2
   \                     ??femto_function_3:
   \   0000003A   9100....           LDS     R16, key_func
   \   0000003E   3004               CPI     R16, 4
   \   00000040   F539               BRNE    ??femto_function_2
   \   00000042   9100....           LDS     R16, filter_flag
   \   00000046   9503               INC     R16
   \   00000048   9300....           STS     filter_flag, R16
   \   0000004C   9100....           LDS     R16, mute_enable
   \   00000050   2300               TST     R16
   \   00000052   F051               BREQ    ??femto_function_6
   \   00000054   EC2F               LDI     R18, 207
   \   00000056   E01A               LDI     R17, 10
   \   00000058   E900               LDI     R16, 144
   \   0000005A   ........           CALL    I2C_Write
   \   0000005E   EC2F               LDI     R18, 207
   \   00000060   E01A               LDI     R17, 10
   \   00000062   E902               LDI     R16, 146
   \   00000064   ........           CALL    I2C_Write
   \                     ??femto_function_6:
   \   00000068   ....               RCALL   ess_filter
   \   0000006A   ....               RCALL   volume_set
   \   0000006C   E005               LDI     R16, 5
   \   0000006E   E010               LDI     R17, 0
   \   00000070   ........           CALL    DelayTime_ms
   \   00000074   9100....           LDS     R16, mute_enable
   \   00000078   2300               TST     R16
   \   0000007A   F051               BREQ    ??femto_function_2
   \   0000007C   EC2E               LDI     R18, 206
   \   0000007E   E01A               LDI     R17, 10
   \   00000080   E900               LDI     R16, 144
   \   00000082   ........           CALL    I2C_Write
   \   00000086   EC2E               LDI     R18, 206
   \   00000088   E01A               LDI     R17, 10
   \   0000008A   E902               LDI     R16, 146
   \   0000008C   ........           CALL    I2C_Write
   \                     ??femto_function_2:
   \   00000090   E020               LDI     R18, 0
   \   00000092   C00B               RJMP    ??femto_function_7
   \                     ??femto_function_8:
   \   00000094   E030               LDI     R19, 0
   \   00000096   01F9               MOVW    R31:R30, R19:R18
   \   00000098   ....               SUBI    R30, LOW((-(normal_name - 8) & 0xFFFF))
   \   0000009A   ....               SBCI    R31, HIGH((-(normal_name - 8) & 0xFFFF))
   \   0000009C   8100               LD      R16, Z
   \   0000009E   E030               LDI     R19, 0
   \   000000A0   01F9               MOVW    R31:R30, R19:R18
   \   000000A2   ....               SUBI    R30, LOW((-(dot_string) & 0xFFFF))
   \   000000A4   ....               SBCI    R31, (-(dot_string) & 0xFFFF) >> 8
   \   000000A6   8300               ST      Z, R16
   \                     ??femto_function_9:
   \   000000A8   9523               INC     R18
   \                     ??femto_function_7:
   \   000000AA   3120               CPI     R18, 16
   \   000000AC   F530               BRCC    ??femto_function_10
   \   000000AE   3028               CPI     R18, 8
   \   000000B0   F4A8               BRCC    ??femto_function_11
   \   000000B2   9100....           LDS     R16, filter_flag
   \   000000B6   E010               LDI     R17, 0
   \   000000B8   E048               LDI     R20, 8
   \   000000BA   E050               LDI     R21, 0
   \   000000BC   ........           CALL    ?S_EC_MUL_L02
   \   000000C0   ....               LDI     R30, LOW(filter_name)
   \   000000C2   ....               LDI     R31, (filter_name) >> 8
   \   000000C4   0FE0               ADD     R30, R16
   \   000000C6   1FF1               ADC     R31, R17
   \   000000C8   E030               LDI     R19, 0
   \   000000CA   0FE2               ADD     R30, R18
   \   000000CC   1FF3               ADC     R31, R19
   \   000000CE   8100               LD      R16, Z
   \   000000D0   E030               LDI     R19, 0
   \   000000D2   01F9               MOVW    R31:R30, R19:R18
   \   000000D4   ....               SUBI    R30, LOW((-(dot_string) & 0xFFFF))
   \   000000D6   ....               SBCI    R31, (-(dot_string) & 0xFFFF) >> 8
   \   000000D8   8300               ST      Z, R16
   \   000000DA   CFE6               RJMP    ??femto_function_9
   \                     ??femto_function_11:
   \   000000DC   9100....           LDS     R16, phase_data
   \   000000E0   2300               TST     R16
   \   000000E2   F6C1               BRNE    ??femto_function_8
   \   000000E4   E030               LDI     R19, 0
   \   000000E6   01F9               MOVW    R31:R30, R19:R18
   \   000000E8   ....               SUBI    R30, LOW((-(phase_name - 8) & 0xFFFF))
   \   000000EA   ....               SBCI    R31, HIGH((-(phase_name - 8) & 0xFFFF))
   \   000000EC   8100               LD      R16, Z
   \   000000EE   E030               LDI     R19, 0
   \   000000F0   01F9               MOVW    R31:R30, R19:R18
   \   000000F2   ....               SUBI    R30, LOW((-(dot_string) & 0xFFFF))
   \   000000F4   ....               SBCI    R31, (-(dot_string) & 0xFFFF) >> 8
   \   000000F6   8300               ST      Z, R16
   \   000000F8   CFD7               RJMP    ??femto_function_9
   \                     ??femto_function_10:
   \   000000FA   ....               LDI     R30, LOW(key_func_tmr)
   \   000000FC   ....               LDI     R31, (key_func_tmr) >> 8
   \   000000FE   E000               LDI     R16, 0
   \   00000100   8300               ST      Z, R16
   \   00000102   E000               LDI     R16, 0
   \   00000104   8301               STD     Z+1, R16
   \   00000106   ....               RCALL   dot_string_digit
   \   00000108   9508               RET

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char _flg_on_remocon
   \                     _flg_on_remocon:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char _code_remocon
   \                     _code_remocon:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int _counter_remocon
   \                     _counter_remocon:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   int _remocon_custom
   \                     _remocon_custom:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   int _remocon_custom_2
   \                     _remocon_custom_2:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   int _remocon_data
   \                     _remocon_data:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   int Remoc_data_save
   \                     Remoc_data_save:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   int _remocon_data_2
   \                     _remocon_data_2:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char _remocon_counter
   \                     _remocon_counter:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char _flgOrKey
   \                     _flgOrKey:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char _flg_enter
   \                     _flg_enter:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int _remocon_buffer
   \                     _remocon_buffer:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char _flg_repeat
   \                     _flg_repeat:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int _remocon_repeat_count
   \                     _remocon_repeat_count:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char _flg_run_repeat
   \                     _flg_run_repeat:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char _flg_allow_remocon_repeat
   \                     _flg_allow_remocon_repeat:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int cnt_remocon
   \                     cnt_remocon:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char bit_input
   \                     bit_input:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char _repeat_remocon
   \                     _repeat_remocon:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char _repeat_data
   \                     _repeat_data:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for _repeat_data>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char low_bit_time
   \                     low_bit_time:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char low_start_flag
   \                     low_start_flag:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char high_bit_0
   \                     high_bit_0:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char high_bit_1
   \                     high_bit_1:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char high_start_flag
   \                     high_start_flag:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char high_repeat_flag0
   \                     high_repeat_flag0:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char high_repeat_flag1
   \                     high_repeat_flag1:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char ir_error_check
   \                     ir_error_check:
   \   00000000                      DS8 1

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 __interrupt void TIMER2_OVF_Handler(void)
   \                     TIMER2_OVF_Handler:
   \   00000000   93FA               ST      -Y, R31
   \   00000002   93EA               ST      -Y, R30
   \   00000004   934A               ST      -Y, R20
   \   00000006   933A               ST      -Y, R19
   \   00000008   932A               ST      -Y, R18
   \   0000000A   931A               ST      -Y, R17
   \   0000000C   930A               ST      -Y, R16
   \   0000000E   B73F               IN      R19, 0x3F
   \   00000010   B74B               IN      R20, 0x3B
   \   00000012   E307               LDI     R16, 55
   \   00000014   BD04               OUT     0x24, R16
   \   00000016   ....               LDI     R30, LOW(_counter_remocon)
   \   00000018   ....               LDI     R31, (_counter_remocon) >> 8
   \   0000001A   8100               LD      R16, Z
   \   0000001C   8111               LDD     R17, Z+1
   \   0000001E   5F0F               SUBI    R16, 255
   \   00000020   4F1F               SBCI    R17, 255
   \   00000022   8300               ST      Z, R16
   \   00000024   8311               STD     Z+1, R17
   \   00000026   9100....           LDS     R16, cnt_remocon
   \   0000002A   9110....           LDS     R17, (cnt_remocon + 1)
   \   0000002E   2B01               OR      R16, R17
   \   00000030   F041               BREQ    ??TIMER2_OVF_Handler_0
   \   00000032   ....               LDI     R30, LOW(cnt_remocon)
   \   00000034   ....               LDI     R31, (cnt_remocon) >> 8
   \   00000036   8100               LD      R16, Z
   \   00000038   8111               LDD     R17, Z+1
   \   0000003A   5F0F               SUBI    R16, 255
   \   0000003C   4F1F               SBCI    R17, 255
   \   0000003E   8300               ST      Z, R16
   \   00000040   8311               STD     Z+1, R17
   \                     ??TIMER2_OVF_Handler_0:
   \   00000042   9100....           LDS     R16, _counter_remocon
   \   00000046   9110....           LDS     R17, (_counter_remocon + 1)
   \   0000004A   340D               CPI     R16, 77
   \   0000004C   E024               LDI     R18, 4
   \   0000004E   0712               CPC     R17, R18
   \   00000050   F408               BRCC    $+2+2
   \   00000052   C052               RJMP    ??TIMER2_OVF_Handler_1
   \   00000054   E000               LDI     R16, 0
   \   00000056   9300....           STS     _flg_on_remocon, R16
   \   0000005A   E000               LDI     R16, 0
   \   0000005C   9300....           STS     _code_remocon, R16
   \   00000060   E000               LDI     R16, 0
   \   00000062   9300....           STS     _remocon_custom_2, R16
   \   00000066   E000               LDI     R16, 0
   \   00000068   9300....           STS     (_remocon_custom_2 + 1), R16
   \   0000006C   E000               LDI     R16, 0
   \   0000006E   9300....           STS     _remocon_custom, R16
   \   00000072   E000               LDI     R16, 0
   \   00000074   9300....           STS     (_remocon_custom + 1), R16
   \   00000078   E000               LDI     R16, 0
   \   0000007A   9300....           STS     _remocon_data, R16
   \   0000007E   E000               LDI     R16, 0
   \   00000080   9300....           STS     (_remocon_data + 1), R16
   \   00000084   E000               LDI     R16, 0
   \   00000086   9300....           STS     _remocon_data_2, R16
   \   0000008A   E000               LDI     R16, 0
   \   0000008C   9300....           STS     (_remocon_data_2 + 1), R16
   \   00000090   E000               LDI     R16, 0
   \   00000092   9300....           STS     _remocon_counter, R16
   \   00000096   E000               LDI     R16, 0
   \   00000098   9300....           STS     low_start_flag, R16
   \   0000009C   E000               LDI     R16, 0
   \   0000009E   9300....           STS     high_start_flag, R16
   \   000000A2   E000               LDI     R16, 0
   \   000000A4   9300....           STS     low_bit_time, R16
   \   000000A8   E000               LDI     R16, 0
   \   000000AA   9300....           STS     high_bit_0, R16
   \   000000AE   E000               LDI     R16, 0
   \   000000B0   9300....           STS     high_bit_1, R16
   \   000000B4   E000               LDI     R16, 0
   \   000000B6   9300....           STS     high_repeat_flag0, R16
   \   000000BA   E000               LDI     R16, 0
   \   000000BC   9300....           STS     high_repeat_flag1, R16
   \   000000C0   E000               LDI     R16, 0
   \   000000C2   9300....           STS     _repeat_remocon, R16
   \   000000C6   E000               LDI     R16, 0
   \   000000C8   9300....           STS     _counter_remocon, R16
   \   000000CC   E000               LDI     R16, 0
   \   000000CE   9300....           STS     (_counter_remocon + 1), R16
   \   000000D2   E000               LDI     R16, 0
   \   000000D4   9300....           STS     ir_error_check, R16
   \   000000D8   E001               LDI     R16, 1
   \   000000DA   9300....           STS     rom_save_flag, R16
   \   000000DE   9100....           LDS     R16, rom_save_flag
   \   000000E2   2300               TST     R16
   \   000000E4   F449               BRNE    ??TIMER2_OVF_Handler_1
   \   000000E6   E001               LDI     R16, 1
   \   000000E8   9300....           STS     rom_save_flag, R16
   \   000000EC   E000               LDI     R16, 0
   \   000000EE   9300....           STS     rom_tmr, R16
   \   000000F2   E000               LDI     R16, 0
   \   000000F4   9300....           STS     (rom_tmr + 1), R16
   \                     ??TIMER2_OVF_Handler_1:
   \   000000F8   BF4B               OUT     0x3B, R20
   \   000000FA   BF3F               OUT     0x3F, R19
   \   000000FC   9109               LD      R16, Y+
   \   000000FE   9119               LD      R17, Y+
   \   00000100   9129               LD      R18, Y+
   \   00000102   9139               LD      R19, Y+
   \   00000104   9149               LD      R20, Y+
   \   00000106   91E9               LD      R30, Y+
   \   00000108   91F9               LD      R31, Y+
   \   0000010A   9518               RETI
   \   0000010C                      REQUIRE _A_TCNT2

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void IR_error()
   \                     IR_error:
   \   00000000   E000               LDI     R16, 0
   \   00000002   9300....           STS     _flg_on_remocon, R16
   \   00000006   E000               LDI     R16, 0
   \   00000008   9300....           STS     _code_remocon, R16
   \   0000000C   ....               LDI     R30, LOW(_remocon_custom_2)
   \   0000000E   ....               LDI     R31, (_remocon_custom_2) >> 8
   \   00000010   E000               LDI     R16, 0
   \   00000012   8300               ST      Z, R16
   \   00000014   E000               LDI     R16, 0
   \   00000016   8301               STD     Z+1, R16
   \   00000018   ....               LDI     R30, LOW(_remocon_custom)
   \   0000001A   ....               LDI     R31, (_remocon_custom) >> 8
   \   0000001C   E000               LDI     R16, 0
   \   0000001E   8300               ST      Z, R16
   \   00000020   E000               LDI     R16, 0
   \   00000022   8301               STD     Z+1, R16
   \   00000024   ....               LDI     R30, LOW(_remocon_data)
   \   00000026   ....               LDI     R31, (_remocon_data) >> 8
   \   00000028   E000               LDI     R16, 0
   \   0000002A   8300               ST      Z, R16
   \   0000002C   E000               LDI     R16, 0
   \   0000002E   8301               STD     Z+1, R16
   \   00000030   ....               LDI     R30, LOW(_remocon_data_2)
   \   00000032   ....               LDI     R31, (_remocon_data_2) >> 8
   \   00000034   E000               LDI     R16, 0
   \   00000036   8300               ST      Z, R16
   \   00000038   E000               LDI     R16, 0
   \   0000003A   8301               STD     Z+1, R16
   \   0000003C   E000               LDI     R16, 0
   \   0000003E   9300....           STS     _remocon_counter, R16
   \   00000042   E000               LDI     R16, 0
   \   00000044   9300....           STS     low_start_flag, R16
   \   00000048   E000               LDI     R16, 0
   \   0000004A   9300....           STS     high_start_flag, R16
   \   0000004E   E000               LDI     R16, 0
   \   00000050   9300....           STS     low_bit_time, R16
   \   00000054   E000               LDI     R16, 0
   \   00000056   9300....           STS     high_bit_0, R16
   \   0000005A   E000               LDI     R16, 0
   \   0000005C   9300....           STS     high_bit_1, R16
   \   00000060   E000               LDI     R16, 0
   \   00000062   9300....           STS     high_repeat_flag0, R16
   \   00000066   E000               LDI     R16, 0
   \   00000068   9300....           STS     high_repeat_flag1, R16
   \   0000006C   E000               LDI     R16, 0
   \   0000006E   9300....           STS     _repeat_remocon, R16
   \   00000072   E000               LDI     R16, 0
   \   00000074   9300....           STS     ir_error_check, R16
   \   00000078   9508               RET

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char new_repeat_flag
   \                     new_repeat_flag:
   \   00000000                      DS8 1

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void remocon_data()
   \                     remocon_data:
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
   \   00000004   9100....           LDS     R16, _code_remocon
   \   00000008   5001               SUBI    R16, 1
   \   0000000A   F041               BREQ    ??remocon_data_0
   \   0000000C   950A               DEC     R16
   \   0000000E   F0E1               BREQ    ??remocon_data_1
   \   00000010   950A               DEC     R16
   \   00000012   F181               BREQ    ??remocon_data_2
   \   00000014   950A               DEC     R16
   \   00000016   F409               BRNE    $+2+2
   \   00000018   C043               RJMP    ??remocon_data_3
   \   0000001A   C057               RJMP    ??remocon_data_4
   \                     ??remocon_data_0:
   \   0000001C   ....               LDI     R30, LOW(_remocon_custom)
   \   0000001E   ....               LDI     R31, (_remocon_custom) >> 8
   \   00000020   8100               LD      R16, Z
   \   00000022   8111               LDD     R17, Z+1
   \   00000024   0F00               LSL     R16
   \   00000026   1F11               ROL     R17
   \   00000028   ....               LDI     R30, LOW(_remocon_custom)
   \   0000002A   ....               LDI     R31, (_remocon_custom) >> 8
   \   0000002C   8300               ST      Z, R16
   \   0000002E   8311               STD     Z+1, R17
   \   00000030   9100....           LDS     R16, bit_input
   \   00000034   E010               LDI     R17, 0
   \   00000036   ....               LDI     R30, LOW(_remocon_custom)
   \   00000038   ....               LDI     R31, (_remocon_custom) >> 8
   \   0000003A   8120               LD      R18, Z
   \   0000003C   8131               LDD     R19, Z+1
   \   0000003E   2B20               OR      R18, R16
   \   00000040   2B31               OR      R19, R17
   \   00000042   8320               ST      Z, R18
   \   00000044   8331               STD     Z+1, R19
   \   00000046   C041               RJMP    ??remocon_data_4
   \                     ??remocon_data_1:
   \   00000048   ....               LDI     R30, LOW(_remocon_custom_2)
   \   0000004A   ....               LDI     R31, (_remocon_custom_2) >> 8
   \   0000004C   8100               LD      R16, Z
   \   0000004E   8111               LDD     R17, Z+1
   \   00000050   0F00               LSL     R16
   \   00000052   1F11               ROL     R17
   \   00000054   ....               LDI     R30, LOW(_remocon_custom_2)
   \   00000056   ....               LDI     R31, (_remocon_custom_2) >> 8
   \   00000058   8300               ST      Z, R16
   \   0000005A   8311               STD     Z+1, R17
   \   0000005C   9100....           LDS     R16, bit_input
   \   00000060   E010               LDI     R17, 0
   \   00000062   ....               LDI     R30, LOW(_remocon_custom_2)
   \   00000064   ....               LDI     R31, (_remocon_custom_2) >> 8
   \   00000066   8120               LD      R18, Z
   \   00000068   8131               LDD     R19, Z+1
   \   0000006A   2B20               OR      R18, R16
   \   0000006C   2B31               OR      R19, R17
   \   0000006E   8320               ST      Z, R18
   \   00000070   8331               STD     Z+1, R19
   \   00000072   C02B               RJMP    ??remocon_data_4
   \                     ??remocon_data_2:
   \   00000074   ....               LDI     R30, LOW(_remocon_data)
   \   00000076   ....               LDI     R31, (_remocon_data) >> 8
   \   00000078   8100               LD      R16, Z
   \   0000007A   8111               LDD     R17, Z+1
   \   0000007C   0F00               LSL     R16
   \   0000007E   1F11               ROL     R17
   \   00000080   ....               LDI     R30, LOW(_remocon_data)
   \   00000082   ....               LDI     R31, (_remocon_data) >> 8
   \   00000084   8300               ST      Z, R16
   \   00000086   8311               STD     Z+1, R17
   \   00000088   9100....           LDS     R16, bit_input
   \   0000008C   E010               LDI     R17, 0
   \   0000008E   ....               LDI     R30, LOW(_remocon_data)
   \   00000090   ....               LDI     R31, (_remocon_data) >> 8
   \   00000092   8120               LD      R18, Z
   \   00000094   8131               LDD     R19, Z+1
   \   00000096   2B20               OR      R18, R16
   \   00000098   2B31               OR      R19, R17
   \   0000009A   8320               ST      Z, R18
   \   0000009C   8331               STD     Z+1, R19
   \   0000009E   C015               RJMP    ??remocon_data_4
   \                     ??remocon_data_3:
   \   000000A0   ....               LDI     R30, LOW(_remocon_data_2)
   \   000000A2   ....               LDI     R31, (_remocon_data_2) >> 8
   \   000000A4   8100               LD      R16, Z
   \   000000A6   8111               LDD     R17, Z+1
   \   000000A8   0F00               LSL     R16
   \   000000AA   1F11               ROL     R17
   \   000000AC   ....               LDI     R30, LOW(_remocon_data_2)
   \   000000AE   ....               LDI     R31, (_remocon_data_2) >> 8
   \   000000B0   8300               ST      Z, R16
   \   000000B2   8311               STD     Z+1, R17
   \   000000B4   9100....           LDS     R16, bit_input
   \   000000B8   E010               LDI     R17, 0
   \   000000BA   ....               LDI     R30, LOW(_remocon_data_2)
   \   000000BC   ....               LDI     R31, (_remocon_data_2) >> 8
   \   000000BE   8120               LD      R18, Z
   \   000000C0   8131               LDD     R19, Z+1
   \   000000C2   2B20               OR      R18, R16
   \   000000C4   2B31               OR      R19, R17
   \   000000C6   8320               ST      Z, R18
   \   000000C8   8331               STD     Z+1, R19
   \                     ??remocon_data_4:
   \   000000CA   9100....           LDS     R16, _remocon_counter
   \   000000CE   9503               INC     R16
   \   000000D0   9300....           STS     _remocon_counter, R16
   \   000000D4   9100....           LDS     R16, _remocon_counter
   \   000000D8   3008               CPI     R16, 8
   \   000000DA   F040               BRCS    ??remocon_data_5
   \   000000DC   9100....           LDS     R16, _code_remocon
   \   000000E0   9503               INC     R16
   \   000000E2   9300....           STS     _code_remocon, R16
   \   000000E6   E000               LDI     R16, 0
   \   000000E8   9300....           STS     _remocon_counter, R16
   \                     ??remocon_data_5:
   \   000000EC   9100....           LDS     R16, _code_remocon
   \   000000F0   3005               CPI     R16, 5
   \   000000F2   F408               BRCC    $+2+2
   \   000000F4   C0FC               RJMP    ??remocon_data_6
   \   000000F6   ....               LDI     R30, LOW(_remocon_custom)
   \   000000F8   ....               LDI     R31, (_remocon_custom) >> 8
   \   000000FA   8100               LD      R16, Z
   \   000000FC   8111               LDD     R17, Z+1
   \   000000FE   700F               ANDI    R16, 0x0F
   \   00000100   7010               ANDI    R17, 0x00
   \   00000102   8300               ST      Z, R16
   \   00000104   8311               STD     Z+1, R17
   \   00000106   ....               LDI     R30, LOW(_remocon_custom_2)
   \   00000108   ....               LDI     R31, (_remocon_custom_2) >> 8
   \   0000010A   8100               LD      R16, Z
   \   0000010C   8111               LDD     R17, Z+1
   \   0000010E   700F               ANDI    R16, 0x0F
   \   00000110   7010               ANDI    R17, 0x00
   \   00000112   8300               ST      Z, R16
   \   00000114   8311               STD     Z+1, R17
   \   00000116   ....               LDI     R26, LOW(_remocon_custom)
   \   00000118   ....               LDI     R27, (_remocon_custom) >> 8
   \   0000011A   91ED               LD      R30, X+
   \   0000011C   91FC               LD      R31, X
   \   0000011E   9737               SBIW    R31:R30, 7
   \   00000120   F009               BREQ    $+2+2
   \   00000122   C0A8               RJMP    ??remocon_data_7
   \   00000124   ....               LDI     R26, LOW(_remocon_custom_2)
   \   00000126   ....               LDI     R27, (_remocon_custom_2) >> 8
   \   00000128   91ED               LD      R30, X+
   \   0000012A   91FC               LD      R31, X
   \   0000012C   973A               SBIW    R31:R30, 10
   \   0000012E   F009               BREQ    $+2+2
   \   00000130   C0A1               RJMP    ??remocon_data_7
   \   00000132   ....               LDI     R30, LOW(_remocon_data_2)
   \   00000134   ....               LDI     R31, (_remocon_data_2) >> 8
   \   00000136   8100               LD      R16, Z
   \   00000138   8111               LDD     R17, Z+1
   \   0000013A   ....               LDI     R30, LOW(_remocon_data)
   \   0000013C   ....               LDI     R31, (_remocon_data) >> 8
   \   0000013E   8120               LD      R18, Z
   \   00000140   8131               LDD     R19, Z+1
   \   00000142   EF4F               LDI     R20, 255
   \   00000144   2724               EOR     R18, R20
   \   00000146   E040               LDI     R20, 0
   \   00000148   2734               EOR     R19, R20
   \   0000014A   1702               CP      R16, R18
   \   0000014C   0713               CPC     R17, R19
   \   0000014E   F009               BREQ    $+2+2
   \   00000150   C08F               RJMP    ??remocon_data_8
   \   00000152   ....               LDI     R30, LOW(_remocon_data)
   \   00000154   ....               LDI     R31, (_remocon_data) >> 8
   \   00000156   8100               LD      R16, Z
   \   00000158   9300....           STS     _repeat_data, R16
   \   0000015C   9100....           LDS     R16, init_setting_check
   \   00000160   2300               TST     R16
   \   00000162   F409               BRNE    $+2+2
   \   00000164   C081               RJMP    ??remocon_data_9
   \   00000166   ....               LDI     R30, LOW(cnt_remocon)
   \   00000168   ....               LDI     R31, (cnt_remocon) >> 8
   \   0000016A   8100               LD      R16, Z
   \   0000016C   8111               LDD     R17, Z+1
   \   0000016E   5E09               SUBI    R16, 233
   \   00000170   4013               SBCI    R17, 3
   \   00000172   3F03               CPI     R16, 243
   \   00000174   E021               LDI     R18, 1
   \   00000176   0712               CPC     R17, R18
   \   00000178   F498               BRCC    ??remocon_data_10
   \   0000017A   ....               LDI     R30, LOW(_remocon_data)
   \   0000017C   ....               LDI     R31, (_remocon_data) >> 8
   \   0000017E   8100               LD      R16, Z
   \   00000180   8111               LDD     R17, Z+1
   \   00000182   3800               CPI     R16, 128
   \   00000184   E020               LDI     R18, 0
   \   00000186   0712               CPC     R17, R18
   \   00000188   F411               BRNE    ??remocon_data_11
   \   0000018A   ....               RCALL   audio_level_up
   \   0000018C   C009               RJMP    ??remocon_data_10
   \                     ??remocon_data_11:
   \   0000018E   ....               LDI     R30, LOW(_remocon_data)
   \   00000190   ....               LDI     R31, (_remocon_data) >> 8
   \   00000192   8100               LD      R16, Z
   \   00000194   8111               LDD     R17, Z+1
   \   00000196   3A08               CPI     R16, 168
   \   00000198   E020               LDI     R18, 0
   \   0000019A   0712               CPC     R17, R18
   \   0000019C   F409               BRNE    ??remocon_data_10
   \   0000019E   ....               RCALL   audio_level_down
   \                     ??remocon_data_10:
   \   000001A0   ....               LDI     R30, LOW(cnt_remocon)
   \   000001A2   ....               LDI     R31, (cnt_remocon) >> 8
   \   000001A4   E001               LDI     R16, 1
   \   000001A6   E010               LDI     R17, 0
   \   000001A8   8300               ST      Z, R16
   \   000001AA   8311               STD     Z+1, R17
   \   000001AC   E000               LDI     R16, 0
   \   000001AE   9300....           STS     rom_save_flag, R16
   \   000001B2   ....               LDI     R30, LOW(_remocon_data)
   \   000001B4   ....               LDI     R31, (_remocon_data) >> 8
   \   000001B6   8100               LD      R16, Z
   \   000001B8   8111               LDD     R17, Z+1
   \   000001BA   3B00               CPI     R16, 176
   \   000001BC   E020               LDI     R18, 0
   \   000001BE   0712               CPC     R17, R18
   \   000001C0   F411               BRNE    ??remocon_data_12
   \   000001C2   ....               RCALL   ess_mute
   \   000001C4   C051               RJMP    ??remocon_data_9
   \                     ??remocon_data_12:
   \   000001C6   ....               LDI     R30, LOW(_remocon_data)
   \   000001C8   ....               LDI     R31, (_remocon_data) >> 8
   \   000001CA   8100               LD      R16, Z
   \   000001CC   8111               LDD     R17, Z+1
   \   000001CE   3800               CPI     R16, 128
   \   000001D0   E020               LDI     R18, 0
   \   000001D2   0712               CPC     R17, R18
   \   000001D4   F411               BRNE    ??remocon_data_13
   \   000001D6   ....               RCALL   audio_level_up
   \   000001D8   C047               RJMP    ??remocon_data_9
   \                     ??remocon_data_13:
   \   000001DA   ....               LDI     R30, LOW(_remocon_data)
   \   000001DC   ....               LDI     R31, (_remocon_data) >> 8
   \   000001DE   8100               LD      R16, Z
   \   000001E0   8111               LDD     R17, Z+1
   \   000001E2   3A08               CPI     R16, 168
   \   000001E4   E020               LDI     R18, 0
   \   000001E6   0712               CPC     R17, R18
   \   000001E8   F411               BRNE    ??remocon_data_14
   \   000001EA   ....               RCALL   audio_level_down
   \   000001EC   C03D               RJMP    ??remocon_data_9
   \                     ??remocon_data_14:
   \   000001EE   ....               LDI     R30, LOW(_remocon_data)
   \   000001F0   ....               LDI     R31, (_remocon_data) >> 8
   \   000001F2   8100               LD      R16, Z
   \   000001F4   8111               LDD     R17, Z+1
   \   000001F6   3900               CPI     R16, 144
   \   000001F8   E020               LDI     R18, 0
   \   000001FA   0712               CPC     R17, R18
   \   000001FC   F411               BRNE    ??remocon_data_15
   \   000001FE   ....               RCALL   channel_up
   \   00000200   C033               RJMP    ??remocon_data_9
   \                     ??remocon_data_15:
   \   00000202   ....               LDI     R30, LOW(_remocon_data)
   \   00000204   ....               LDI     R31, (_remocon_data) >> 8
   \   00000206   8100               LD      R16, Z
   \   00000208   8111               LDD     R17, Z+1
   \   0000020A   3808               CPI     R16, 136
   \   0000020C   E020               LDI     R18, 0
   \   0000020E   0712               CPC     R17, R18
   \   00000210   F411               BRNE    ??remocon_data_16
   \   00000212   ....               RCALL   channel_down
   \   00000214   C029               RJMP    ??remocon_data_9
   \                     ??remocon_data_16:
   \   00000216   ....               LDI     R30, LOW(_remocon_data)
   \   00000218   ....               LDI     R31, (_remocon_data) >> 8
   \   0000021A   8100               LD      R16, Z
   \   0000021C   8111               LDD     R17, Z+1
   \   0000021E   3A00               CPI     R16, 160
   \   00000220   E020               LDI     R18, 0
   \   00000222   0712               CPC     R17, R18
   \   00000224   F469               BRNE    ??remocon_data_17
   \   00000226   9100....           LDS     R16, key_condition
   \   0000022A   2300               TST     R16
   \   0000022C   F421               BRNE    ??remocon_data_18
   \   0000022E   E001               LDI     R16, 1
   \   00000230   9300....           STS     key_func, R16
   \   00000234   C003               RJMP    ??remocon_data_19
   \                     ??remocon_data_18:
   \   00000236   E003               LDI     R16, 3
   \   00000238   9300....           STS     key_func, R16
   \                     ??remocon_data_19:
   \   0000023C   ....               RCALL   femto_function
   \   0000023E   C014               RJMP    ??remocon_data_9
   \                     ??remocon_data_17:
   \   00000240   ....               LDI     R30, LOW(_remocon_data)
   \   00000242   ....               LDI     R31, (_remocon_data) >> 8
   \   00000244   8100               LD      R16, Z
   \   00000246   8111               LDD     R17, Z+1
   \   00000248   3908               CPI     R16, 152
   \   0000024A   E020               LDI     R18, 0
   \   0000024C   0712               CPC     R17, R18
   \   0000024E   F461               BRNE    ??remocon_data_9
   \   00000250   9100....           LDS     R16, key_condition
   \   00000254   2300               TST     R16
   \   00000256   F421               BRNE    ??remocon_data_20
   \   00000258   E002               LDI     R16, 2
   \   0000025A   9300....           STS     key_func, R16
   \   0000025E   C003               RJMP    ??remocon_data_21
   \                     ??remocon_data_20:
   \   00000260   E004               LDI     R16, 4
   \   00000262   9300....           STS     key_func, R16
   \                     ??remocon_data_21:
   \   00000266   ....               RCALL   femto_function
   \                     ??remocon_data_9:
   \   00000268   E000               LDI     R16, 0
   \   0000026A   9300....           STS     new_repeat_flag, R16
   \   0000026E   C003               RJMP    ??remocon_data_22
   \                     ??remocon_data_8:
   \   00000270   ....               RCALL   IR_error
   \   00000272   C001               RJMP    ??remocon_data_22
   \                     ??remocon_data_7:
   \   00000274   ....               RCALL   IR_error
   \                     ??remocon_data_22:
   \   00000276   E000               LDI     R16, 0
   \   00000278   9300....           STS     _flg_on_remocon, R16
   \   0000027C   E000               LDI     R16, 0
   \   0000027E   9300....           STS     _code_remocon, R16
   \   00000282   ....               LDI     R30, LOW(_remocon_custom_2)
   \   00000284   ....               LDI     R31, (_remocon_custom_2) >> 8
   \   00000286   E000               LDI     R16, 0
   \   00000288   8300               ST      Z, R16
   \   0000028A   E000               LDI     R16, 0
   \   0000028C   8301               STD     Z+1, R16
   \   0000028E   ....               LDI     R30, LOW(_remocon_custom)
   \   00000290   ....               LDI     R31, (_remocon_custom) >> 8
   \   00000292   E000               LDI     R16, 0
   \   00000294   8300               ST      Z, R16
   \   00000296   E000               LDI     R16, 0
   \   00000298   8301               STD     Z+1, R16
   \   0000029A   ....               LDI     R30, LOW(_remocon_data)
   \   0000029C   ....               LDI     R31, (_remocon_data) >> 8
   \   0000029E   E000               LDI     R16, 0
   \   000002A0   8300               ST      Z, R16
   \   000002A2   E000               LDI     R16, 0
   \   000002A4   8301               STD     Z+1, R16
   \   000002A6   ....               LDI     R30, LOW(_remocon_data_2)
   \   000002A8   ....               LDI     R31, (_remocon_data_2) >> 8
   \   000002AA   E000               LDI     R16, 0
   \   000002AC   8300               ST      Z, R16
   \   000002AE   E000               LDI     R16, 0
   \   000002B0   8301               STD     Z+1, R16
   \   000002B2   E000               LDI     R16, 0
   \   000002B4   9300....           STS     _remocon_counter, R16
   \   000002B8   E000               LDI     R16, 0
   \   000002BA   9300....           STS     low_start_flag, R16
   \   000002BE   E000               LDI     R16, 0
   \   000002C0   9300....           STS     high_start_flag, R16
   \   000002C4   E000               LDI     R16, 0
   \   000002C6   9300....           STS     low_bit_time, R16
   \   000002CA   E000               LDI     R16, 0
   \   000002CC   9300....           STS     high_bit_0, R16
   \   000002D0   E000               LDI     R16, 0
   \   000002D2   9300....           STS     high_bit_1, R16
   \   000002D6   E000               LDI     R16, 0
   \   000002D8   9300....           STS     high_repeat_flag0, R16
   \   000002DC   E000               LDI     R16, 0
   \   000002DE   9300....           STS     high_repeat_flag1, R16
   \   000002E2   E000               LDI     R16, 0
   \   000002E4   9300....           STS     _repeat_remocon, R16
   \   000002E8   E000               LDI     R16, 0
   \   000002EA   9300....           STS     ir_error_check, R16
   \                     ??remocon_data_6:
   \   000002EE   91A9               LD      R26, Y+
   \   000002F0   91B9               LD      R27, Y+
   \   000002F2   9508               RET

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int sp_en_cnt
   \                     sp_en_cnt:
   \   00000000                      DS8 2

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void _remocon_processing()
   \                     _remocon_processing:
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
   \   00000004   9100....           LDS     R16, low_start_flag
   \   00000008   2300               TST     R16
   \   0000000A   F1E9               BREQ    ??_remocon_processing_0
   \   0000000C   9100....           LDS     R16, high_start_flag
   \   00000010   2300               TST     R16
   \   00000012   F1C9               BREQ    ??_remocon_processing_0
   \   00000014   9100....           LDS     R16, _flg_on_remocon
   \   00000018   2300               TST     R16
   \   0000001A   F009               BREQ    $+2+2
   \   0000001C   C0B8               RJMP    ??_remocon_processing_1
   \   0000001E   E001               LDI     R16, 1
   \   00000020   9300....           STS     _flg_on_remocon, R16
   \   00000024   E001               LDI     R16, 1
   \   00000026   9300....           STS     _code_remocon, R16
   \   0000002A   E000               LDI     R16, 0
   \   0000002C   9300....           STS     _flg_repeat, R16
   \   00000030   E000               LDI     R16, 0
   \   00000032   9300....           STS     _flg_run_repeat, R16
   \   00000036   ....               LDI     R30, LOW(_remocon_repeat_count)
   \   00000038   ....               LDI     R31, (_remocon_repeat_count) >> 8
   \   0000003A   E000               LDI     R16, 0
   \   0000003C   8300               ST      Z, R16
   \   0000003E   E000               LDI     R16, 0
   \   00000040   8301               STD     Z+1, R16
   \   00000042   E000               LDI     R16, 0
   \   00000044   9300....           STS     low_start_flag, R16
   \   00000048   E000               LDI     R16, 0
   \   0000004A   9300....           STS     high_start_flag, R16
   \   0000004E   E000               LDI     R16, 0
   \   00000050   9300....           STS     low_bit_time, R16
   \   00000054   E000               LDI     R16, 0
   \   00000056   9300....           STS     high_bit_0, R16
   \   0000005A   E000               LDI     R16, 0
   \   0000005C   9300....           STS     high_bit_1, R16
   \   00000060   E000               LDI     R16, 0
   \   00000062   9300....           STS     high_repeat_flag0, R16
   \   00000066   E000               LDI     R16, 0
   \   00000068   9300....           STS     high_repeat_flag1, R16
   \   0000006C   E000               LDI     R16, 0
   \   0000006E   9300....           STS     _repeat_remocon, R16
   \   00000072   ....               LDI     R30, LOW(sp_en_cnt)
   \   00000074   ....               LDI     R31, (sp_en_cnt) >> 8
   \   00000076   E000               LDI     R16, 0
   \   00000078   8300               ST      Z, R16
   \   0000007A   E000               LDI     R16, 0
   \   0000007C   8301               STD     Z+1, R16
   \   0000007E   E000               LDI     R16, 0
   \   00000080   9300....           STS     ir_error_check, R16
   \   00000084   C084               RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_0:
   \   00000086   9100....           LDS     R16, _flg_on_remocon
   \   0000008A   2300               TST     R16
   \   0000008C   F099               BREQ    ??_remocon_processing_2
   \   0000008E   9100....           LDS     R16, low_bit_time
   \   00000092   2300               TST     R16
   \   00000094   F079               BREQ    ??_remocon_processing_2
   \   00000096   9100....           LDS     R16, high_bit_0
   \   0000009A   2300               TST     R16
   \   0000009C   F059               BREQ    ??_remocon_processing_2
   \   0000009E   E000               LDI     R16, 0
   \   000000A0   9300....           STS     bit_input, R16
   \   000000A4   E000               LDI     R16, 0
   \   000000A6   9300....           STS     low_bit_time, R16
   \   000000AA   E000               LDI     R16, 0
   \   000000AC   9300....           STS     high_bit_0, R16
   \   000000B0   ....               RCALL   remocon_data
   \   000000B2   C06D               RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_2:
   \   000000B4   9100....           LDS     R16, _flg_on_remocon
   \   000000B8   2300               TST     R16
   \   000000BA   F099               BREQ    ??_remocon_processing_3
   \   000000BC   9100....           LDS     R16, low_bit_time
   \   000000C0   2300               TST     R16
   \   000000C2   F079               BREQ    ??_remocon_processing_3
   \   000000C4   9100....           LDS     R16, high_bit_1
   \   000000C8   2300               TST     R16
   \   000000CA   F059               BREQ    ??_remocon_processing_3
   \   000000CC   E001               LDI     R16, 1
   \   000000CE   9300....           STS     bit_input, R16
   \   000000D2   E000               LDI     R16, 0
   \   000000D4   9300....           STS     low_bit_time, R16
   \   000000D8   E000               LDI     R16, 0
   \   000000DA   9300....           STS     high_bit_1, R16
   \   000000DE   ....               RCALL   remocon_data
   \   000000E0   C056               RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_3:
   \   000000E2   9100....           LDS     R16, _flg_on_remocon
   \   000000E6   2300               TST     R16
   \   000000E8   F481               BRNE    ??_remocon_processing_4
   \   000000EA   9100....           LDS     R16, high_repeat_flag0
   \   000000EE   2300               TST     R16
   \   000000F0   F061               BREQ    ??_remocon_processing_4
   \   000000F2   E001               LDI     R16, 1
   \   000000F4   9300....           STS     _repeat_remocon, R16
   \   000000F8   E000               LDI     R16, 0
   \   000000FA   9300....           STS     high_repeat_flag0, R16
   \   000000FE   9100....           LDS     R16, ir_error_check
   \   00000102   9503               INC     R16
   \   00000104   9300....           STS     ir_error_check, R16
   \   00000108   C042               RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_4:
   \   0000010A   9100....           LDS     R16, _repeat_remocon
   \   0000010E   2300               TST     R16
   \   00000110   F1F1               BREQ    ??_remocon_processing_1
   \   00000112   9100....           LDS     R16, high_repeat_flag1
   \   00000116   2300               TST     R16
   \   00000118   F1D1               BREQ    ??_remocon_processing_1
   \   0000011A   9100....           LDS     R16, init_setting_check
   \   0000011E   2300               TST     R16
   \   00000120   F1B1               BREQ    ??_remocon_processing_1
   \   00000122   9100....           LDS     R16, ir_error_check
   \   00000126   3001               CPI     R16, 1
   \   00000128   F561               BRNE    ??_remocon_processing_5
   \   0000012A   E000               LDI     R16, 0
   \   0000012C   9300....           STS     high_repeat_flag1, R16
   \   00000130   E000               LDI     R16, 0
   \   00000132   9300....           STS     rom_save_flag, R16
   \   00000136   ....               LDI     R30, LOW(sp_en_cnt)
   \   00000138   ....               LDI     R31, (sp_en_cnt) >> 8
   \   0000013A   8100               LD      R16, Z
   \   0000013C   8111               LDD     R17, Z+1
   \   0000013E   5F0F               SUBI    R16, 255
   \   00000140   4F1F               SBCI    R17, 255
   \   00000142   8300               ST      Z, R16
   \   00000144   8311               STD     Z+1, R17
   \   00000146   ....               LDI     R26, LOW(sp_en_cnt)
   \   00000148   ....               LDI     R27, (sp_en_cnt) >> 8
   \   0000014A   91ED               LD      R30, X+
   \   0000014C   91FC               LD      R31, X
   \   0000014E   9733               SBIW    R31:R30, 3
   \   00000150   F060               BRCS    ??_remocon_processing_6
   \   00000152   9100....           LDS     R16, _repeat_data
   \   00000156   3800               CPI     R16, 128
   \   00000158   F411               BRNE    ??_remocon_processing_7
   \   0000015A   ....               RCALL   audio_level_sp_up
   \   0000015C   C018               RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_7:
   \   0000015E   9100....           LDS     R16, _repeat_data
   \   00000162   3A08               CPI     R16, 168
   \   00000164   F4A1               BRNE    ??_remocon_processing_1
   \   00000166   ....               RCALL   audio_level_sp_down
   \   00000168   C012               RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_6:
   \   0000016A   9100....           LDS     R16, _repeat_data
   \   0000016E   3800               CPI     R16, 128
   \   00000170   F411               BRNE    ??_remocon_processing_8
   \   00000172   ....               RCALL   audio_level_up
   \   00000174   C00C               RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_8:
   \   00000176   9100....           LDS     R16, _repeat_data
   \   0000017A   3A08               CPI     R16, 168
   \   0000017C   F441               BRNE    ??_remocon_processing_1
   \   0000017E   ....               RCALL   audio_level_down
   \   00000180   C006               RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_5:
   \   00000182   E000               LDI     R16, 0
   \   00000184   9300....           STS     ir_error_check, R16
   \   00000188   E000               LDI     R16, 0
   \   0000018A   9300....           STS     _repeat_data, R16
   \                     ??_remocon_processing_1:
   \   0000018E   91A9               LD      R26, Y+
   \   00000190   91B9               LD      R27, Y+
   \   00000192   9508               RET

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char ir_error
   \                     ir_error:
   \   00000000                      DS8 1

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 __interrupt void INT5_Handler(void)
   \                     INT5_Handler:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   93FA               ST      -Y, R31
   \   00000006   93EA               ST      -Y, R30
   \   00000008   923A               ST      -Y, R3
   \   0000000A   922A               ST      -Y, R2
   \   0000000C   921A               ST      -Y, R1
   \   0000000E   920A               ST      -Y, R0
   \   00000010   937A               ST      -Y, R23
   \   00000012   936A               ST      -Y, R22
   \   00000014   935A               ST      -Y, R21
   \   00000016   934A               ST      -Y, R20
   \   00000018   933A               ST      -Y, R19
   \   0000001A   932A               ST      -Y, R18
   \   0000001C   931A               ST      -Y, R17
   \   0000001E   930A               ST      -Y, R16
   \   00000020   B78F               IN      R24, 0x3F
   \   00000022   B79B               IN      R25, 0x3B
   \   00000024   9B0D               SBIS    0x01, 0x05
   \   00000026   C01A               RJMP    ??INT5_Handler_0
   \   00000028   91E0....           LDS     R30, _counter_remocon
   \   0000002C   91F0....           LDS     R31, (_counter_remocon + 1)
   \   00000030   9734               SBIW    R31:R30, 4
   \   00000032   9735               SBIW    R31:R30, 5
   \   00000034   F420               BRCC    ??INT5_Handler_1
   \   00000036   E001               LDI     R16, 1
   \   00000038   9300....           STS     low_bit_time, R16
   \   0000003C   C051               RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_1:
   \   0000003E   91E0....           LDS     R30, _counter_remocon
   \   00000042   91F0....           LDS     R31, (_counter_remocon + 1)
   \   00000046   97F7               SBIW    R31:R30, 55
   \   00000048   97BE               SBIW    R31:R30, 46
   \   0000004A   F420               BRCC    ??INT5_Handler_3
   \   0000004C   E001               LDI     R16, 1
   \   0000004E   9300....           STS     low_start_flag, R16
   \   00000052   C046               RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_3:
   \   00000054   E001               LDI     R16, 1
   \   00000056   9300....           STS     ir_error, R16
   \   0000005A   C042               RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_0:
   \   0000005C   990D               SBIC    0x01, 0x05
   \   0000005E   C040               RJMP    ??INT5_Handler_2
   \   00000060   91E0....           LDS     R30, _counter_remocon
   \   00000064   91F0....           LDS     R31, (_counter_remocon + 1)
   \   00000068   9734               SBIW    R31:R30, 4
   \   0000006A   9735               SBIW    R31:R30, 5
   \   0000006C   F420               BRCC    ??INT5_Handler_4
   \   0000006E   E001               LDI     R16, 1
   \   00000070   9300....           STS     high_bit_0, R16
   \   00000074   C035               RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_4:
   \   00000076   91E0....           LDS     R30, _counter_remocon
   \   0000007A   91F0....           LDS     R31, (_counter_remocon + 1)
   \   0000007E   9739               SBIW    R31:R30, 9
   \   00000080   973E               SBIW    R31:R30, 14
   \   00000082   F420               BRCC    ??INT5_Handler_5
   \   00000084   E001               LDI     R16, 1
   \   00000086   9300....           STS     high_bit_1, R16
   \   0000008A   C02A               RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_5:
   \   0000008C   91E0....           LDS     R30, _counter_remocon
   \   00000090   91F0....           LDS     R31, (_counter_remocon + 1)
   \   00000094   97B8               SBIW    R31:R30, 40
   \   00000096   9770               SBIW    R31:R30, 16
   \   00000098   F420               BRCC    ??INT5_Handler_6
   \   0000009A   E001               LDI     R16, 1
   \   0000009C   9300....           STS     high_start_flag, R16
   \   000000A0   C01F               RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_6:
   \   000000A2   9100....           LDS     R16, _counter_remocon
   \   000000A6   9110....           LDS     R17, (_counter_remocon + 1)
   \   000000AA   5C08               SUBI    R16, 200
   \   000000AC   4010               SBCI    R17, 0
   \   000000AE   3C09               CPI     R16, 201
   \   000000B0   E020               LDI     R18, 0
   \   000000B2   0712               CPC     R17, R18
   \   000000B4   F420               BRCC    ??INT5_Handler_7
   \   000000B6   E001               LDI     R16, 1
   \   000000B8   9300....           STS     high_repeat_flag0, R16
   \   000000BC   C011               RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_7:
   \   000000BE   9100....           LDS     R16, _counter_remocon
   \   000000C2   9110....           LDS     R17, (_counter_remocon + 1)
   \   000000C6   5200               SUBI    R16, 32
   \   000000C8   4013               SBCI    R17, 3
   \   000000CA   3C09               CPI     R16, 201
   \   000000CC   E020               LDI     R18, 0
   \   000000CE   0712               CPC     R17, R18
   \   000000D0   F420               BRCC    ??INT5_Handler_8
   \   000000D2   E001               LDI     R16, 1
   \   000000D4   9300....           STS     high_repeat_flag1, R16
   \   000000D8   C003               RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_8:
   \   000000DA   E001               LDI     R16, 1
   \   000000DC   9300....           STS     ir_error, R16
   \                     ??INT5_Handler_2:
   \   000000E0   E000               LDI     R16, 0
   \   000000E2   9300....           STS     _counter_remocon, R16
   \   000000E6   E000               LDI     R16, 0
   \   000000E8   9300....           STS     (_counter_remocon + 1), R16
   \   000000EC   9100....           LDS     R16, ir_error
   \   000000F0   2300               TST     R16
   \   000000F2   F041               BREQ    ??INT5_Handler_9
   \   000000F4   E000               LDI     R16, 0
   \   000000F6   9300....           STS     ir_error, R16
   \   000000FA   E000               LDI     R16, 0
   \   000000FC   9300....           STS     high_repeat_flag1, R16
   \   00000100   ....               RCALL   IR_error
   \   00000102   C001               RJMP    ??INT5_Handler_10
   \                     ??INT5_Handler_9:
   \   00000104   ....               RCALL   _remocon_processing
   \                     ??INT5_Handler_10:
   \   00000106   BF9B               OUT     0x3B, R25
   \   00000108   BF8F               OUT     0x3F, R24
   \   0000010A   9109               LD      R16, Y+
   \   0000010C   9119               LD      R17, Y+
   \   0000010E   9129               LD      R18, Y+
   \   00000110   9139               LD      R19, Y+
   \   00000112   9149               LD      R20, Y+
   \   00000114   9159               LD      R21, Y+
   \   00000116   9169               LD      R22, Y+
   \   00000118   9179               LD      R23, Y+
   \   0000011A   9009               LD      R0, Y+
   \   0000011C   9019               LD      R1, Y+
   \   0000011E   9029               LD      R2, Y+
   \   00000120   9039               LD      R3, Y+
   \   00000122   91E9               LD      R30, Y+
   \   00000124   91F9               LD      R31, Y+
   \   00000126   9189               LD      R24, Y+
   \   00000128   9199               LD      R25, Y+
   \   0000012A   9518               RETI
   \   0000012C                      REQUIRE _A_PINE

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int mtime_length
   \                     mtime_length:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char mtime_flag
   \                     mtime_flag:
   \   00000000                      DS8 1

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void _system_init(void)
   \                     _system_init:
   \   00000000   EF0F               LDI     R16, 255
   \   00000002   BB0A               OUT     0x1A, R16
   \   00000004   EB0D               LDI     R16, 189
   \   00000006   BB07               OUT     0x17, R16
   \   00000008   EF0F               LDI     R16, 255
   \   0000000A   BB04               OUT     0x14, R16
   \   0000000C   E803               LDI     R16, 131
   \   0000000E   BB01               OUT     0x11, R16
   \   00000010   E008               LDI     R16, 8
   \   00000012   B902               OUT     0x02, R16
   \   00000014   E00F               LDI     R16, 15
   \   00000016   9300....           STS     _A_DDRF, R16
   \   0000001A   E10F               LDI     R16, 31
   \   0000001C   9300....           STS     _A_DDRG, R16
   \   00000020   E000               LDI     R16, 0
   \   00000022   BB0B               OUT     0x1B, R16
   \   00000024   E70F               LDI     R16, 127
   \   00000026   BB08               OUT     0x18, R16
   \   00000028   EF0F               LDI     R16, 255
   \   0000002A   BB05               OUT     0x15, R16
   \   0000002C   EF0F               LDI     R16, 255
   \   0000002E   BB02               OUT     0x12, R16
   \   00000030   EF0F               LDI     R16, 255
   \   00000032   B903               OUT     0x03, R16
   \   00000034   EF00               LDI     R16, 240
   \   00000036   9300....           STS     _A_PORTF, R16
   \   0000003A   E10E               LDI     R16, 30
   \   0000003C   9300....           STS     _A_PORTG, R16
   \   00000040   E003               LDI     R16, 3
   \   00000042   BF03               OUT     0x33, R16
   \   00000044   E005               LDI     R16, 5
   \   00000046   BD0E               OUT     0x2E, R16
   \   00000048   E002               LDI     R16, 2
   \   0000004A   BD05               OUT     0x25, R16
   \   0000004C   E307               LDI     R16, 55
   \   0000004E   BD04               OUT     0x24, R16
   \   00000050   E005               LDI     R16, 5
   \   00000052   BF02               OUT     0x32, R16
   \   00000054   EE04               LDI     R16, 228
   \   00000056   EF19               LDI     R17, 249
   \   00000058   BD1D               OUT     0x2D, R17
   \   0000005A   BD0C               OUT     0x2C, R16
   \   0000005C   E000               LDI     R16, 0
   \   0000005E   BF01               OUT     0x31, R16
   \   00000060   E405               LDI     R16, 69
   \   00000062   BF07               OUT     0x37, R16
   \   00000064   E405               LDI     R16, 69
   \   00000066   BF06               OUT     0x36, R16
   \   00000068   EF0C               LDI     R16, 252
   \   0000006A   BF09               OUT     0x39, R16
   \   0000006C   EA00               LDI     R16, 160
   \   0000006E   9300....           STS     _A_EICRA, R16
   \   00000072   E505               LDI     R16, 85
   \   00000074   BF0A               OUT     0x3A, R16
   \   00000076   EF0C               LDI     R16, 252
   \   00000078   BF08               OUT     0x38, R16
   \   0000007A   EB28               LDI     R18, 184
   \   0000007C   E014               LDI     R17, 4
   \   0000007E   E200               LDI     R16, 32
   \   00000080   ........           CALL    I2C_Write
   \   00000084   EC2F               LDI     R18, 207
   \   00000086   E01A               LDI     R17, 10
   \   00000088   E900               LDI     R16, 144
   \   0000008A   ........           CALL    I2C_Write
   \   0000008E   EC2F               LDI     R18, 207
   \   00000090   E01A               LDI     R17, 10
   \   00000092   E902               LDI     R16, 146
   \   00000094   ........           CALL    I2C_Write
   \   00000098   ........           CALL    dot_matrix_clear
   \   0000009C   9478               SEI
   \   0000009E   E000               LDI     R16, 0
   \   000000A0   C007               RJMP    ??_system_init_0
   \                     ??_system_init_1:
   \   000000A2   E010               LDI     R17, 0
   \   000000A4   01F8               MOVW    R31:R30, R17:R16
   \   000000A6   ....               SUBI    R30, LOW((-(dot_string) & 0xFFFF))
   \   000000A8   ....               SBCI    R31, (-(dot_string) & 0xFFFF) >> 8
   \   000000AA   E210               LDI     R17, 32
   \   000000AC   8310               ST      Z, R17
   \   000000AE   9503               INC     R16
   \                     ??_system_init_0:
   \   000000B0   3100               CPI     R16, 16
   \   000000B2   F3B8               BRCS    ??_system_init_1
   \   000000B4   E000               LDI     R16, 0
   \   000000B6   9300....           STS     ess_lch_master_trim, R16
   \   000000BA   E000               LDI     R16, 0
   \   000000BC   9300....           STS     ess_rch_master_trim, R16
   \   000000C0   E001               LDI     R16, 1
   \   000000C2   9300....           STS     tmr_osc, R16
   \   000000C6   9508               RET
   \   000000C8                      REQUIRE _A_DDRA
   \   000000C8                      REQUIRE _A_DDRB
   \   000000C8                      REQUIRE _A_DDRC
   \   000000C8                      REQUIRE _A_DDRD
   \   000000C8                      REQUIRE _A_DDRE
   \   000000C8                      REQUIRE _A_DDRF
   \   000000C8                      REQUIRE _A_DDRG
   \   000000C8                      REQUIRE _A_PORTA
   \   000000C8                      REQUIRE _A_PORTB
   \   000000C8                      REQUIRE _A_PORTC
   \   000000C8                      REQUIRE _A_PORTD
   \   000000C8                      REQUIRE _A_PORTE
   \   000000C8                      REQUIRE _A_PORTF
   \   000000C8                      REQUIRE _A_PORTG
   \   000000C8                      REQUIRE _A_TCCR0
   \   000000C8                      REQUIRE _A_TCCR1B
   \   000000C8                      REQUIRE _A_TCCR2
   \   000000C8                      REQUIRE _A_TCNT2
   \   000000C8                      REQUIRE _A_TCNT0
   \   000000C8                      REQUIRE _A_TCNT1
   \   000000C8                      REQUIRE _A_OCR0
   \   000000C8                      REQUIRE _A_TIMSK
   \   000000C8                      REQUIRE _A_TIFR
   \   000000C8                      REQUIRE _A_EIMSK
   \   000000C8                      REQUIRE _A_EICRA
   \   000000C8                      REQUIRE _A_EICRB
   \   000000C8                      REQUIRE _A_EIFR

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int test_check
   \                     test_check:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int test_check2
   \                     test_check2:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char init_rom_data0
   \                     init_rom_data0:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char init_rom_data1
   \                     init_rom_data1:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char init_rom_data2
   \                     init_rom_data2:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char init_rom_add0
   \                     init_rom_add0:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char init_rom_add1
   \                     init_rom_add1:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char init_rom_add2
   \                     init_rom_add2:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char init_rom_address_data
   \                     init_rom_address_data:
   \   00000000                      DS8 1

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void rom_check_sum_error()
   \                     rom_check_sum_error:
   \   00000000   010C               MOVW    R1:R0, R25:R24
   \   00000002   E08A               LDI     R24, 10
   \   00000004   E090               LDI     R25, 0
   \                     ??rom_check_sum_error_0:
   \   00000006   3F8B               CPI     R24, 251
   \   00000008   E007               LDI     R16, 7
   \   0000000A   0790               CPC     R25, R16
   \   0000000C   F478               BRCC    ??rom_check_sum_error_1
   \   0000000E   9605               ADIW    R25:R24, 5
   \   00000010   2F08               MOV     R16, R24
   \   00000012   700F               ANDI    R16, 0x0F
   \   00000014   300F               CPI     R16, 15
   \   00000016   F409               BRNE    ??rom_check_sum_error_2
   \   00000018   9601               ADIW    R25:R24, 1
   \                     ??rom_check_sum_error_2:
   \   0000001A   018C               MOVW    R17:R16, R25:R24
   \   0000001C   ........           CALL    rom_I2C_Read
   \   00000020   9300....           STS     init_rom_address_data, R16
   \   00000024   9100....           LDS     R16, init_rom_address_data
   \   00000028   3F0F               CPI     R16, 255
   \   0000002A   F769               BRNE    ??rom_check_sum_error_0
   \                     ??rom_check_sum_error_1:
   \   0000002C   ....               LDI     R30, LOW(test_check)
   \   0000002E   ....               LDI     R31, (test_check) >> 8
   \   00000030   8380               ST      Z, R24
   \   00000032   8391               STD     Z+1, R25
   \   00000034   ....               LDI     R30, LOW(test_check)
   \   00000036   ....               LDI     R31, (test_check) >> 8
   \   00000038   8111               LDD     R17, Z+1
   \   0000003A   2F01               MOV     R16, R17
   \   0000003C   9300....           STS     init_rom_add0, R16
   \   00000040   ....               LDI     R30, LOW(test_check)
   \   00000042   ....               LDI     R31, (test_check) >> 8
   \   00000044   8100               LD      R16, Z
   \   00000046   9300....           STS     init_rom_add1, R16
   \   0000004A   9100....           LDS     R16, init_rom_add0
   \   0000004E   9110....           LDS     R17, init_rom_add1
   \   00000052   0F01               ADD     R16, R17
   \   00000054   9300....           STS     init_rom_add2, R16
   \   00000058   ........           CALL    I2C_START
   \   0000005C   EA00               LDI     R16, 160
   \   0000005E   ........           CALL    I2C_SHOUT
   \   00000062   E000               LDI     R16, 0
   \   00000064   ........           CALL    I2C_SHOUT
   \   00000068   9100....           LDS     R16, init_rom_add0
   \   0000006C   ........           CALL    I2C_SHOUT
   \   00000070   9100....           LDS     R16, init_rom_add1
   \   00000074   ........           CALL    I2C_SHOUT
   \   00000078   9100....           LDS     R16, init_rom_add2
   \   0000007C   ........           CALL    I2C_SHOUT
   \   00000080   ........           CALL    I2C_STOP
   \   00000084   E00A               LDI     R16, 10
   \   00000086   E010               LDI     R17, 0
   \   00000088   ........           CALL    DelayTime_ms
   \   0000008C   ....               LDI     R30, LOW(test_check)
   \   0000008E   ....               LDI     R31, (test_check) >> 8
   \   00000090   8100               LD      R16, Z
   \   00000092   8111               LDD     R17, Z+1
   \   00000094   3F0F               CPI     R16, 255
   \   00000096   E027               LDI     R18, 7
   \   00000098   0712               CPC     R17, R18
   \   0000009A   F538               BRCC    ??rom_check_sum_error_3
   \   0000009C   ........           CALL    I2C_START
   \   000000A0   E047               LDI     R20, 7
   \   000000A2   ....               LDI     R30, LOW(test_check)
   \   000000A4   ....               LDI     R31, (test_check) >> 8
   \   000000A6   8100               LD      R16, Z
   \   000000A8   8111               LDD     R17, Z+1
   \   000000AA   ........           CALL    ?US_SHR_L02
   \   000000AE   700E               ANDI    R16, 0x0E
   \   000000B0   5600               SUBI    R16, 96
   \   000000B2   ........           CALL    I2C_SHOUT
   \   000000B6   ....               LDI     R30, LOW(test_check)
   \   000000B8   ....               LDI     R31, (test_check) >> 8
   \   000000BA   8100               LD      R16, Z
   \   000000BC   ........           CALL    I2C_SHOUT
   \   000000C0   E000               LDI     R16, 0
   \   000000C2   ........           CALL    I2C_SHOUT
   \   000000C6   E000               LDI     R16, 0
   \   000000C8   ........           CALL    I2C_SHOUT
   \   000000CC   E000               LDI     R16, 0
   \   000000CE   ........           CALL    I2C_SHOUT
   \   000000D2   EF0F               LDI     R16, 255
   \   000000D4   ........           CALL    I2C_SHOUT
   \   000000D8   E001               LDI     R16, 1
   \   000000DA   ........           CALL    I2C_SHOUT
   \   000000DE   ........           CALL    I2C_STOP
   \   000000E2   E00A               LDI     R16, 10
   \   000000E4   E010               LDI     R17, 0
   \   000000E6   ........           CALL    DelayTime_ms
   \                     ??rom_check_sum_error_3:
   \   000000EA   01C0               MOVW    R25:R24, R1:R0
   \   000000EC   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __version_3 void _system_init_se(void)
   \                     _system_init_se:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   EB28               LDI     R18, 184
   \   00000006   E014               LDI     R17, 4
   \   00000008   E200               LDI     R16, 32
   \   0000000A   ........           CALL    I2C_Write
   \   0000000E   EC2F               LDI     R18, 207
   \   00000010   E01A               LDI     R17, 10
   \   00000012   E900               LDI     R16, 144
   \   00000014   ........           CALL    I2C_Write
   \   00000018   EC2F               LDI     R18, 207
   \   0000001A   E01A               LDI     R17, 10
   \   0000001C   E902               LDI     R16, 146
   \   0000001E   ........           CALL    I2C_Write
   \   00000022   E000               LDI     R16, 0
   \   00000024   E010               LDI     R17, 0
   \   00000026   ........           CALL    rom_I2C_Read
   \   0000002A   2F80               MOV     R24, R16
   \   0000002C   E090               LDI     R25, 0
   \   0000002E   3F8F               CPI     R24, 255
   \   00000030   E000               LDI     R16, 0
   \   00000032   0790               CPC     R25, R16
   \   00000034   F5A1               BRNE    ??_system_init_se_0
   \   00000036   ........           CALL    I2C_START
   \   0000003A   EA00               LDI     R16, 160
   \   0000003C   ........           CALL    I2C_SHOUT
   \   00000040   E000               LDI     R16, 0
   \   00000042   ........           CALL    I2C_SHOUT
   \   00000046   E000               LDI     R16, 0
   \   00000048   ........           CALL    I2C_SHOUT
   \   0000004C   E100               LDI     R16, 16
   \   0000004E   ........           CALL    I2C_SHOUT
   \   00000052   E100               LDI     R16, 16
   \   00000054   ........           CALL    I2C_SHOUT
   \   00000058   ........           CALL    I2C_STOP
   \   0000005C   E005               LDI     R16, 5
   \   0000005E   E010               LDI     R17, 0
   \   00000060   ........           CALL    DelayTime_ms
   \   00000064   ........           CALL    I2C_START
   \   00000068   EA00               LDI     R16, 160
   \   0000006A   ........           CALL    I2C_SHOUT
   \   0000006E   E100               LDI     R16, 16
   \   00000070   ........           CALL    I2C_SHOUT
   \   00000074   E000               LDI     R16, 0
   \   00000076   ........           CALL    I2C_SHOUT
   \   0000007A   E000               LDI     R16, 0
   \   0000007C   ........           CALL    I2C_SHOUT
   \   00000080   E000               LDI     R16, 0
   \   00000082   ........           CALL    I2C_SHOUT
   \   00000086   EF0F               LDI     R16, 255
   \   00000088   ........           CALL    I2C_SHOUT
   \   0000008C   E001               LDI     R16, 1
   \   0000008E   ........           CALL    I2C_SHOUT
   \   00000092   ........           CALL    I2C_STOP
   \   00000096   E005               LDI     R16, 5
   \   00000098   E010               LDI     R17, 0
   \   0000009A   ........           CALL    DelayTime_ms
   \                     ??_system_init_se_0:
   \   0000009E   E000               LDI     R16, 0
   \   000000A0   E010               LDI     R17, 0
   \   000000A2   ........           CALL    rom_I2C_Read
   \   000000A6   9300....           STS     init_rom_data0, R16
   \   000000AA   E001               LDI     R16, 1
   \   000000AC   E010               LDI     R17, 0
   \   000000AE   ........           CALL    rom_I2C_Read
   \   000000B2   9300....           STS     init_rom_data1, R16
   \   000000B6   E002               LDI     R16, 2
   \   000000B8   E010               LDI     R17, 0
   \   000000BA   ........           CALL    rom_I2C_Read
   \   000000BE   9300....           STS     init_rom_data2, R16
   \   000000C2   9100....           LDS     R16, init_rom_data0
   \   000000C6   9110....           LDS     R17, init_rom_data1
   \   000000CA   0F01               ADD     R16, R17
   \   000000CC   9300....           STS     rom_add_check_sum, R16
   \   000000D0   9100....           LDS     R16, rom_add_check_sum
   \   000000D4   9110....           LDS     R17, init_rom_data2
   \   000000D8   1701               CP      R16, R17
   \   000000DA   F011               BREQ    ??_system_init_se_1
   \   000000DC   ....               RCALL   rom_check_sum_error
   \   000000DE   C01B               RJMP    ??_system_init_se_2
   \                     ??_system_init_se_1:
   \   000000E0   9100....           LDS     R16, init_rom_data0
   \   000000E4   E010               LDI     R17, 0
   \   000000E6   ....               LDI     R30, LOW(test_check)
   \   000000E8   ....               LDI     R31, (test_check) >> 8
   \   000000EA   8300               ST      Z, R16
   \   000000EC   8311               STD     Z+1, R17
   \   000000EE   ....               LDI     R30, LOW(test_check)
   \   000000F0   ....               LDI     R31, (test_check) >> 8
   \   000000F2   8100               LD      R16, Z
   \   000000F4   2F10               MOV     R17, R16
   \   000000F6   E000               LDI     R16, 0
   \   000000F8   ....               LDI     R30, LOW(test_check)
   \   000000FA   ....               LDI     R31, (test_check) >> 8
   \   000000FC   8300               ST      Z, R16
   \   000000FE   8311               STD     Z+1, R17
   \   00000100   9100....           LDS     R16, init_rom_data1
   \   00000104   E010               LDI     R17, 0
   \   00000106   ....               LDI     R30, LOW(test_check)
   \   00000108   ....               LDI     R31, (test_check) >> 8
   \   0000010A   8120               LD      R18, Z
   \   0000010C   8131               LDD     R19, Z+1
   \   0000010E   0F20               ADD     R18, R16
   \   00000110   1F31               ADC     R19, R17
   \   00000112   8320               ST      Z, R18
   \   00000114   8331               STD     Z+1, R19
   \                     ??_system_init_se_2:
   \   00000116   ....               LDI     R30, LOW(test_check)
   \   00000118   ....               LDI     R31, (test_check) >> 8
   \   0000011A   8100               LD      R16, Z
   \   0000011C   8111               LDD     R17, Z+1
   \   0000011E   ....               LDI     R30, LOW(rom_add_pt)
   \   00000120   ....               LDI     R31, (rom_add_pt) >> 8
   \   00000122   8300               ST      Z, R16
   \   00000124   8311               STD     Z+1, R17
   \   00000126   ....               LDI     R30, LOW(rom_add_pt)
   \   00000128   ....               LDI     R31, (rom_add_pt) >> 8
   \   0000012A   8100               LD      R16, Z
   \   0000012C   8111               LDD     R17, Z+1
   \   0000012E   3F0F               CPI     R16, 255
   \   00000130   E027               LDI     R18, 7
   \   00000132   0712               CPC     R17, R18
   \   00000134   F008               BRCS    $+2+2
   \   00000136   C093               RJMP    ??_system_init_se_3
   \   00000138   ....               LDI     R30, LOW(rom_add_pt)
   \   0000013A   ....               LDI     R31, (rom_add_pt) >> 8
   \   0000013C   8100               LD      R16, Z
   \   0000013E   8111               LDD     R17, Z+1
   \   00000140   ........           CALL    rom_I2C_Read
   \   00000144   E010               LDI     R17, 0
   \   00000146   E020               LDI     R18, 0
   \   00000148   E030               LDI     R19, 0
   \   0000014A   ....               LDI     R30, LOW(rom_cnt)
   \   0000014C   ....               LDI     R31, (rom_cnt) >> 8
   \   0000014E   8300               ST      Z, R16
   \   00000150   8311               STD     Z+1, R17
   \   00000152   8322               STD     Z+2, R18
   \   00000154   8333               STD     Z+3, R19
   \   00000156   ....               LDI     R30, LOW(rom_cnt)
   \   00000158   ....               LDI     R31, (rom_cnt) >> 8
   \   0000015A   8100               LD      R16, Z
   \   0000015C   8111               LDD     R17, Z+1
   \   0000015E   8122               LDD     R18, Z+2
   \   00000160   2F32               MOV     R19, R18
   \   00000162   2F21               MOV     R18, R17
   \   00000164   2F10               MOV     R17, R16
   \   00000166   E000               LDI     R16, 0
   \   00000168   ....               LDI     R30, LOW(rom_cnt)
   \   0000016A   ....               LDI     R31, (rom_cnt) >> 8
   \   0000016C   8300               ST      Z, R16
   \   0000016E   8311               STD     Z+1, R17
   \   00000170   8322               STD     Z+2, R18
   \   00000172   8333               STD     Z+3, R19
   \   00000174   ....               LDI     R30, LOW(rom_add_pt)
   \   00000176   ....               LDI     R31, (rom_add_pt) >> 8
   \   00000178   8100               LD      R16, Z
   \   0000017A   8111               LDD     R17, Z+1
   \   0000017C   5F0F               SUBI    R16, 255
   \   0000017E   4F1F               SBCI    R17, 255
   \   00000180   ........           CALL    rom_I2C_Read
   \   00000184   E010               LDI     R17, 0
   \   00000186   E020               LDI     R18, 0
   \   00000188   E030               LDI     R19, 0
   \   0000018A   ....               LDI     R30, LOW(rom_cnt)
   \   0000018C   ....               LDI     R31, (rom_cnt) >> 8
   \   0000018E   8140               LD      R20, Z
   \   00000190   8151               LDD     R21, Z+1
   \   00000192   8162               LDD     R22, Z+2
   \   00000194   8173               LDD     R23, Z+3
   \   00000196   0F40               ADD     R20, R16
   \   00000198   1F51               ADC     R21, R17
   \   0000019A   1F62               ADC     R22, R18
   \   0000019C   1F73               ADC     R23, R19
   \   0000019E   8340               ST      Z, R20
   \   000001A0   8351               STD     Z+1, R21
   \   000001A2   8362               STD     Z+2, R22
   \   000001A4   8373               STD     Z+3, R23
   \   000001A6   ....               LDI     R30, LOW(rom_cnt)
   \   000001A8   ....               LDI     R31, (rom_cnt) >> 8
   \   000001AA   8100               LD      R16, Z
   \   000001AC   8111               LDD     R17, Z+1
   \   000001AE   8122               LDD     R18, Z+2
   \   000001B0   2F32               MOV     R19, R18
   \   000001B2   2F21               MOV     R18, R17
   \   000001B4   2F10               MOV     R17, R16
   \   000001B6   E000               LDI     R16, 0
   \   000001B8   ....               LDI     R30, LOW(rom_cnt)
   \   000001BA   ....               LDI     R31, (rom_cnt) >> 8
   \   000001BC   8300               ST      Z, R16
   \   000001BE   8311               STD     Z+1, R17
   \   000001C0   8322               STD     Z+2, R18
   \   000001C2   8333               STD     Z+3, R19
   \   000001C4   ....               LDI     R30, LOW(rom_add_pt)
   \   000001C6   ....               LDI     R31, (rom_add_pt) >> 8
   \   000001C8   8100               LD      R16, Z
   \   000001CA   8111               LDD     R17, Z+1
   \   000001CC   5F0E               SUBI    R16, 254
   \   000001CE   4F1F               SBCI    R17, 255
   \   000001D0   ........           CALL    rom_I2C_Read
   \   000001D4   E010               LDI     R17, 0
   \   000001D6   E020               LDI     R18, 0
   \   000001D8   E030               LDI     R19, 0
   \   000001DA   ....               LDI     R30, LOW(rom_cnt)
   \   000001DC   ....               LDI     R31, (rom_cnt) >> 8
   \   000001DE   8140               LD      R20, Z
   \   000001E0   8151               LDD     R21, Z+1
   \   000001E2   8162               LDD     R22, Z+2
   \   000001E4   8173               LDD     R23, Z+3
   \   000001E6   0F40               ADD     R20, R16
   \   000001E8   1F51               ADC     R21, R17
   \   000001EA   1F62               ADC     R22, R18
   \   000001EC   1F73               ADC     R23, R19
   \   000001EE   8340               ST      Z, R20
   \   000001F0   8351               STD     Z+1, R21
   \   000001F2   8362               STD     Z+2, R22
   \   000001F4   8373               STD     Z+3, R23
   \   000001F6   ....               LDI     R30, LOW(rom_add_pt)
   \   000001F8   ....               LDI     R31, (rom_add_pt) >> 8
   \   000001FA   8100               LD      R16, Z
   \   000001FC   8111               LDD     R17, Z+1
   \   000001FE   5F0D               SUBI    R16, 253
   \   00000200   4F1F               SBCI    R17, 255
   \   00000202   ........           CALL    rom_I2C_Read
   \   00000206   9300....           STS     vol_dB, R16
   \   0000020A   ....               LDI     R30, LOW(rom_add_pt)
   \   0000020C   ....               LDI     R31, (rom_add_pt) >> 8
   \   0000020E   8100               LD      R16, Z
   \   00000210   8111               LDD     R17, Z+1
   \   00000212   5F0C               SUBI    R16, 252
   \   00000214   4F1F               SBCI    R17, 255
   \   00000216   ........           CALL    rom_I2C_Read
   \   0000021A   2F80               MOV     R24, R16
   \   0000021C   E090               LDI     R25, 0
   \   0000021E   3880               CPI     R24, 128
   \   00000220   E000               LDI     R16, 0
   \   00000222   0790               CPC     R25, R16
   \   00000224   F478               BRCC    ??_system_init_se_4
   \   00000226   2F08               MOV     R16, R24
   \   00000228   9502               SWAP    R16
   \   0000022A   700F               ANDI    R16, 0x0F
   \   0000022C   9300....           STS     ch_led_data, R16
   \   00000230   2F08               MOV     R16, R24
   \   00000232   9506               LSR     R16
   \   00000234   7007               ANDI    R16, 0x07
   \   00000236   9300....           STS     filter_flag, R16
   \   0000023A   2F08               MOV     R16, R24
   \   0000023C   7001               ANDI    R16, 0x01
   \   0000023E   9300....           STS     phase_data, R16
   \   00000242   C019               RJMP    ??_system_init_se_5
   \                     ??_system_init_se_4:
   \   00000244   EF0F               LDI     R16, 255
   \   00000246   9300....           STS     vol_dB, R16
   \   0000024A   E000               LDI     R16, 0
   \   0000024C   9300....           STS     ch_led_data, R16
   \   00000250   E000               LDI     R16, 0
   \   00000252   9300....           STS     filter_flag, R16
   \   00000256   E001               LDI     R16, 1
   \   00000258   9300....           STS     phase_data, R16
   \   0000025C   C00C               RJMP    ??_system_init_se_5
   \                     ??_system_init_se_3:
   \   0000025E   EF0F               LDI     R16, 255
   \   00000260   9300....           STS     vol_dB, R16
   \   00000264   E000               LDI     R16, 0
   \   00000266   9300....           STS     ch_led_data, R16
   \   0000026A   E000               LDI     R16, 0
   \   0000026C   9300....           STS     filter_flag, R16
   \   00000270   E001               LDI     R16, 1
   \   00000272   9300....           STS     phase_data, R16
   \                     ??_system_init_se_5:
   \   00000276   E020               LDI     R18, 0
   \   00000278   E010               LDI     R17, 0
   \   0000027A   E200               LDI     R16, 32
   \   0000027C   ........           CALL    I2C_Write
   \   00000280   E824               LDI     R18, 132
   \   00000282   E011               LDI     R17, 1
   \   00000284   E200               LDI     R16, 32
   \   00000286   ........           CALL    I2C_Write
   \   0000028A   E029               LDI     R18, 9
   \   0000028C   E012               LDI     R17, 2
   \   0000028E   E200               LDI     R16, 32
   \   00000290   ........           CALL    I2C_Write
   \   00000294   E520               LDI     R18, 80
   \   00000296   E013               LDI     R17, 3
   \   00000298   E200               LDI     R16, 32
   \   0000029A   ........           CALL    I2C_Write
   \   0000029E   ....               RCALL   channel_change
   \   000002A0   E825               LDI     R18, 133
   \   000002A2   E015               LDI     R17, 5
   \   000002A4   E200               LDI     R16, 32
   \   000002A6   ........           CALL    I2C_Write
   \   000002AA   E925               LDI     R18, 149
   \   000002AC   E01B               LDI     R17, 11
   \   000002AE   E900               LDI     R16, 144
   \   000002B0   ........           CALL    I2C_Write
   \   000002B4   E220               LDI     R18, 32
   \   000002B6   E01C               LDI     R17, 12
   \   000002B8   E900               LDI     R16, 144
   \   000002BA   ........           CALL    I2C_Write
   \   000002BE   E020               LDI     R18, 0
   \   000002C0   E01F               LDI     R17, 15
   \   000002C2   E900               LDI     R16, 144
   \   000002C4   ........           CALL    I2C_Write
   \   000002C8   E12D               LDI     R18, 29
   \   000002CA   E111               LDI     R17, 17
   \   000002CC   E900               LDI     R16, 144
   \   000002CE   ........           CALL    I2C_Write
   \   000002D2   E021               LDI     R18, 1
   \   000002D4   E119               LDI     R17, 25
   \   000002D6   E900               LDI     R16, 144
   \   000002D8   ........           CALL    I2C_Write
   \   000002DC   E925               LDI     R18, 149
   \   000002DE   E01B               LDI     R17, 11
   \   000002E0   E902               LDI     R16, 146
   \   000002E2   ........           CALL    I2C_Write
   \   000002E6   E220               LDI     R18, 32
   \   000002E8   E01C               LDI     R17, 12
   \   000002EA   E902               LDI     R16, 146
   \   000002EC   ........           CALL    I2C_Write
   \   000002F0   E020               LDI     R18, 0
   \   000002F2   E01F               LDI     R17, 15
   \   000002F4   E902               LDI     R16, 146
   \   000002F6   ........           CALL    I2C_Write
   \   000002FA   E92D               LDI     R18, 157
   \   000002FC   E111               LDI     R17, 17
   \   000002FE   E902               LDI     R16, 146
   \   00000300   ........           CALL    I2C_Write
   \   00000304   E021               LDI     R18, 1
   \   00000306   E119               LDI     R17, 25
   \   00000308   E902               LDI     R16, 146
   \   0000030A   ........           CALL    I2C_Write
   \   0000030E   E728               LDI     R18, 120
   \   00000310   E018               LDI     R17, 8
   \   00000312   E900               LDI     R16, 144
   \   00000314   ........           CALL    I2C_Write
   \   00000318   E728               LDI     R18, 120
   \   0000031A   E018               LDI     R17, 8
   \   0000031C   E902               LDI     R16, 146
   \   0000031E   ........           CALL    I2C_Write
   \   00000322   ........           CALL    volume_set
   \   00000326   E00A               LDI     R16, 10
   \   00000328   E010               LDI     R17, 0
   \   0000032A   ........           CALL    DelayTime_ms
   \   0000032E   ........           CALL    phase_ess
   \   00000332   E00A               LDI     R16, 10
   \   00000334   E010               LDI     R17, 0
   \   00000336   ........           CALL    DelayTime_ms
   \   0000033A   ....               RCALL   ess_filter
   \   0000033C   9A97               SBI     0x12, 0x07
   \   0000033E   E001               LDI     R16, 1
   \   00000340   9300....           STS     dot_light_reg, R16
   \   00000344   91000065           LDS     R16, 101
   \   00000348   6001               ORI     R16, 0x01
   \   0000034A   93000065           STS     101, R16
   \   0000034E   E003               LDI     R16, 3
   \   00000350   ........           CALL    dot_matrix_bright
   \   00000354   9AC7               SBI     0x18, 0x07
   \   00000356   E080               LDI     R24, 0
   \   00000358   E090               LDI     R25, 0
   \   0000035A   C008               RJMP    ??_system_init_se_6
   \                     ??_system_init_se_7:
   \   0000035C   018C               MOVW    R17:R16, R25:R24
   \   0000035E   ........           CALL    rom_I2C_Read
   \   00000362   01FC               MOVW    R31:R30, R25:R24
   \   00000364   ....               SUBI    R30, LOW((-(test_eeprom) & 0xFFFF))
   \   00000366   ....               SBCI    R31, (-(test_eeprom) & 0xFFFF) >> 8
   \   00000368   8300               ST      Z, R16
   \   0000036A   9601               ADIW    R25:R24, 1
   \                     ??_system_init_se_6:
   \   0000036C   3280               CPI     R24, 32
   \   0000036E   E000               LDI     R16, 0
   \   00000370   0790               CPC     R25, R16
   \   00000372   F3A0               BRCS    ??_system_init_se_7
   \   00000374   9189               LD      R24, Y+
   \   00000376   9199               LD      R25, Y+
   \   00000378   9508               RET
   \   0000037A                      REQUIRE _A_PORTD
   \   0000037A                      REQUIRE _A_PORTG
   \   0000037A                      REQUIRE _A_PORTB
      8          
      9          ///////////////////////////////////////////////////////////////////////////////

   \                                 In  segment CODE, align 2, keep-with-next
     10          void sample_rate_cal(){
   \                     sample_rate_cal:
     11            U8 i,temp;
     12            
     13            //if ( (old_ess_lock_ck!=ess_lock_ck) || (old_ess_automute!=ess_automute) ) {
     14              
     15              //if (old_ess_lock_ck!=ess_lock_ck) old_ess_lock_ck=ess_lock_ck;
     16              //if (old_ess_automute!=ess_automute) old_ess_automute=ess_automute;
     17            
     18              if( ( (ch_led_data!=7) && ess_lock_ck) || (ess_lock_ck && !ess_automute) ) {
   \   00000000   9100....           LDS     R16, ch_led_data
   \   00000004   3007               CPI     R16, 7
   \   00000006   F021               BREQ    ??sample_rate_cal_0
   \   00000008   9100....           LDS     R16, ess_lock_ck
   \   0000000C   2300               TST     R16
   \   0000000E   F451               BRNE    ??sample_rate_cal_1
   \                     ??sample_rate_cal_0:
   \   00000010   9100....           LDS     R16, ess_lock_ck
   \   00000014   2300               TST     R16
   \   00000016   F409               BRNE    $+2+2
   \   00000018   C167               RJMP    ??sample_rate_cal_2
   \   0000001A   9100....           LDS     R16, ess_automute
   \   0000001E   2300               TST     R16
   \   00000020   F009               BREQ    $+2+2
   \   00000022   C162               RJMP    ??sample_rate_cal_2
     19                 sample_rate=I2C_Read(0x90, 31);
   \                     ??sample_rate_cal_1:
   \   00000024   E11F               LDI     R17, 31
   \   00000026   E900               LDI     R16, 144
   \   00000028   ........           CALL    I2C_Read
   \   0000002C   E010               LDI     R17, 0
   \   0000002E   ....               LDI     R30, LOW(sample_rate)
   \   00000030   ....               LDI     R31, (sample_rate) >> 8
   \   00000032   8300               ST      Z, R16
   \   00000034   8311               STD     Z+1, R17
     20                 sample_rate<<=8;
   \   00000036   ....               LDI     R30, LOW(sample_rate)
   \   00000038   ....               LDI     R31, (sample_rate) >> 8
   \   0000003A   8100               LD      R16, Z
   \   0000003C   2F10               MOV     R17, R16
   \   0000003E   E000               LDI     R16, 0
   \   00000040   ....               LDI     R30, LOW(sample_rate)
   \   00000042   ....               LDI     R31, (sample_rate) >> 8
   \   00000044   8300               ST      Z, R16
   \   00000046   8311               STD     Z+1, R17
     21                 sample_rate+=I2C_Read(0x90, 30);
   \   00000048   E11E               LDI     R17, 30
   \   0000004A   E900               LDI     R16, 144
   \   0000004C   ........           CALL    I2C_Read
   \   00000050   E010               LDI     R17, 0
   \   00000052   ....               LDI     R30, LOW(sample_rate)
   \   00000054   ....               LDI     R31, (sample_rate) >> 8
   \   00000056   8120               LD      R18, Z
   \   00000058   8131               LDD     R19, Z+1
   \   0000005A   0F20               ADD     R18, R16
   \   0000005C   1F31               ADC     R19, R17
   \   0000005E   8320               ST      Z, R18
   \   00000060   8331               STD     Z+1, R19
     22                 sample_rate2=I2C_Read(0x92, 31);
   \   00000062   E11F               LDI     R17, 31
   \   00000064   E902               LDI     R16, 146
   \   00000066   ........           CALL    I2C_Read
   \   0000006A   E010               LDI     R17, 0
   \   0000006C   ....               LDI     R30, LOW(sample_rate2)
   \   0000006E   ....               LDI     R31, (sample_rate2) >> 8
   \   00000070   8300               ST      Z, R16
   \   00000072   8311               STD     Z+1, R17
     23                 sample_rate2<<=8;
   \   00000074   ....               LDI     R30, LOW(sample_rate2)
   \   00000076   ....               LDI     R31, (sample_rate2) >> 8
   \   00000078   8100               LD      R16, Z
   \   0000007A   2F10               MOV     R17, R16
   \   0000007C   E000               LDI     R16, 0
   \   0000007E   ....               LDI     R30, LOW(sample_rate2)
   \   00000080   ....               LDI     R31, (sample_rate2) >> 8
   \   00000082   8300               ST      Z, R16
   \   00000084   8311               STD     Z+1, R17
     24                 sample_rate2+=I2C_Read(0x92, 30);
   \   00000086   E11E               LDI     R17, 30
   \   00000088   E902               LDI     R16, 146
   \   0000008A   ........           CALL    I2C_Read
   \   0000008E   E010               LDI     R17, 0
   \   00000090   ....               LDI     R30, LOW(sample_rate2)
   \   00000092   ....               LDI     R31, (sample_rate2) >> 8
   \   00000094   8120               LD      R18, Z
   \   00000096   8131               LDD     R19, Z+1
   \   00000098   0F20               ADD     R18, R16
   \   0000009A   1F31               ADC     R19, R17
   \   0000009C   8320               ST      Z, R18
   \   0000009E   8331               STD     Z+1, R19
     25              
     26                  //0=44.1kHz,    1=48kHz,    2=88.2kHz,    3=96kHz,    4=176.4kHz,   5=196kHz
     27            
     28                  //192kHz
     29                  if( (sample_rate>min192 && sample_rate<max192) || (sample_rate2>min192 && sample_rate2<max192) )	sr_led_data=5;
   \   000000A0   ....               LDI     R30, LOW(min192)
   \   000000A2   ....               LDI     R31, (min192) >> 8
   \   000000A4   8100               LD      R16, Z
   \   000000A6   8111               LDD     R17, Z+1
   \   000000A8   ....               LDI     R30, LOW(sample_rate)
   \   000000AA   ....               LDI     R31, (sample_rate) >> 8
   \   000000AC   8120               LD      R18, Z
   \   000000AE   8131               LDD     R19, Z+1
   \   000000B0   1702               CP      R16, R18
   \   000000B2   0713               CPC     R17, R19
   \   000000B4   F458               BRCC    ??sample_rate_cal_3
   \   000000B6   ....               LDI     R30, LOW(sample_rate)
   \   000000B8   ....               LDI     R31, (sample_rate) >> 8
   \   000000BA   8100               LD      R16, Z
   \   000000BC   8111               LDD     R17, Z+1
   \   000000BE   ....               LDI     R30, LOW(max192)
   \   000000C0   ....               LDI     R31, (max192) >> 8
   \   000000C2   8120               LD      R18, Z
   \   000000C4   8131               LDD     R19, Z+1
   \   000000C6   1702               CP      R16, R18
   \   000000C8   0713               CPC     R17, R19
   \   000000CA   F0B0               BRCS    ??sample_rate_cal_4
   \                     ??sample_rate_cal_3:
   \   000000CC   ....               LDI     R30, LOW(min192)
   \   000000CE   ....               LDI     R31, (min192) >> 8
   \   000000D0   8100               LD      R16, Z
   \   000000D2   8111               LDD     R17, Z+1
   \   000000D4   ....               LDI     R30, LOW(sample_rate2)
   \   000000D6   ....               LDI     R31, (sample_rate2) >> 8
   \   000000D8   8120               LD      R18, Z
   \   000000DA   8131               LDD     R19, Z+1
   \   000000DC   1702               CP      R16, R18
   \   000000DE   0713               CPC     R17, R19
   \   000000E0   F478               BRCC    ??sample_rate_cal_5
   \   000000E2   ....               LDI     R30, LOW(sample_rate2)
   \   000000E4   ....               LDI     R31, (sample_rate2) >> 8
   \   000000E6   8100               LD      R16, Z
   \   000000E8   8111               LDD     R17, Z+1
   \   000000EA   ....               LDI     R30, LOW(max192)
   \   000000EC   ....               LDI     R31, (max192) >> 8
   \   000000EE   8120               LD      R18, Z
   \   000000F0   8131               LDD     R19, Z+1
   \   000000F2   1702               CP      R16, R18
   \   000000F4   0713               CPC     R17, R19
   \   000000F6   F420               BRCC    ??sample_rate_cal_5
   \                     ??sample_rate_cal_4:
   \   000000F8   E005               LDI     R16, 5
   \   000000FA   9300....           STS     sr_led_data, R16
   \   000000FE   C0F7               RJMP    ??sample_rate_cal_6
     30              
     31                  //176.4kHz
     32                  else if( (sample_rate>min176 && sample_rate<max176) || (sample_rate2>min176 && sample_rate2<max176) )	sr_led_data=4;
   \                     ??sample_rate_cal_5:
   \   00000100   ....               LDI     R30, LOW(min176)
   \   00000102   ....               LDI     R31, (min176) >> 8
   \   00000104   8100               LD      R16, Z
   \   00000106   8111               LDD     R17, Z+1
   \   00000108   ....               LDI     R30, LOW(sample_rate)
   \   0000010A   ....               LDI     R31, (sample_rate) >> 8
   \   0000010C   8120               LD      R18, Z
   \   0000010E   8131               LDD     R19, Z+1
   \   00000110   1702               CP      R16, R18
   \   00000112   0713               CPC     R17, R19
   \   00000114   F458               BRCC    ??sample_rate_cal_7
   \   00000116   ....               LDI     R30, LOW(sample_rate)
   \   00000118   ....               LDI     R31, (sample_rate) >> 8
   \   0000011A   8100               LD      R16, Z
   \   0000011C   8111               LDD     R17, Z+1
   \   0000011E   ....               LDI     R30, LOW(max176)
   \   00000120   ....               LDI     R31, (max176) >> 8
   \   00000122   8120               LD      R18, Z
   \   00000124   8131               LDD     R19, Z+1
   \   00000126   1702               CP      R16, R18
   \   00000128   0713               CPC     R17, R19
   \   0000012A   F0B0               BRCS    ??sample_rate_cal_8
   \                     ??sample_rate_cal_7:
   \   0000012C   ....               LDI     R30, LOW(min176)
   \   0000012E   ....               LDI     R31, (min176) >> 8
   \   00000130   8100               LD      R16, Z
   \   00000132   8111               LDD     R17, Z+1
   \   00000134   ....               LDI     R30, LOW(sample_rate2)
   \   00000136   ....               LDI     R31, (sample_rate2) >> 8
   \   00000138   8120               LD      R18, Z
   \   0000013A   8131               LDD     R19, Z+1
   \   0000013C   1702               CP      R16, R18
   \   0000013E   0713               CPC     R17, R19
   \   00000140   F478               BRCC    ??sample_rate_cal_9
   \   00000142   ....               LDI     R30, LOW(sample_rate2)
   \   00000144   ....               LDI     R31, (sample_rate2) >> 8
   \   00000146   8100               LD      R16, Z
   \   00000148   8111               LDD     R17, Z+1
   \   0000014A   ....               LDI     R30, LOW(max176)
   \   0000014C   ....               LDI     R31, (max176) >> 8
   \   0000014E   8120               LD      R18, Z
   \   00000150   8131               LDD     R19, Z+1
   \   00000152   1702               CP      R16, R18
   \   00000154   0713               CPC     R17, R19
   \   00000156   F420               BRCC    ??sample_rate_cal_9
   \                     ??sample_rate_cal_8:
   \   00000158   E004               LDI     R16, 4
   \   0000015A   9300....           STS     sr_led_data, R16
   \   0000015E   C0C7               RJMP    ??sample_rate_cal_6
     33                  
     34                  //96kHz
     35                  else if( (sample_rate>min96 && sample_rate<max96) || (sample_rate2>min96 && sample_rate2<max96) )	sr_led_data=3;
   \                     ??sample_rate_cal_9:
   \   00000160   ....               LDI     R30, LOW(min96)
   \   00000162   ....               LDI     R31, (min96) >> 8
   \   00000164   8100               LD      R16, Z
   \   00000166   8111               LDD     R17, Z+1
   \   00000168   ....               LDI     R30, LOW(sample_rate)
   \   0000016A   ....               LDI     R31, (sample_rate) >> 8
   \   0000016C   8120               LD      R18, Z
   \   0000016E   8131               LDD     R19, Z+1
   \   00000170   1702               CP      R16, R18
   \   00000172   0713               CPC     R17, R19
   \   00000174   F458               BRCC    ??sample_rate_cal_10
   \   00000176   ....               LDI     R30, LOW(sample_rate)
   \   00000178   ....               LDI     R31, (sample_rate) >> 8
   \   0000017A   8100               LD      R16, Z
   \   0000017C   8111               LDD     R17, Z+1
   \   0000017E   ....               LDI     R30, LOW(max96)
   \   00000180   ....               LDI     R31, (max96) >> 8
   \   00000182   8120               LD      R18, Z
   \   00000184   8131               LDD     R19, Z+1
   \   00000186   1702               CP      R16, R18
   \   00000188   0713               CPC     R17, R19
   \   0000018A   F0B0               BRCS    ??sample_rate_cal_11
   \                     ??sample_rate_cal_10:
   \   0000018C   ....               LDI     R30, LOW(min96)
   \   0000018E   ....               LDI     R31, (min96) >> 8
   \   00000190   8100               LD      R16, Z
   \   00000192   8111               LDD     R17, Z+1
   \   00000194   ....               LDI     R30, LOW(sample_rate2)
   \   00000196   ....               LDI     R31, (sample_rate2) >> 8
   \   00000198   8120               LD      R18, Z
   \   0000019A   8131               LDD     R19, Z+1
   \   0000019C   1702               CP      R16, R18
   \   0000019E   0713               CPC     R17, R19
   \   000001A0   F478               BRCC    ??sample_rate_cal_12
   \   000001A2   ....               LDI     R30, LOW(sample_rate2)
   \   000001A4   ....               LDI     R31, (sample_rate2) >> 8
   \   000001A6   8100               LD      R16, Z
   \   000001A8   8111               LDD     R17, Z+1
   \   000001AA   ....               LDI     R30, LOW(max96)
   \   000001AC   ....               LDI     R31, (max96) >> 8
   \   000001AE   8120               LD      R18, Z
   \   000001B0   8131               LDD     R19, Z+1
   \   000001B2   1702               CP      R16, R18
   \   000001B4   0713               CPC     R17, R19
   \   000001B6   F420               BRCC    ??sample_rate_cal_12
   \                     ??sample_rate_cal_11:
   \   000001B8   E003               LDI     R16, 3
   \   000001BA   9300....           STS     sr_led_data, R16
   \   000001BE   C097               RJMP    ??sample_rate_cal_6
     36              
     37                  //88.2kHz
     38                  else if( (sample_rate>min88 && sample_rate<max88) || (sample_rate2>min88 && sample_rate2<max88) )	sr_led_data=2;
   \                     ??sample_rate_cal_12:
   \   000001C0   ....               LDI     R30, LOW(min88)
   \   000001C2   ....               LDI     R31, (min88) >> 8
   \   000001C4   8100               LD      R16, Z
   \   000001C6   8111               LDD     R17, Z+1
   \   000001C8   ....               LDI     R30, LOW(sample_rate)
   \   000001CA   ....               LDI     R31, (sample_rate) >> 8
   \   000001CC   8120               LD      R18, Z
   \   000001CE   8131               LDD     R19, Z+1
   \   000001D0   1702               CP      R16, R18
   \   000001D2   0713               CPC     R17, R19
   \   000001D4   F458               BRCC    ??sample_rate_cal_13
   \   000001D6   ....               LDI     R30, LOW(sample_rate)
   \   000001D8   ....               LDI     R31, (sample_rate) >> 8
   \   000001DA   8100               LD      R16, Z
   \   000001DC   8111               LDD     R17, Z+1
   \   000001DE   ....               LDI     R30, LOW(max88)
   \   000001E0   ....               LDI     R31, (max88) >> 8
   \   000001E2   8120               LD      R18, Z
   \   000001E4   8131               LDD     R19, Z+1
   \   000001E6   1702               CP      R16, R18
   \   000001E8   0713               CPC     R17, R19
   \   000001EA   F0B0               BRCS    ??sample_rate_cal_14
   \                     ??sample_rate_cal_13:
   \   000001EC   ....               LDI     R30, LOW(min88)
   \   000001EE   ....               LDI     R31, (min88) >> 8
   \   000001F0   8100               LD      R16, Z
   \   000001F2   8111               LDD     R17, Z+1
   \   000001F4   ....               LDI     R30, LOW(sample_rate2)
   \   000001F6   ....               LDI     R31, (sample_rate2) >> 8
   \   000001F8   8120               LD      R18, Z
   \   000001FA   8131               LDD     R19, Z+1
   \   000001FC   1702               CP      R16, R18
   \   000001FE   0713               CPC     R17, R19
   \   00000200   F478               BRCC    ??sample_rate_cal_15
   \   00000202   ....               LDI     R30, LOW(sample_rate2)
   \   00000204   ....               LDI     R31, (sample_rate2) >> 8
   \   00000206   8100               LD      R16, Z
   \   00000208   8111               LDD     R17, Z+1
   \   0000020A   ....               LDI     R30, LOW(max88)
   \   0000020C   ....               LDI     R31, (max88) >> 8
   \   0000020E   8120               LD      R18, Z
   \   00000210   8131               LDD     R19, Z+1
   \   00000212   1702               CP      R16, R18
   \   00000214   0713               CPC     R17, R19
   \   00000216   F420               BRCC    ??sample_rate_cal_15
   \                     ??sample_rate_cal_14:
   \   00000218   E002               LDI     R16, 2
   \   0000021A   9300....           STS     sr_led_data, R16
   \   0000021E   C067               RJMP    ??sample_rate_cal_6
     39              
     40                  //48kHz
     41                  else if( (sample_rate>min48 && sample_rate<max48) || (sample_rate2>min48 && sample_rate2<max48) )	sr_led_data=1;
   \                     ??sample_rate_cal_15:
   \   00000220   ....               LDI     R30, LOW(min48)
   \   00000222   ....               LDI     R31, (min48) >> 8
   \   00000224   8100               LD      R16, Z
   \   00000226   8111               LDD     R17, Z+1
   \   00000228   ....               LDI     R30, LOW(sample_rate)
   \   0000022A   ....               LDI     R31, (sample_rate) >> 8
   \   0000022C   8120               LD      R18, Z
   \   0000022E   8131               LDD     R19, Z+1
   \   00000230   1702               CP      R16, R18
   \   00000232   0713               CPC     R17, R19
   \   00000234   F458               BRCC    ??sample_rate_cal_16
   \   00000236   ....               LDI     R30, LOW(sample_rate)
   \   00000238   ....               LDI     R31, (sample_rate) >> 8
   \   0000023A   8100               LD      R16, Z
   \   0000023C   8111               LDD     R17, Z+1
   \   0000023E   ....               LDI     R30, LOW(max48)
   \   00000240   ....               LDI     R31, (max48) >> 8
   \   00000242   8120               LD      R18, Z
   \   00000244   8131               LDD     R19, Z+1
   \   00000246   1702               CP      R16, R18
   \   00000248   0713               CPC     R17, R19
   \   0000024A   F0B0               BRCS    ??sample_rate_cal_17
   \                     ??sample_rate_cal_16:
   \   0000024C   ....               LDI     R30, LOW(min48)
   \   0000024E   ....               LDI     R31, (min48) >> 8
   \   00000250   8100               LD      R16, Z
   \   00000252   8111               LDD     R17, Z+1
   \   00000254   ....               LDI     R30, LOW(sample_rate2)
   \   00000256   ....               LDI     R31, (sample_rate2) >> 8
   \   00000258   8120               LD      R18, Z
   \   0000025A   8131               LDD     R19, Z+1
   \   0000025C   1702               CP      R16, R18
   \   0000025E   0713               CPC     R17, R19
   \   00000260   F478               BRCC    ??sample_rate_cal_18
   \   00000262   ....               LDI     R30, LOW(sample_rate2)
   \   00000264   ....               LDI     R31, (sample_rate2) >> 8
   \   00000266   8100               LD      R16, Z
   \   00000268   8111               LDD     R17, Z+1
   \   0000026A   ....               LDI     R30, LOW(max48)
   \   0000026C   ....               LDI     R31, (max48) >> 8
   \   0000026E   8120               LD      R18, Z
   \   00000270   8131               LDD     R19, Z+1
   \   00000272   1702               CP      R16, R18
   \   00000274   0713               CPC     R17, R19
   \   00000276   F420               BRCC    ??sample_rate_cal_18
   \                     ??sample_rate_cal_17:
   \   00000278   E001               LDI     R16, 1
   \   0000027A   9300....           STS     sr_led_data, R16
   \   0000027E   C037               RJMP    ??sample_rate_cal_6
     42              
     43                  //44.1kHz
     44                  else if( (sample_rate>min44 && sample_rate<max44) || (sample_rate2>min44 && sample_rate2<max44) )	sr_led_data=0;
   \                     ??sample_rate_cal_18:
   \   00000280   ....               LDI     R30, LOW(min44)
   \   00000282   ....               LDI     R31, (min44) >> 8
   \   00000284   8100               LD      R16, Z
   \   00000286   8111               LDD     R17, Z+1
   \   00000288   ....               LDI     R30, LOW(sample_rate)
   \   0000028A   ....               LDI     R31, (sample_rate) >> 8
   \   0000028C   8120               LD      R18, Z
   \   0000028E   8131               LDD     R19, Z+1
   \   00000290   1702               CP      R16, R18
   \   00000292   0713               CPC     R17, R19
   \   00000294   F458               BRCC    ??sample_rate_cal_19
   \   00000296   ....               LDI     R30, LOW(sample_rate)
   \   00000298   ....               LDI     R31, (sample_rate) >> 8
   \   0000029A   8100               LD      R16, Z
   \   0000029C   8111               LDD     R17, Z+1
   \   0000029E   ....               LDI     R30, LOW(max44)
   \   000002A0   ....               LDI     R31, (max44) >> 8
   \   000002A2   8120               LD      R18, Z
   \   000002A4   8131               LDD     R19, Z+1
   \   000002A6   1702               CP      R16, R18
   \   000002A8   0713               CPC     R17, R19
   \   000002AA   F0B0               BRCS    ??sample_rate_cal_20
   \                     ??sample_rate_cal_19:
   \   000002AC   ....               LDI     R30, LOW(min44)
   \   000002AE   ....               LDI     R31, (min44) >> 8
   \   000002B0   8100               LD      R16, Z
   \   000002B2   8111               LDD     R17, Z+1
   \   000002B4   ....               LDI     R30, LOW(sample_rate2)
   \   000002B6   ....               LDI     R31, (sample_rate2) >> 8
   \   000002B8   8120               LD      R18, Z
   \   000002BA   8131               LDD     R19, Z+1
   \   000002BC   1702               CP      R16, R18
   \   000002BE   0713               CPC     R17, R19
   \   000002C0   F478               BRCC    ??sample_rate_cal_21
   \   000002C2   ....               LDI     R30, LOW(sample_rate2)
   \   000002C4   ....               LDI     R31, (sample_rate2) >> 8
   \   000002C6   8100               LD      R16, Z
   \   000002C8   8111               LDD     R17, Z+1
   \   000002CA   ....               LDI     R30, LOW(max44)
   \   000002CC   ....               LDI     R31, (max44) >> 8
   \   000002CE   8120               LD      R18, Z
   \   000002D0   8131               LDD     R19, Z+1
   \   000002D2   1702               CP      R16, R18
   \   000002D4   0713               CPC     R17, R19
   \   000002D6   F420               BRCC    ??sample_rate_cal_21
   \                     ??sample_rate_cal_20:
   \   000002D8   E000               LDI     R16, 0
   \   000002DA   9300....           STS     sr_led_data, R16
   \   000002DE   C007               RJMP    ??sample_rate_cal_6
     45              
     46                  else sr_led_data=6;	//sr led off
   \                     ??sample_rate_cal_21:
   \   000002E0   E006               LDI     R16, 6
   \   000002E2   9300....           STS     sr_led_data, R16
   \   000002E6   C003               RJMP    ??sample_rate_cal_6
     47              }
     48              else sr_led_data=6;	//sr led off
   \                     ??sample_rate_cal_2:
   \   000002E8   E006               LDI     R16, 6
   \   000002EA   9300....           STS     sr_led_data, R16
     49            //}
     50            
     51            
     52            if(sr_led_data==6){
   \                     ??sample_rate_cal_6:
   \   000002EE   9100....           LDS     R16, sr_led_data
   \   000002F2   3006               CPI     R16, 6
   \   000002F4   F421               BRNE    ??sample_rate_cal_22
     53              exMute=1;
   \   000002F6   E001               LDI     R16, 1
   \   000002F8   9300....           STS     exMute, R16
   \   000002FC   C003               RJMP    ??sample_rate_cal_23
     54            }
     55            else exMute=0;
   \                     ??sample_rate_cal_22:
   \   000002FE   E000               LDI     R16, 0
   \   00000300   9300....           STS     exMute, R16
     56           
     57            if(exMute!=old_exMute) {
   \                     ??sample_rate_cal_23:
   \   00000304   9100....           LDS     R16, exMute
   \   00000308   9110....           LDS     R17, old_exMute
   \   0000030C   1701               CP      R16, R17
   \   0000030E   F0D9               BREQ    ??sample_rate_cal_24
     58              old_exMute=exMute;
   \   00000310   9100....           LDS     R16, exMute
   \   00000314   9300....           STS     old_exMute, R16
     59             
     60              if(!old_exMute) temp=vol_dB;
   \   00000318   9100....           LDS     R16, old_exMute
   \   0000031C   2300               TST     R16
   \   0000031E   F419               BRNE    ??sample_rate_cal_25
   \   00000320   91F0....           LDS     R31, vol_dB
   \   00000324   C001               RJMP    ??sample_rate_cal_26
     61              else temp=224;    //-114dB
   \                     ??sample_rate_cal_25:
   \   00000326   EEF0               LDI     R31, 224
     62                
     63              for(i=0; i<8; i++){
   \                     ??sample_rate_cal_26:
   \   00000328   E0E0               LDI     R30, 0
   \   0000032A   C00B               RJMP    ??sample_rate_cal_27
     64                I2C_Write(0x90,i,temp);	//Lch volume of DAC0
   \                     ??sample_rate_cal_28:
   \   0000032C   2F2F               MOV     R18, R31
   \   0000032E   2F1E               MOV     R17, R30
   \   00000330   E900               LDI     R16, 144
   \   00000332   ........           CALL    I2C_Write
     65                I2C_Write(0x92,i,temp);	//Rch volume of DAC0
   \   00000336   2F2F               MOV     R18, R31
   \   00000338   2F1E               MOV     R17, R30
   \   0000033A   E902               LDI     R16, 146
   \   0000033C   ........           CALL    I2C_Write
     66              }
   \   00000340   95E3               INC     R30
   \                     ??sample_rate_cal_27:
   \   00000342   30E8               CPI     R30, 8
   \   00000344   F398               BRCS    ??sample_rate_cal_28
     67            }
     68            
     69          }
   \                     ??sample_rate_cal_24:
   \   00000346   9508               RET
     70          
     71          
     72          
     73          //ES9018 Automute check
     74          //Any logical change
     75          //active L : unmute, sample rate on
     76          //active H : mute,  sample rate off
     77          #pragma vector = INT7_vect

   \                                 In  segment CODE, align 2, keep-with-next
     78          __interrupt void INT7_Handler(void)
   \                     INT7_Handler:
     79          {
   \   00000000   93FA               ST      -Y, R31
   \   00000002   93EA               ST      -Y, R30
   \   00000004   921A               ST      -Y, R1
   \   00000006   920A               ST      -Y, R0
   \   00000008   937A               ST      -Y, R23
   \   0000000A   936A               ST      -Y, R22
   \   0000000C   935A               ST      -Y, R21
   \   0000000E   934A               ST      -Y, R20
   \   00000010   933A               ST      -Y, R19
   \   00000012   932A               ST      -Y, R18
   \   00000014   931A               ST      -Y, R17
   \   00000016   930A               ST      -Y, R16
   \   00000018   B60F               IN      R0, 0x3F
   \   0000001A   B61B               IN      R1, 0x3B
     80           if(tmr_osc_ck){
   \   0000001C   9100....           LDS     R16, tmr_osc_ck
   \   00000020   2300               TST     R16
   \   00000022   F051               BREQ    ??INT7_Handler_0
     81            if(AUTOMUTE) ess_automute=1; 			//mute,  sample rate off
   \   00000024   9B0F               SBIS    0x01, 0x07
   \   00000026   C004               RJMP    ??INT7_Handler_1
   \   00000028   E001               LDI     R16, 1
   \   0000002A   9300....           STS     ess_automute, R16
   \   0000002E   C003               RJMP    ??INT7_Handler_2
     82            else ess_automute=0;            	                            //unmute, sample rate on
   \                     ??INT7_Handler_1:
   \   00000030   E000               LDI     R16, 0
   \   00000032   9300....           STS     ess_automute, R16
     83            
     84            sample_rate_cal();
   \                     ??INT7_Handler_2:
   \   00000036   ....               RCALL   sample_rate_cal
     85           }
     86          }
   \                     ??INT7_Handler_0:
   \   00000038   BE1B               OUT     0x3B, R1
   \   0000003A   BE0F               OUT     0x3F, R0
   \   0000003C   9109               LD      R16, Y+
   \   0000003E   9119               LD      R17, Y+
   \   00000040   9129               LD      R18, Y+
   \   00000042   9139               LD      R19, Y+
   \   00000044   9149               LD      R20, Y+
   \   00000046   9159               LD      R21, Y+
   \   00000048   9169               LD      R22, Y+
   \   0000004A   9179               LD      R23, Y+
   \   0000004C   9009               LD      R0, Y+
   \   0000004E   9019               LD      R1, Y+
   \   00000050   91E9               LD      R30, Y+
   \   00000052   91F9               LD      R31, Y+
   \   00000054   9518               RETI
   \   00000056                      REQUIRE _A_PINE
     87          
     88          
     89          //ESS LOCK-Lch
     90          //Any logical change
     91          //high : lock,		low : unlock
     92          #pragma vector = INT6_vect

   \                                 In  segment CODE, align 2, keep-with-next
     93          __interrupt void INT6_Handler(void)
   \                     INT6_Handler:
     94          {
   \   00000000   93FA               ST      -Y, R31
   \   00000002   93EA               ST      -Y, R30
   \   00000004   921A               ST      -Y, R1
   \   00000006   920A               ST      -Y, R0
   \   00000008   937A               ST      -Y, R23
   \   0000000A   936A               ST      -Y, R22
   \   0000000C   935A               ST      -Y, R21
   \   0000000E   934A               ST      -Y, R20
   \   00000010   933A               ST      -Y, R19
   \   00000012   932A               ST      -Y, R18
   \   00000014   931A               ST      -Y, R17
   \   00000016   930A               ST      -Y, R16
   \   00000018   B60F               IN      R0, 0x3F
   \   0000001A   B61B               IN      R1, 0x3B
     95           if(tmr_osc_ck){
   \   0000001C   9100....           LDS     R16, tmr_osc_ck
   \   00000020   2300               TST     R16
   \   00000022   F051               BREQ    ??INT6_Handler_0
     96            if(ESS_LOCK) ess_lock_ck=1;
   \   00000024   9B0E               SBIS    0x01, 0x06
   \   00000026   C004               RJMP    ??INT6_Handler_1
   \   00000028   E001               LDI     R16, 1
   \   0000002A   9300....           STS     ess_lock_ck, R16
   \   0000002E   C003               RJMP    ??INT6_Handler_2
     97            else ess_lock_ck=0;
   \                     ??INT6_Handler_1:
   \   00000030   E000               LDI     R16, 0
   \   00000032   9300....           STS     ess_lock_ck, R16
     98            
     99            sample_rate_cal();
   \                     ??INT6_Handler_2:
   \   00000036   ....               RCALL   sample_rate_cal
    100           }
    101          }
   \                     ??INT6_Handler_0:
   \   00000038   BE1B               OUT     0x3B, R1
   \   0000003A   BE0F               OUT     0x3F, R0
   \   0000003C   9109               LD      R16, Y+
   \   0000003E   9119               LD      R17, Y+
   \   00000040   9129               LD      R18, Y+
   \   00000042   9139               LD      R19, Y+
   \   00000044   9149               LD      R20, Y+
   \   00000046   9159               LD      R21, Y+
   \   00000048   9169               LD      R22, Y+
   \   0000004A   9179               LD      R23, Y+
   \   0000004C   9009               LD      R0, Y+
   \   0000004E   9019               LD      R1, Y+
   \   00000050   91E9               LD      R30, Y+
   \   00000052   91F9               LD      R31, Y+
   \   00000054   9518               RETI
   \   00000056                      REQUIRE _A_PINE
    102          /*
    103          U8 non_audio_check=0;
    104          //U8 old_non_audio=0;
    105          U8 non_audio_tmr=0;
    106          //Non_audio check
    107          //Any logical change
    108          //high : non_audio -> sdout: muted,		low : audio -> sdout : not muted
    109          #pragma vector = INT4_vect
    110          __interrupt void INT4_Handler(void)
    111          {
    112            U8 temp;
    113            non_audio_check=1;
    114            non_audio_tmr=0;
    115            
    116            temp=I2C_Read(0x20, 0x0b);
    117            if((temp&0x20)==0x20) I2C_Write(0x20, 0x01, 0xc4);    //muted
    118            else I2C_Write(0x20, 0x01, 0x84);    //not muted
    119            //if(PINE_Bit4) old_non_audio=1;
    120            //else I2C_Write(0x20, 0x01, 0x84);    //not muted
    121          }
    122          */
    123          
    124          //Button Key
    125          // falling edge
    126          #pragma vector = INT3_vect

   \                                 In  segment CODE, align 2, keep-with-next
    127          __interrupt void INT3_Handler(void)
   \                     INT3_Handler:
    128          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   93FA               ST      -Y, R31
   \   00000006   93EA               ST      -Y, R30
   \   00000008   923A               ST      -Y, R3
   \   0000000A   922A               ST      -Y, R2
   \   0000000C   921A               ST      -Y, R1
   \   0000000E   920A               ST      -Y, R0
   \   00000010   937A               ST      -Y, R23
   \   00000012   936A               ST      -Y, R22
   \   00000014   935A               ST      -Y, R21
   \   00000016   934A               ST      -Y, R20
   \   00000018   933A               ST      -Y, R19
   \   0000001A   932A               ST      -Y, R18
   \   0000001C   931A               ST      -Y, R17
   \   0000001E   930A               ST      -Y, R16
   \   00000020   B78F               IN      R24, 0x3F
   \   00000022   B79B               IN      R25, 0x3B
    129            U8 data=0;
   \   00000024   E000               LDI     R16, 0
    130            
    131            key_int_flag=0;
   \   00000026   E000               LDI     R16, 0
   \   00000028   9300....           STS     key_int_flag, R16
    132            data=KEY_DATA2;
   \   0000002C   E000               LDI     R16, 0
   \   0000002E   9986               SBIC    0x10, 0x06
   \   00000030   9503               INC     R16
    133            data<<=1;
   \                     ??INT3_Handler_0:
   \   00000032   0F00               LSL     R16
    134            data+=KEY_DATA1;
   \   00000034   E010               LDI     R17, 0
   \   00000036   9985               SBIC    0x10, 0x05
   \   00000038   9513               INC     R17
   \                     ??INT3_Handler_1:
   \   0000003A   0F01               ADD     R16, R17
    135            data<<=1;
   \   0000003C   0F00               LSL     R16
    136            data+=KEY_DATA0;
   \   0000003E   E010               LDI     R17, 0
   \   00000040   9984               SBIC    0x10, 0x04
   \   00000042   9513               INC     R17
   \                     ??INT3_Handler_2:
   \   00000044   0F01               ADD     R16, R17
    137            
    138            // data =1 : ch-dn,   2: vol-up,  3 : mute,   4 : ch-up,  5 : vol-dn,   6 : inverse,  7 : filter
    139            if(tmr_osc_ck){
   \   00000046   9110....           LDS     R17, tmr_osc_ck
   \   0000004A   2311               TST     R17
   \   0000004C   F1D9               BREQ    ??INT3_Handler_3
    140              //channel down
    141              if(data==1){
   \   0000004E   3001               CPI     R16, 1
   \   00000050   F419               BRNE    ??INT3_Handler_4
    142                channel_down();
   \   00000052   ........           CALL    channel_down
   \   00000056   C033               RJMP    ??INT3_Handler_5
    143              }
    144            
    145              //volume up
    146              else if(data==2) {
   \                     ??INT3_Handler_4:
   \   00000058   3002               CPI     R16, 2
   \   0000005A   F419               BRNE    ??INT3_Handler_6
    147                audio_level_up();                            //Master Volume Up
   \   0000005C   ........           CALL    audio_level_up
   \   00000060   C02E               RJMP    ??INT3_Handler_5
    148              }
    149            
    150              //mute
    151              else if(data==3){
   \                     ??INT3_Handler_6:
   \   00000062   3003               CPI     R16, 3
   \   00000064   F419               BRNE    ??INT3_Handler_7
    152                ess_mute();	//mute
   \   00000066   ........           CALL    ess_mute
   \   0000006A   C029               RJMP    ??INT3_Handler_5
    153              }
    154            
    155              //channel up
    156              else if(data==4){
   \                     ??INT3_Handler_7:
   \   0000006C   3004               CPI     R16, 4
   \   0000006E   F419               BRNE    ??INT3_Handler_8
    157                channel_up();
   \   00000070   ........           CALL    channel_up
   \   00000074   C024               RJMP    ??INT3_Handler_5
    158              }
    159            
    160              //volume down
    161              else if(data==5){
   \                     ??INT3_Handler_8:
   \   00000076   3005               CPI     R16, 5
   \   00000078   F419               BRNE    ??INT3_Handler_9
    162                audio_level_down();                        //Master Volume Down
   \   0000007A   ........           CALL    audio_level_down
   \   0000007E   C01F               RJMP    ??INT3_Handler_5
    163              }
    164            
    165              //inverse
    166              else if(data==6){
   \                     ??INT3_Handler_9:
   \   00000080   3006               CPI     R16, 6
   \   00000082   F471               BRNE    ??INT3_Handler_10
    167                if(!key_condition) key_func=1;
   \   00000084   9100....           LDS     R16, key_condition
   \   00000088   2300               TST     R16
   \   0000008A   F421               BRNE    ??INT3_Handler_11
   \   0000008C   E001               LDI     R16, 1
   \   0000008E   9300....           STS     key_func, R16
   \   00000092   C003               RJMP    ??INT3_Handler_12
    168                else key_func=3;
   \                     ??INT3_Handler_11:
   \   00000094   E003               LDI     R16, 3
   \   00000096   9300....           STS     key_func, R16
    169                femto_function();
   \                     ??INT3_Handler_12:
   \   0000009A   ........           CALL    femto_function
   \   0000009E   C00F               RJMP    ??INT3_Handler_5
    170                //phase_write();	//phase
    171                //phase_ess();
    172              }
    173            
    174              //filter
    175              else if(data==7){
   \                     ??INT3_Handler_10:
   \   000000A0   3007               CPI     R16, 7
   \   000000A2   F469               BRNE    ??INT3_Handler_5
    176                if(!key_condition) key_func=2;
   \   000000A4   9100....           LDS     R16, key_condition
   \   000000A8   2300               TST     R16
   \   000000AA   F421               BRNE    ??INT3_Handler_13
   \   000000AC   E002               LDI     R16, 2
   \   000000AE   9300....           STS     key_func, R16
   \   000000B2   C003               RJMP    ??INT3_Handler_14
    177                else key_func=4;
   \                     ??INT3_Handler_13:
   \   000000B4   E004               LDI     R16, 4
   \   000000B6   9300....           STS     key_func, R16
    178                femto_function();
   \                     ??INT3_Handler_14:
   \   000000BA   ........           CALL    femto_function
    179                //filter_led<<=1;
    180                //if(filter_led>0x04)  filter_led=1;	//filter1
    181                //ess_filter(filter_led);
    182              }
    183              key_int_flag=1;
   \                     ??INT3_Handler_5:
   \   000000BE   E001               LDI     R16, 1
   \   000000C0   9300....           STS     key_int_flag, R16
    184            }
    185          }
   \                     ??INT3_Handler_3:
   \   000000C4   BF9B               OUT     0x3B, R25
   \   000000C6   BF8F               OUT     0x3F, R24
   \   000000C8   9109               LD      R16, Y+
   \   000000CA   9119               LD      R17, Y+
   \   000000CC   9129               LD      R18, Y+
   \   000000CE   9139               LD      R19, Y+
   \   000000D0   9149               LD      R20, Y+
   \   000000D2   9159               LD      R21, Y+
   \   000000D4   9169               LD      R22, Y+
   \   000000D6   9179               LD      R23, Y+
   \   000000D8   9009               LD      R0, Y+
   \   000000DA   9019               LD      R1, Y+
   \   000000DC   9029               LD      R2, Y+
   \   000000DE   9039               LD      R3, Y+
   \   000000E0   91E9               LD      R30, Y+
   \   000000E2   91F9               LD      R31, Y+
   \   000000E4   9189               LD      R24, Y+
   \   000000E6   9199               LD      R25, Y+
   \   000000E8   9518               RETI
   \   000000EA                      REQUIRE _A_PIND
    186          /*
    187          //if(PINB_Bit6==0) PORTB_Bit7=0;       //Analog Power Disable
    188           #pragma vector = INT2_vect
    189          __interrupt void INT2_Handler(void)
    190          {
    191            PORTB_Bit7=0;       //Analog Power Disable
    192          }
    193          */
    194          ///////////////////////////////////////////////////////////////////////////////
    195          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    196          U16 led_tmr=0;
   \                     led_tmr:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
    197          U8 init_sr_led=1;
   \                     init_sr_led:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for init_sr_led>`
    198          
    199          #pragma vector = TIMER0_OVF_vect

   \                                 In  segment CODE, align 2, keep-with-next
    200          __interrupt void TIMER0_OVF_Handler(void)
   \                     TIMER0_OVF_Handler:
    201          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   93FA               ST      -Y, R31
   \   00000006   93EA               ST      -Y, R30
   \   00000008   923A               ST      -Y, R3
   \   0000000A   922A               ST      -Y, R2
   \   0000000C   921A               ST      -Y, R1
   \   0000000E   920A               ST      -Y, R0
   \   00000010   937A               ST      -Y, R23
   \   00000012   936A               ST      -Y, R22
   \   00000014   935A               ST      -Y, R21
   \   00000016   934A               ST      -Y, R20
   \   00000018   933A               ST      -Y, R19
   \   0000001A   932A               ST      -Y, R18
   \   0000001C   931A               ST      -Y, R17
   \   0000001E   930A               ST      -Y, R16
   \   00000020   B78F               IN      R24, 0x3F
   \   00000022   B79B               IN      R25, 0x3B
    202            U8 i;
    203            
    204            TCNT0=255-250; //500usec 
   \   00000024   E005               LDI     R16, 5
   \   00000026   BF02               OUT     0x32, R16
    205            // 16MHz / 32prescaling = 500kHz
    206            // T= 1 / 500kHz = 2usec
    207            // 2usec X 250 = 500usec
    208            
    209            Time_500us++;  
   \   00000028   9100....           LDS     R16, Time_500us
   \   0000002C   9503               INC     R16
   \   0000002E   9300....           STS     Time_500us, R16
    210           // if(mtime_flag) mtime_length++;
    211            
    212            if(tmr_osc_ck){
   \   00000032   9100....           LDS     R16, tmr_osc_ck
   \   00000036   2300               TST     R16
   \   00000038   F409               BRNE    $+2+2
   \   0000003A   C0A1               RJMP    ??TIMER0_OVF_Handler_0
    213              if(key_func){   //filter or inverse f();  
   \   0000003C   9100....           LDS     R16, key_func
   \   00000040   2300               TST     R16
   \   00000042   F0B9               BREQ    ??TIMER0_OVF_Handler_1
    214                if(key_func_tmr>6000) { key_func=0; key_condition=0; }
   \   00000044   9100....           LDS     R16, key_func_tmr
   \   00000048   9110....           LDS     R17, (key_func_tmr + 1)
   \   0000004C   3701               CPI     R16, 113
   \   0000004E   E127               LDI     R18, 23
   \   00000050   0712               CPC     R17, R18
   \   00000052   F030               BRCS    ??TIMER0_OVF_Handler_2
   \   00000054   E000               LDI     R16, 0
   \   00000056   9300....           STS     key_func, R16
   \   0000005A   E000               LDI     R16, 0
   \   0000005C   9300....           STS     key_condition, R16
    215                
    216                key_func_tmr++;
   \                     ??TIMER0_OVF_Handler_2:
   \   00000060   ....               LDI     R30, LOW(key_func_tmr)
   \   00000062   ....               LDI     R31, (key_func_tmr) >> 8
   \   00000064   8100               LD      R16, Z
   \   00000066   8111               LDD     R17, Z+1
   \   00000068   5F0F               SUBI    R16, 255
   \   0000006A   4F1F               SBCI    R17, 255
   \   0000006C   8300               ST      Z, R16
   \   0000006E   8311               STD     Z+1, R17
   \   00000070   C086               RJMP    ??TIMER0_OVF_Handler_0
    217              }
    218              
    219              else {         // channel and sample rate, volume
    220                if(led_tmr==200){   //0.1sec      
   \                     ??TIMER0_OVF_Handler_1:
   \   00000072   9100....           LDS     R16, led_tmr
   \   00000076   9110....           LDS     R17, (led_tmr + 1)
   \   0000007A   3C08               CPI     R16, 200
   \   0000007C   E020               LDI     R18, 0
   \   0000007E   0712               CPC     R17, R18
   \   00000080   F009               BREQ    $+2+2
   \   00000082   C040               RJMP    ??TIMER0_OVF_Handler_3
    221                  for(i=0; i<16; i++){
   \   00000084   E020               LDI     R18, 0
   \   00000086   C00B               RJMP    ??TIMER0_OVF_Handler_4
    222                    if(i<6) dot_string[i]=ch_name[ch_led_data][i];
    223                    else if(i<12) dot_string[i]=sr_name[sr_led_data][i-6];
    224                    else  dot_string[i]=ess_volume[i-12];
   \                     ??TIMER0_OVF_Handler_5:
   \   00000088   E030               LDI     R19, 0
   \   0000008A   01F9               MOVW    R31:R30, R19:R18
   \   0000008C   ....               SUBI    R30, LOW((-(ess_volume - 12) & 0xFFFF))
   \   0000008E   ....               SBCI    R31, HIGH((-(ess_volume - 12) & 0xFFFF))
   \   00000090   8100               LD      R16, Z
   \   00000092   E030               LDI     R19, 0
   \   00000094   01F9               MOVW    R31:R30, R19:R18
   \   00000096   ....               SUBI    R30, LOW((-(dot_string) & 0xFFFF))
   \   00000098   ....               SBCI    R31, (-(dot_string) & 0xFFFF) >> 8
   \   0000009A   8300               ST      Z, R16
   \                     ??TIMER0_OVF_Handler_6:
   \   0000009C   9523               INC     R18
   \                     ??TIMER0_OVF_Handler_4:
   \   0000009E   3120               CPI     R18, 16
   \   000000A0   F570               BRCC    ??TIMER0_OVF_Handler_7
   \   000000A2   3026               CPI     R18, 6
   \   000000A4   F4A8               BRCC    ??TIMER0_OVF_Handler_8
   \   000000A6   9100....           LDS     R16, ch_led_data
   \   000000AA   E010               LDI     R17, 0
   \   000000AC   E046               LDI     R20, 6
   \   000000AE   E050               LDI     R21, 0
   \   000000B0   ........           CALL    ?S_EC_MUL_L02
   \   000000B4   ....               LDI     R30, LOW(ch_name)
   \   000000B6   ....               LDI     R31, (ch_name) >> 8
   \   000000B8   0FE0               ADD     R30, R16
   \   000000BA   1FF1               ADC     R31, R17
   \   000000BC   E030               LDI     R19, 0
   \   000000BE   0FE2               ADD     R30, R18
   \   000000C0   1FF3               ADC     R31, R19
   \   000000C2   8100               LD      R16, Z
   \   000000C4   E030               LDI     R19, 0
   \   000000C6   01F9               MOVW    R31:R30, R19:R18
   \   000000C8   ....               SUBI    R30, LOW((-(dot_string) & 0xFFFF))
   \   000000CA   ....               SBCI    R31, (-(dot_string) & 0xFFFF) >> 8
   \   000000CC   8300               ST      Z, R16
   \   000000CE   CFE6               RJMP    ??TIMER0_OVF_Handler_6
   \                     ??TIMER0_OVF_Handler_8:
   \   000000D0   302C               CPI     R18, 12
   \   000000D2   F6D0               BRCC    ??TIMER0_OVF_Handler_5
   \   000000D4   ....               LDI     R30, LOW((sr_name - 6))
   \   000000D6   ....               LDI     R31, HIGH((sr_name - 6))
   \   000000D8   E030               LDI     R19, 0
   \   000000DA   0FE2               ADD     R30, R18
   \   000000DC   1FF3               ADC     R31, R19
   \   000000DE   9100....           LDS     R16, sr_led_data
   \   000000E2   E010               LDI     R17, 0
   \   000000E4   E046               LDI     R20, 6
   \   000000E6   E050               LDI     R21, 0
   \   000000E8   ........           CALL    ?S_EC_MUL_L02
   \   000000EC   0FE0               ADD     R30, R16
   \   000000EE   1FF1               ADC     R31, R17
   \   000000F0   8100               LD      R16, Z
   \   000000F2   E030               LDI     R19, 0
   \   000000F4   01F9               MOVW    R31:R30, R19:R18
   \   000000F6   ....               SUBI    R30, LOW((-(dot_string) & 0xFFFF))
   \   000000F8   ....               SBCI    R31, (-(dot_string) & 0xFFFF) >> 8
   \   000000FA   8300               ST      Z, R16
   \   000000FC   CFCF               RJMP    ??TIMER0_OVF_Handler_6
    225                  }
    226                  dot_string_digit();
   \                     ??TIMER0_OVF_Handler_7:
   \   000000FE   ........           CALL    dot_string_digit
   \   00000102   C035               RJMP    ??TIMER0_OVF_Handler_9
    227                  //for(i=0; i<5; i++)        dot_matrix_digit ( ch_name[ch_led_data][i],i ); 
    228                  //dot_vol_hextodeci(vol_dB);
    229                }
    230                
    231                else if(led_tmr==800){  //sample rate,  0.4sec
   \                     ??TIMER0_OVF_Handler_3:
   \   00000104   9100....           LDS     R16, led_tmr
   \   00000108   9110....           LDS     R17, (led_tmr + 1)
   \   0000010C   3200               CPI     R16, 32
   \   0000010E   E023               LDI     R18, 3
   \   00000110   0712               CPC     R17, R18
   \   00000112   F569               BRNE    ??TIMER0_OVF_Handler_9
    232                  old_ess_automute=ess_automute;
   \   00000114   9100....           LDS     R16, ess_automute
   \   00000118   9300....           STS     old_ess_automute, R16
    233                  old_ess_lock_ck=ess_lock_ck;
   \   0000011C   9100....           LDS     R16, ess_lock_ck
   \   00000120   9300....           STS     old_ess_lock_ck, R16
    234                  
    235                  if(AUTOMUTE) ess_automute=1; 			//mute,  sample rate off
   \   00000124   9B0F               SBIS    0x01, 0x07
   \   00000126   C004               RJMP    ??TIMER0_OVF_Handler_10
   \   00000128   E001               LDI     R16, 1
   \   0000012A   9300....           STS     ess_automute, R16
   \   0000012E   C003               RJMP    ??TIMER0_OVF_Handler_11
    236                  else ess_automute=0;            	                            //unmute, sample rate on
   \                     ??TIMER0_OVF_Handler_10:
   \   00000130   E000               LDI     R16, 0
   \   00000132   9300....           STS     ess_automute, R16
    237                
    238                  if(ESS_LOCK) ess_lock_ck=1;
   \                     ??TIMER0_OVF_Handler_11:
   \   00000136   9B0E               SBIS    0x01, 0x06
   \   00000138   C004               RJMP    ??TIMER0_OVF_Handler_12
   \   0000013A   E001               LDI     R16, 1
   \   0000013C   9300....           STS     ess_lock_ck, R16
   \   00000140   C003               RJMP    ??TIMER0_OVF_Handler_13
    239                  else ess_lock_ck=0;
   \                     ??TIMER0_OVF_Handler_12:
   \   00000142   E000               LDI     R16, 0
   \   00000144   9300....           STS     ess_lock_ck, R16
    240                
    241                  if( (old_ess_automute!=ess_automute) || (old_ess_lock_ck!= ess_lock_ck))  sample_rate_cal();
   \                     ??TIMER0_OVF_Handler_13:
   \   00000148   9100....           LDS     R16, old_ess_automute
   \   0000014C   9110....           LDS     R17, ess_automute
   \   00000150   1701               CP      R16, R17
   \   00000152   F431               BRNE    ??TIMER0_OVF_Handler_14
   \   00000154   9100....           LDS     R16, old_ess_lock_ck
   \   00000158   9110....           LDS     R17, ess_lock_ck
   \   0000015C   1701               CP      R16, R17
   \   0000015E   F009               BREQ    ??TIMER0_OVF_Handler_15
   \                     ??TIMER0_OVF_Handler_14:
   \   00000160   ....               RCALL   sample_rate_cal
    242                  
    243                  //for(i=0; i<2; i++)       dot_matrix_digit ( sr_name[sr_led_data][i],i+6 );
    244                  //for(i=2; i<5; i++)       dot_matrix_digit2 ( sr_name[sr_led_data][i],i-2 );
    245                
    246                  led_tmr=0;
   \                     ??TIMER0_OVF_Handler_15:
   \   00000162   E000               LDI     R16, 0
   \   00000164   9300....           STS     led_tmr, R16
   \   00000168   E000               LDI     R16, 0
   \   0000016A   9300....           STS     (led_tmr + 1), R16
    247                }
    248                led_tmr++;  
   \                     ??TIMER0_OVF_Handler_9:
   \   0000016E   ....               LDI     R30, LOW(led_tmr)
   \   00000170   ....               LDI     R31, (led_tmr) >> 8
   \   00000172   8100               LD      R16, Z
   \   00000174   8111               LDD     R17, Z+1
   \   00000176   5F0F               SUBI    R16, 255
   \   00000178   4F1F               SBCI    R17, 255
   \   0000017A   8300               ST      Z, R16
   \   0000017C   8311               STD     Z+1, R17
    249              }// end else 
    250             
    251              
    252            }
    253          }
   \                     ??TIMER0_OVF_Handler_0:
   \   0000017E   BF9B               OUT     0x3B, R25
   \   00000180   BF8F               OUT     0x3F, R24
   \   00000182   9109               LD      R16, Y+
   \   00000184   9119               LD      R17, Y+
   \   00000186   9129               LD      R18, Y+
   \   00000188   9139               LD      R19, Y+
   \   0000018A   9149               LD      R20, Y+
   \   0000018C   9159               LD      R21, Y+
   \   0000018E   9169               LD      R22, Y+
   \   00000190   9179               LD      R23, Y+
   \   00000192   9009               LD      R0, Y+
   \   00000194   9019               LD      R1, Y+
   \   00000196   9029               LD      R2, Y+
   \   00000198   9039               LD      R3, Y+
   \   0000019A   91E9               LD      R30, Y+
   \   0000019C   91F9               LD      R31, Y+
   \   0000019E   9189               LD      R24, Y+
   \   000001A0   9199               LD      R25, Y+
   \   000001A2   9518               RETI
   \   000001A4                      REQUIRE _A_TCNT0
   \   000001A4                      REQUIRE _A_PINE

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
    254          U8 tmr_flag_ck=1;
   \                     tmr_flag_ck:
   \   00000000                      DS8 1
   \   00000001                      REQUIRE `?<Initializer for tmr_flag_ck>`
    255          //Board Timer
    256          #pragma vector = TIMER1_OVF_vect

   \                                 In  segment CODE, align 2, keep-with-next
    257          __interrupt void TIMER1_OVF_Handler(void)
   \                     TIMER1_OVF_Handler:
    258          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   93FA               ST      -Y, R31
   \   00000006   93EA               ST      -Y, R30
   \   00000008   923A               ST      -Y, R3
   \   0000000A   922A               ST      -Y, R2
   \   0000000C   921A               ST      -Y, R1
   \   0000000E   920A               ST      -Y, R0
   \   00000010   937A               ST      -Y, R23
   \   00000012   936A               ST      -Y, R22
   \   00000014   935A               ST      -Y, R21
   \   00000016   934A               ST      -Y, R20
   \   00000018   933A               ST      -Y, R19
   \   0000001A   932A               ST      -Y, R18
   \   0000001C   931A               ST      -Y, R17
   \   0000001E   930A               ST      -Y, R16
   \   00000020   B78F               IN      R24, 0x3F
   \   00000022   B79B               IN      R25, 0x3B
    259          U8 data=0;
   \   00000024   E000               LDI     R16, 0
    260          //U16 temp;
    261            //TCNT1=0xffff-1563; //0.1sec 
    262            TCNT1=0xffff-781; //0.05sec 
   \   00000026   EF02               LDI     R16, 242
   \   00000028   EF1C               LDI     R17, 252
   \   0000002A   BD1D               OUT     0x2D, R17
   \   0000002C   BD0C               OUT     0x2C, R16
    263            // 16MHz / 1024precaling = 15.625kHz
    264            // T= 1 / 15.625Hz = 64usec
    265            // 64usec X 1563 = 0.1sec
    266            // 64usec X 781 = 50msec
    267            
    268            //test
    269            if(tmr_osc) {
   \   0000002E   9100....           LDS     R16, tmr_osc
   \   00000032   2300               TST     R16
   \   00000034   F409               BRNE    $+2+2
   \   00000036   C08F               RJMP    ??TIMER1_OVF_Handler_0
    270              if(tmr_osc<31) tmr_osc++;
   \   00000038   9100....           LDS     R16, tmr_osc
   \   0000003C   310F               CPI     R16, 31
   \   0000003E   F428               BRCC    ??TIMER1_OVF_Handler_1
   \   00000040   9100....           LDS     R16, tmr_osc
   \   00000044   9503               INC     R16
   \   00000046   9300....           STS     tmr_osc, R16
    271              if(tmr_osc==10) {   //0.5sec
   \                     ??TIMER1_OVF_Handler_1:
   \   0000004A   9100....           LDS     R16, tmr_osc
   \   0000004E   300A               CPI     R16, 10
   \   00000050   F411               BRNE    ??TIMER1_OVF_Handler_2
    272                //_system_init_1();
    273                _system_init_se();
   \   00000052   ....               RCALL   _system_init_se
   \   00000054   C029               RJMP    ??TIMER1_OVF_Handler_3
    274              }
    275              /*else if(tmr_osc==60) {    //3sec
    276                _system_init_se();
    277              }*/
    278              else if(tmr_osc==30) {    //1.5sec
   \                     ??TIMER1_OVF_Handler_2:
   \   00000056   9100....           LDS     R16, tmr_osc
   \   0000005A   310E               CPI     R16, 30
   \   0000005C   F529               BRNE    ??TIMER1_OVF_Handler_3
    279                //_system_init_1();
    280                es9018_reg10=0xce;			
   \   0000005E   EC0E               LDI     R16, 206
   \   00000060   9300....           STS     es9018_reg10, R16
    281                I2C_Write(0x90, 0x0a, es9018_reg10);
   \   00000064   9120....           LDS     R18, es9018_reg10
   \   00000068   E01A               LDI     R17, 10
   \   0000006A   E900               LDI     R16, 144
   \   0000006C   ........           CALL    I2C_Write
    282                I2C_Write(0x92, 0x0a, es9018_reg10);
   \   00000070   9120....           LDS     R18, es9018_reg10
   \   00000074   E01A               LDI     R17, 10
   \   00000076   E902               LDI     R16, 146
   \   00000078   ........           CALL    I2C_Write
    283                init_vol_dn(vol_dB);
   \   0000007C   9100....           LDS     R16, vol_dB
   \   00000080   ........           CALL    init_vol_dn
    284                DelayTime_ms(50);  //50msec
   \   00000084   E302               LDI     R16, 50
   \   00000086   E010               LDI     R17, 0
   \   00000088   ........           CALL    DelayTime_ms
    285                init_vol(vol_dB);
   \   0000008C   9100....           LDS     R16, vol_dB
   \   00000090   ........           CALL    init_vol
    286                dot_vol_hextodeci(vol_dB);
   \   00000094   9100....           LDS     R16, vol_dB
   \   00000098   ........           CALL    dot_vol_hextodeci
    287                tmr_osc_ck=1;
   \   0000009C   E001               LDI     R16, 1
   \   0000009E   9300....           STS     tmr_osc_ck, R16
    288                init_setting_check=1;   //include remocon interrupt,
   \   000000A2   E001               LDI     R16, 1
   \   000000A4   9300....           STS     init_setting_check, R16
    289              }
    290              
    291              if(tmr_osc_ck){
   \                     ??TIMER1_OVF_Handler_3:
   \   000000A8   9100....           LDS     R16, tmr_osc_ck
   \   000000AC   2300               TST     R16
   \   000000AE   F409               BRNE    $+2+2
   \   000000B0   C052               RJMP    ??TIMER1_OVF_Handler_0
    292                
    293                if(!KEY_FLAG){
   \   000000B2   9983               SBIC    0x10, 0x03
   \   000000B4   C03A               RJMP    ??TIMER1_OVF_Handler_4
    294                  if(key_int_flag==1 && key_tmr>5) key_int_flag=2;
   \   000000B6   9100....           LDS     R16, key_int_flag
   \   000000BA   3001               CPI     R16, 1
   \   000000BC   F451               BRNE    ??TIMER1_OVF_Handler_5
   \   000000BE   91E0....           LDS     R30, key_tmr
   \   000000C2   91F0....           LDS     R31, (key_tmr + 1)
   \   000000C6   9736               SBIW    R31:R30, 6
   \   000000C8   F020               BRCS    ??TIMER1_OVF_Handler_5
   \   000000CA   E002               LDI     R16, 2
   \   000000CC   9300....           STS     key_int_flag, R16
   \   000000D0   C020               RJMP    ??TIMER1_OVF_Handler_6
    295                  else if(key_int_flag==2 && key_tmr>6){ //key_tmr=400 : 0.05sec
   \                     ??TIMER1_OVF_Handler_5:
   \   000000D2   9100....           LDS     R16, key_int_flag
   \   000000D6   3002               CPI     R16, 2
   \   000000D8   F4E1               BRNE    ??TIMER1_OVF_Handler_6
   \   000000DA   91E0....           LDS     R30, key_tmr
   \   000000DE   91F0....           LDS     R31, (key_tmr + 1)
   \   000000E2   9737               SBIW    R31:R30, 7
   \   000000E4   F0B0               BRCS    ??TIMER1_OVF_Handler_6
    296           
    297                    data=KEY_DATA2;
   \   000000E6   E000               LDI     R16, 0
   \   000000E8   9986               SBIC    0x10, 0x06
   \   000000EA   9503               INC     R16
    298                    data<<=1;
   \                     ??TIMER1_OVF_Handler_7:
   \   000000EC   0F00               LSL     R16
    299                    data+=KEY_DATA1;
   \   000000EE   E010               LDI     R17, 0
   \   000000F0   9985               SBIC    0x10, 0x05
   \   000000F2   9513               INC     R17
   \                     ??TIMER1_OVF_Handler_8:
   \   000000F4   0F01               ADD     R16, R17
    300                    data<<=1;
   \   000000F6   0F00               LSL     R16
    301                    data+=KEY_DATA0;
   \   000000F8   E010               LDI     R17, 0
   \   000000FA   9984               SBIC    0x10, 0x04
   \   000000FC   9513               INC     R17
   \                     ??TIMER1_OVF_Handler_9:
   \   000000FE   0F01               ADD     R16, R17
    302                    
    303                    if(data==2) {
   \   00000100   3002               CPI     R16, 2
   \   00000102   F419               BRNE    ??TIMER1_OVF_Handler_10
    304                      audio_level_up();                            //Master Volume Up
   \   00000104   ........           CALL    audio_level_up
   \   00000108   C004               RJMP    ??TIMER1_OVF_Handler_6
    305                    }
    306                    else if(data==5){
   \                     ??TIMER1_OVF_Handler_10:
   \   0000010A   3005               CPI     R16, 5
   \   0000010C   F411               BRNE    ??TIMER1_OVF_Handler_6
    307                      audio_level_down();                        //Master Volume Down
   \   0000010E   ........           CALL    audio_level_down
    308                    }
    309                    
    310                  }//end else if
    311                  tmr_flag_ck=0;
   \                     ??TIMER1_OVF_Handler_6:
   \   00000112   E000               LDI     R16, 0
   \   00000114   9300....           STS     tmr_flag_ck, R16
    312                  key_tmr++;
   \   00000118   ....               LDI     R30, LOW(key_tmr)
   \   0000011A   ....               LDI     R31, (key_tmr) >> 8
   \   0000011C   8100               LD      R16, Z
   \   0000011E   8111               LDD     R17, Z+1
   \   00000120   5F0F               SUBI    R16, 255
   \   00000122   4F1F               SBCI    R17, 255
   \   00000124   8300               ST      Z, R16
   \   00000126   8311               STD     Z+1, R17
   \   00000128   C016               RJMP    ??TIMER1_OVF_Handler_0
    313                }
    314                else { 
    315                  key_int_flag=0; key_tmr=0; 
   \                     ??TIMER1_OVF_Handler_4:
   \   0000012A   E000               LDI     R16, 0
   \   0000012C   9300....           STS     key_int_flag, R16
   \   00000130   E000               LDI     R16, 0
   \   00000132   9300....           STS     key_tmr, R16
   \   00000136   E000               LDI     R16, 0
   \   00000138   9300....           STS     (key_tmr + 1), R16
    316                  if(tmr_flag_ck==0) {
   \   0000013C   9100....           LDS     R16, tmr_flag_ck
   \   00000140   2300               TST     R16
   \   00000142   F449               BRNE    ??TIMER1_OVF_Handler_0
    317                    tmr_flag_ck=1;
   \   00000144   E001               LDI     R16, 1
   \   00000146   9300....           STS     tmr_flag_ck, R16
    318                    rom_tmr=0;
   \   0000014A   E000               LDI     R16, 0
   \   0000014C   9300....           STS     rom_tmr, R16
   \   00000150   E000               LDI     R16, 0
   \   00000152   9300....           STS     (rom_tmr + 1), R16
    319                  }
    320                }
    321                /*
    322                if(IR_data_flag ){
    323                //if(IR_data_flag && Time_50ms>1){
    324                  //Time_50ms=0;
    325                  //IR_data[IR_data_flag]=_remocon_data;
    326          
    327                  if(IR_data[IR_data_flag]==0x80) {                             //Master Volume Up
    328                    //if(new_repeat_flag) { for(test_i=0; test_i<3; test_i++) audio_level_up(); }
    329                    //else audio_level_up();
    330                    if(IR_data[IR_data_flag]==0x80 && IR_data[IR_data_flag+1]==0x80) {
    331                      audio_level_sp_up();
    332                      IR_data_flag--;
    333                    }
    334                    else audio_level_up();
    335                  }
    336                  else if(IR_data[IR_data_flag]==0xA8) {                         //Master Volume Down
    337                    //if(new_repeat_flag) { for(test_i=0; test_i<3; test_i++) audio_level_down();}
    338                    //else audio_level_down();
    339                    if(IR_data[IR_data_flag]==0xA8 && IR_data[IR_data_flag+1]==0xA8) {
    340                      audio_level_sp_down();
    341                      IR_data_flag--;
    342                    }
    343                    else audio_level_down();
    344                  }
    345                    
    346                  IR_data_flag--;
    347                }
    348              */  
    349                
    350                
    351              }
    352            }		
    353          	
    354            Time_50ms++;
   \                     ??TIMER1_OVF_Handler_0:
   \   00000156   ....               LDI     R30, LOW(Time_50ms)
   \   00000158   ....               LDI     R31, (Time_50ms) >> 8
   \   0000015A   8100               LD      R16, Z
   \   0000015C   8111               LDD     R17, Z+1
   \   0000015E   5F0F               SUBI    R16, 255
   \   00000160   4F1F               SBCI    R17, 255
   \   00000162   8300               ST      Z, R16
   \   00000164   8311               STD     Z+1, R17
    355          	
    356          }
   \   00000166   BF9B               OUT     0x3B, R25
   \   00000168   BF8F               OUT     0x3F, R24
   \   0000016A   9109               LD      R16, Y+
   \   0000016C   9119               LD      R17, Y+
   \   0000016E   9129               LD      R18, Y+
   \   00000170   9139               LD      R19, Y+
   \   00000172   9149               LD      R20, Y+
   \   00000174   9159               LD      R21, Y+
   \   00000176   9169               LD      R22, Y+
   \   00000178   9179               LD      R23, Y+
   \   0000017A   9009               LD      R0, Y+
   \   0000017C   9019               LD      R1, Y+
   \   0000017E   9029               LD      R2, Y+
   \   00000180   9039               LD      R3, Y+
   \   00000182   91E9               LD      R30, Y+
   \   00000184   91F9               LD      R31, Y+
   \   00000186   9189               LD      R24, Y+
   \   00000188   9199               LD      R25, Y+
   \   0000018A   9518               RETI
   \   0000018C                      REQUIRE _A_TCNT1
   \   0000018C                      REQUIRE _A_PIND
    357          
    358          ///////////////////////////////////////////////////////////////////////////////
    359          //U8 non_audio_flag=0;6

   \                                 In  segment CODE, align 2, keep-with-next
    360          void main(void){
   \                     main:
    361            _system_init();
   \   00000000   ....               RCALL   _system_init
    362            //_system_init_1();
    363              
    364            while(1){
    365              if(PINB_Bit6==0) PORTB_Bit7=0;       //Analog Power Disable
   \                     ??main_0:
   \   00000002   99B6               SBIC    0x16, 0x06
   \   00000004   CFFE               RJMP    ??main_0
   \   00000006   98C7               CBI     0x18, 0x07
   \   00000008   CFFC               RJMP    ??main_0
   \   0000000A                      REQUIRE _A_PINB
   \   0000000A                      REQUIRE _A_PORTB
    366              //if(tmr_osc_ck) _system_init_1();
    367              /*
    368              if(tmr_osc_ck){
    369                tmr_osc_ck2=1;
    370                tmr_osc_ck=0;
    371                //one time
    372                if(KeyReady){
    373                  _system_init_se();
    374                  es9018_reg10=0xce;			
    375                  I2C_Write(0x90, 0x0a, es9018_reg10);
    376                  I2C_Write(0x92, 0x0a, es9018_reg10);
    377                  //led_start_flag=1;
    378                  KeyReady=0;
    379                }
    380                
    381              }//end if
    382              */
    383            }//end while
    384          }

   \                                 In  segment INTVEC, offset 0x10, root
   \                     `??INT3_Handler::??INTVEC 16`:
   \   00000010   ........           JMP     INT3_Handler

   \                                 In  segment INTVEC, offset 0x18, root
   \                     `??INT5_Handler::??INTVEC 24`:
   \   00000018   ........           JMP     INT5_Handler

   \                                 In  segment INTVEC, offset 0x1c, root
   \                     `??INT6_Handler::??INTVEC 28`:
   \   0000001C   ........           JMP     INT6_Handler

   \                                 In  segment INTVEC, offset 0x20, root
   \                     `??INT7_Handler::??INTVEC 32`:
   \   00000020   ........           JMP     INT7_Handler

   \                                 In  segment INTVEC, offset 0x28, root
   \                     `??TIMER2_OVF_Handler::??INTVEC 40`:
   \   00000028   ........           JMP     TIMER2_OVF_Handler

   \                                 In  segment INTVEC, offset 0x38, root
   \                     `??TIMER1_OVF_Handler::??INTVEC 56`:
   \   00000038   ........           JMP     TIMER1_OVF_Handler

   \                                 In  segment INTVEC, offset 0x40, root
   \                     `??TIMER0_OVF_Handler::??INTVEC 64`:
   \   00000040   ........           JMP     TIMER0_OVF_Handler

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for phase_data>`:
   \   00000000   01                 DC8 1

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for interrupt_eicra>`:
   \   00000000   B5                 DC8 181

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for rom_save_flag>`:
   \   00000000   01                 DC8 1

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for rom_save_flag2>`:
   \   00000000   01                 DC8 1

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for dot_light_reg>`:
   \   00000000   01                 DC8 1

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for ch_led_enable>`:
   \   00000000   01                 DC8 1

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for sr_led_data>`:
   \   00000000   06                 DC8 6

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for display_num>`:
   \   00000000   64                 DC8 100

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for vol_dB>`:
   \   00000000   FF                 DC8 255

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for i2s_flag>`:
   \   00000000   01                 DC8 1

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for usb_sr>`:
   \   00000000   30                 DC8 48

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for mute_enable>`:
   \   00000000   01                 DC8 1

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for es9018_reg10>`:
   \   00000000   CE                 DC8 206

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min44>`:
   \   00000000   08CE               DC16 2254

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max44>`:
   \   00000000   0937               DC16 2359

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min48>`:
   \   00000000   09A0               DC16 2464

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max48>`:
   \   00000000   0A09               DC16 2569

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min88>`:
   \   00000000   11D1               DC16 4561

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max88>`:
   \   00000000   123A               DC16 4666

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min96>`:
   \   00000000   1374               DC16 4980

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max96>`:
   \   00000000   13DD               DC16 5085

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min176>`:
   \   00000000   23D7               DC16 9175

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max176>`:
   \   00000000   243F               DC16 9279

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min192>`:
   \   00000000   271D               DC16 10013

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max192>`:
   \   00000000   2786               DC16 10118

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for interface_ch>`:
   \   00000000   80                 DC8 128

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for KeyReady>`:
   \   00000000   01                 DC8 1

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for ch_name>`:
   \   00000000   4F4358412031       DC8 43H, 4FH, 41H, 58H, 31H, 20H
   \   00000006   4F4358412032       DC8 43H, 4FH, 41H, 58H, 32H, 20H
   \   0000000C   412053452031       DC8 20H, 41H, 45H, 53H, 31H, 20H
   \   00000012   412053452032       DC8 20H, 41H, 45H, 53H, 32H, 20H
   \   00000018   4220434E2020       DC8 20H, 42H, 4EH, 43H, 20H, 20H
   \   0000001E   4F2054502031       DC8 20H, 4FH, 50H, 54H, 31H, 20H
   \   00000024   4F2054502032       DC8 20H, 4FH, 50H, 54H, 32H, 20H
   \   0000002A   552042532020       DC8 20H, 55H, 53H, 42H, 20H, 20H

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for sr_name>`:
   \   00000000   34202E342031       DC8 20H, 34H, 34H, 2EH, 31H, 20H
   \   00000006   34202E382030       DC8 20H, 34H, 38H, 2EH, 30H, 20H
   \   0000000C   38202E382032       DC8 20H, 38H, 38H, 2EH, 32H, 20H
   \   00000012   39202E362030       DC8 20H, 39H, 36H, 2EH, 30H, 20H
   \   00000018   37312E362034       DC8 31H, 37H, 36H, 2EH, 34H, 20H
   \   0000001E   39312E322030       DC8 31H, 39H, 32H, 2EH, 30H, 20H
   \   00000024   202020202020       DC8 20H, 20H, 20H, 20H, 20H, 20H

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for filter_name>`:
   \   00000000   4946544C5245       DC8 46H, 49H, 4CH, 54H, 45H, 52H, 31H, 20H
   \              2031        
   \   00000008   4946544C5245       DC8 46H, 49H, 4CH, 54H, 45H, 52H, 32H, 20H
   \              2032        
   \   00000010   4946544C5245       DC8 46H, 49H, 4CH, 54H, 45H, 52H, 33H, 20H
   \              2033        

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for phase_name>`:
   \   00000000   4920564E5245       DC8 20H, 49H, 4EH, 56H, 45H, 52H, 53H, 45H
   \              4553        

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for normal_name>`:
   \   00000000   20204F4E4D52       DC8 20H, 20H, 4EH, 4FH, 52H, 4DH, 41H, 4CH
   \              4C41        

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for f1_coeff_st1>`:
   \   00000000   00000000463D       DD 0, 1656381, 9659303, 34409768, 93398781, 209942799, 407444422
   \              001963A70093
   \              0D28020D26FD
   \              0591790F0C83
   \              1BC61849    
   \   0000001C   3C8E29AA49B7       DD 699022478, 1074874807, 1492352005, 1874902824, 2124488166
   \              40117C0558F3
   \              BF286FC01DE6
   \              7EA1        
   \   00000030   FFFF7FFFA305       DD 2147483647, 1887806213, 1355685389, 639107586, -110755555
   \              70851E0D50CE
   \              02022618011D
   \              F966        
   \   00000044   F2BBD51B578D       DD -719588677, -1044031603, -1020728165, -690754479, -187854371
   \              C1C5EC9BC328
   \              EC51D6D391DD
   \              F4CD        
   \   00000058   6A261250390E       DD 307259942, 630274318, 690105478, 497041076, 151573293, -200494787
   \              25912C862922
   \              3EB41DA0D32D
   \              0908B13DF40C
   \   00000070   437DE687DFE5       DD -427342979, -460267547, -313535895, -69239327, 163487939, 295508341
   \              E490D269ED4F
   \              7DE1FBDFA0C3
   \              09BE1975119D
   \   00000088   F94A11543B15       DD 290781514, 173357845, 8625355, -129830628, -191689217, -166581017
   \              0A559CCB0083
   \              F11CF8420DFF
   \              F4932CE7F612
   \   000000A0   4E1DFB284F6E       DD -81244643, 18370414, 89760574, 110702807, 84163673, 31575802
   \              0118A33E0559
   \              30D706993C59
   \              0504CEFA01E1
   \   000000B8   124FFECC404F       DD -20180401, -51101617, -54545855, -36486473, -9671202, 13456521
   \              FCF4B241FCBF
   \              42B7FDD36DDE
   \              FF6C548900CD
   \   000000D0   DC9E0187E1CF       DD 25681054, 26272207, 19136308, 9640102, 1930723, -2245673, -3249107
   \              0190FF340123
   \              18A6009375E3
   \              001DBBD7FFDD
   \              6C2DFFCE    
   \   000000EC   543BFFDAB987       DD -2468805, -1263225, -407167, 0, 0
   \              FFECC981FFF9
   \              000000000000
   \              0000        

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for f1_coeff_st2>`:
   \   00000000   1B9F57F51B9F       DD 1475681183, 1475681183, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              57F500000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              00000000    

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for f2_coeff_st1>`:
   \   00000000   000000008221       DD 0, -1801695, -4008643, -5121013, -2214480, 5996574, 16606227
   \              FFE4D53DFFC2
   \              DC0BFFB135B0
   \              FFDE801E005B
   \              641300FD    
   \   0000001C   91530154E867       DD 22319443, 15460455, -5254559, -30080590, -41104893, -23628756
   \              00EBD261FFAF
   \              01B2FE35CA03
   \              FD8C742CFE97
   \   00000034   AAB301328FAA       DD 20097715, 65638314, 77510493, 33703685, -51685218, -126749606
   \              03E9B75D049E
   \              47050202589E
   \              FCEBF45AF871
   \   0000004C   EBA7F847DF9B       DD -129504345, -32841829, 122779073, 237746372, 208859258, 4955037
   \              FE0A75C10751
   \              B8C40E2BF07A
   \              0C729B9D004B
   \   00000064   1CB6EEF78B57       DD -285795146, -476804265, -374025116, 107471796, 869797120, 1652694820
   \              E394D464E9B4
   \              E3B406670D00
   \              33D81F246282
   \   0000007C   FFFF7FFFFFFF       DD 2147483647, 2147483647, 1652694820, 869797120, 107471796, -374025116
   \              7FFF1F246282
   \              0D0033D8E3B4
   \              0667D464E9B4
   \   00000094   8B57E3941CB6       DD -476804265, -285795146, 4955037, 208859258, 237746372, 122779073
   \              EEF79B9D004B
   \              F07A0C72B8C4
   \              0E2B75C10751
   \   000000AC   DF9BFE0AEBA7       DD -32841829, -129504345, -126749606, -51685218, 33703685, 77510493
   \              F847F45AF871
   \              589EFCEB4705
   \              0202B75D049E
   \   000000C4   8FAA03E9AAB3       DD 65638314, 20097715, -23628756, -41104893, -30080590, -5254559
   \              0132742CFE97
   \              CA03FD8C01B2
   \              FE35D261FFAF
   \   000000DC   E86700EB9153       DD 15460455, 22319443, 16606227, 5996574, -2214480, -5121013, -4008643
   \              0154641300FD
   \              801E005B35B0
   \              FFDEDC0BFFB1
   \              D53DFFC2    
   \   000000F8   8221FFE40000       DD -1801695, 0
   \              0000        

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for f2_coeff_st2>`:
   \   00000000   B9C47FFEB9C4       DD 2147400132, 2147400132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              7FFE00000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              00000000    

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for test_osc>`:
   \   00000000   01                 DC8 1

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for _repeat_data>`:
   \   00000000   30                 DC8 48

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for init_sr_led>`:
   \   00000000   01                 DC8 1

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for tmr_flag_ck>`:
   \   00000000   01                 DC8 1
    385          

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      0      2   DelayTime
      0      2   DelayTime_ms
        0      2   -> DelayTime
      0      2   I2C_Read
        0      2   -> I2C_SHIN
        0      2   -> I2C_SHOUT
        0      2   -> I2C_START
        0      2   -> I2C_STOP
      0      2   I2C_SHIN
        0      2   -> DelayTime
      0      2   I2C_SHOUT
        0      2   -> DelayTime
      0      2   I2C_START
        0      2   -> DelayTime
      0      2   I2C_STOP
        0      2   -> DelayTime
      0      2   I2C_Write
        0      2   -> I2C_SHOUT
        0      2   -> I2C_START
        0      2   -> I2C_STOP
     16      2   INT3_Handler
       16      2   -> audio_level_down
       16      2   -> audio_level_up
       16      2   -> channel_down
       16      2   -> channel_up
       16      2   -> ess_mute
       16      2   -> femto_function
     16      2   INT5_Handler
       16      2   -> IR_error
       16      2   -> _remocon_processing
     12      2   INT6_Handler
       12      2   -> sample_rate_cal
     12      2   INT7_Handler
       12      2   -> sample_rate_cal
      0      2   IR_error
     16      2   TIMER0_OVF_Handler
       16      2   -> dot_string_digit
       16      2   -> sample_rate_cal
       16      2 ?S_EC_MUL_L02
     16      2   TIMER1_OVF_Handler
       16      2   -> DelayTime_ms
       16      2   -> I2C_Write
       16      2   -> _system_init_se
       16      2   -> audio_level_down
       16      2   -> audio_level_up
       16      2   -> dot_vol_hextodeci
       16      2   -> init_vol
       16      2   -> init_vol_dn
      7      2   TIMER2_OVF_Handler
      0      2   _bit_init
        0      2 ?S_SHL_L02
      0      2   _inbit
        0      2 ?S_SHL_L02
      0      2   _inport
      0      2   _outbit
        0      2 ?S_SHL_L02
      0      2   _outport
      0      2   _port_init
      2      2   _remocon_processing
        2      2   -> audio_level_down
        2      2   -> audio_level_sp_down
        2      2   -> audio_level_sp_up
        2      2   -> audio_level_up
        2      2   -> remocon_data
      0      2   _system_init
        0      2   -> I2C_Write
        0      2   -> dot_matrix_clear
      2      2   _system_init_se
        2      2   -> DelayTime_ms
        2      2   -> I2C_SHOUT
        2      2   -> I2C_START
        2      2   -> I2C_STOP
        2      2   -> I2C_Write
        2      2   -> channel_change
        2      2   -> dot_matrix_bright
        2      2   -> ess_filter
        2      2   -> phase_ess
        2      2   -> rom_I2C_Read
        2      2   -> rom_check_sum_error
        2      2   -> volume_set
      0      2   audio_level_down
        0      2   -> dot_vol_hextodeci
        0      2   -> ess_mute
        0      2   -> volume_set
      0      2   audio_level_sp_down
        0      2   -> dot_vol_hextodeci
        0      2   -> volume_set
      0      2   audio_level_sp_up
        0      2   -> dot_vol_hextodeci
        0      2   -> volume_set
      0      2   audio_level_up
        0      2   -> dot_vol_hextodeci
        0      2   -> ess_mute
        0      2   -> volume_set
      0      2   channel_change
        0      2   -> I2C_Write
        0      2   -> rom_write_multi
      0      2   channel_down
        0      2   -> channel_change
      0      2   channel_up
        0      2   -> channel_change
      0      2   dot_0x_hexadecimal
        0      2   -> dot_matrix_digit
        0      2 ?SS_SHR_L02
      0      2   dot_matrix_bright
        0      2   -> DelayTime
      0      2   dot_matrix_clear
      0      2   dot_matrix_digit
        0      2   -> DelayTime
      0      2   dot_matrix_digit2
        0      2   -> DelayTime
      0      2   dot_matrix_set
        0      2   -> dot_matrix_bright
      0      2   dot_string_digit
        0      2   -> DelayTime
        0      2 ?S_EC_MUL_L02
      0      2   dot_vol_hextodeci
        0      2   -> dot_string_digit
        0      2 ?UC_DIVMOD_L01
      4      2   ess_filter
        4      2   -> DelayTime_ms
        4      2   -> I2C_Write
        4      2   -> rom_write_multi
      0      2   ess_mute
        0      2   -> I2C_Write
        0      2   -> dot_vol_hextodeci
      0      2   femto_function
        0      2   -> DelayTime_ms
        0      2   -> I2C_Write
        0      2   -> dot_string_digit
        0      2   -> ess_filter
        0      2   -> phase_ess
        0      2   -> volume_set
        0      2 ?S_EC_MUL_L02
      0      2   init_vol
        0      2   -> I2C_Write
      0      2   init_vol_dn
        0      2   -> I2C_Write
      0      2   main
        0      2   -> _system_init
      0      2   phase_ess
        0      2   -> I2C_Write
        0      2   -> rom_write_multi
      2      2   remocon_data
        2      2   -> IR_error
        2      2   -> audio_level_down
        2      2   -> audio_level_up
        2      2   -> channel_down
        2      2   -> channel_up
        2      2   -> ess_mute
        2      2   -> femto_function
      0      2   reset_eeprom
        0      2   -> DelayTime_ms
        0      2   -> I2C_Write
        0      2 ?US_SHR_L02
      0      2   rom_I2C_Read
        0      2   -> I2C_Read
        0      2 ?US_SHR_L02
      0      2   rom_check_sum_error
        0      2   -> DelayTime_ms
        0      2   -> I2C_SHOUT
        0      2   -> I2C_START
        0      2   -> I2C_STOP
        0      2   -> rom_I2C_Read
        0      2 ?US_SHR_L02
      0      2   rom_cnt_check
        0      2   -> DelayTime_ms
        0      2   -> I2C_SHOUT
        0      2   -> I2C_START
        0      2   -> I2C_STOP
      0      2   rom_write_multi
        0      2   -> I2C_SHOUT
        0      2   -> I2C_START
        0      2   -> I2C_STOP
        0      2   -> rom_cnt_check
        0      2 ?US_SHR_L02
      0      2   sample_rate_cal
        0      2   -> I2C_Read
        0      2   -> I2C_Write
      0      2   test_set_eeprom
        0      2   -> DelayTime_ms
        0      2   -> I2C_Write
        0      2 ?US_SHR_L02
      0      2   volume_set
        0      2   -> I2C_Write
        0      2   -> rom_write_multi


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Initializer for KeyReady>
       1  ?<Initializer for _repeat_data>
       1  ?<Initializer for ch_led_enable>
      48  ?<Initializer for ch_name>
       1  ?<Initializer for display_num>
       1  ?<Initializer for dot_light_reg>
       1  ?<Initializer for es9018_reg10>
     256  ?<Initializer for f1_coeff_st1>
      64  ?<Initializer for f1_coeff_st2>
     256  ?<Initializer for f2_coeff_st1>
      64  ?<Initializer for f2_coeff_st2>
      24  ?<Initializer for filter_name>
       1  ?<Initializer for i2s_flag>
       1  ?<Initializer for init_sr_led>
       1  ?<Initializer for interface_ch>
       1  ?<Initializer for interrupt_eicra>
       2  ?<Initializer for max176>
       2  ?<Initializer for max192>
       2  ?<Initializer for max44>
       2  ?<Initializer for max48>
       2  ?<Initializer for max88>
       2  ?<Initializer for max96>
       2  ?<Initializer for min176>
       2  ?<Initializer for min192>
       2  ?<Initializer for min44>
       2  ?<Initializer for min48>
       2  ?<Initializer for min88>
       2  ?<Initializer for min96>
       1  ?<Initializer for mute_enable>
       8  ?<Initializer for normal_name>
       1  ?<Initializer for phase_data>
       8  ?<Initializer for phase_name>
       1  ?<Initializer for rom_save_flag2>
       1  ?<Initializer for rom_save_flag>
       1  ?<Initializer for sr_led_data>
      42  ?<Initializer for sr_name>
       1  ?<Initializer for test_osc>
       1  ?<Initializer for tmr_flag_ck>
       1  ?<Initializer for usb_sr>
       1  ?<Initializer for vol_dB>
      14  DelayTime
      28  DelayTime_ms
      38  I2C_Read
     158  I2C_SHIN
     106  I2C_SHOUT
      28  I2C_START
      26  I2C_STOP
      24  I2C_Write
       1  I2C_error
     234  INT3_Handler
       4  INT3_Handler::??INTVEC 16
     300  INT5_Handler
       4  INT5_Handler::??INTVEC 24
      86  INT6_Handler
       4  INT6_Handler::??INTVEC 28
      86  INT7_Handler
       4  INT7_Handler::??INTVEC 32
      20  IR_data
       1  IR_data_flag
     122  IR_error
       1  KeyReady
       2  Remoc_data_save
     420  TIMER0_OVF_Handler
       4  TIMER0_OVF_Handler::??INTVEC 64
     396  TIMER1_OVF_Handler
       4  TIMER1_OVF_Handler::??INTVEC 56
     268  TIMER2_OVF_Handler
       4  TIMER2_OVF_Handler::??INTVEC 40
       1  Time_500us
       2  Time_50ms
       1  _A_DDRA
       1  _A_DDRB
       1  _A_DDRC
       1  _A_DDRD
       1  _A_DDRE
       1  _A_DDRF
       1  _A_DDRG
       1  _A_EICRA
       1  _A_EICRB
       1  _A_EIFR
       1  _A_EIMSK
       1  _A_OCR0
       1  _A_PINA
       1  _A_PINB
       1  _A_PINC
       1  _A_PIND
       1  _A_PINE
       1  _A_PINF
       1  _A_PING
       1  _A_PORTA
       1  _A_PORTB
       1  _A_PORTC
       1  _A_PORTD
       1  _A_PORTE
       1  _A_PORTF
       1  _A_PORTG
       1  _A_TCCR0
       1  _A_TCCR1B
       1  _A_TCCR2
       1  _A_TCNT0
       2  _A_TCNT1
       1  _A_TCNT2
       1  _A_TIFR
       1  _A_TIMSK
     322  _bit_init
       1  _code_remocon
       2  _counter_remocon
       1  _flgOrKey
       1  _flg_allow_remocon_repeat
       1  _flg_enter
       1  _flg_on_remocon
       1  _flg_repeat
       1  _flg_run_repeat
     210  _inbit
      62  _inport
     410  _outbit
     118  _outport
      62  _port_init
       1  _porta
       1  _portb
       1  _portc
       1  _portd
       1  _porte
       1  _portf
       1  _portg
       2  _remocon_buffer
       1  _remocon_counter
       2  _remocon_custom
       2  _remocon_custom_2
       2  _remocon_data
       2  _remocon_data_2
     404  _remocon_processing
       2  _remocon_repeat_count
       1  _repeat_data
       1  _repeat_remocon
     200  _system_init
     890  _system_init_se
      66  audio_level_down
      56  audio_level_sp_down
      72  audio_level_sp_up
      74  audio_level_up
       1  bit_input
       1  button_data
       1  ch_data
       1  ch_led_data
       1  ch_led_enable
      48  ch_name
     132  channel_change
      38  channel_down
      38  channel_up
       2  cnt_remocon
       2  cs_audio_timer
       2  dac_audio_timer
       1  display_num
      68  dot_0x_hexadecimal
       1  dot_light_reg
     756  dot_matrix_bright
      10  dot_matrix_clear
     374  dot_matrix_digit
     358  dot_matrix_digit2
      24  dot_matrix_set
      16  dot_string
     448  dot_string_digit
     220  dot_vol_hextodeci
       1  es9018_lock
       1  es9018_lock_flag
       1  es9018_reg10
       1  ess_automute
     608  ess_filter
       1  ess_lch_master_trim
       1  ess_lock_ck
      84  ess_mute
       1  ess_rch_master_trim
       4  ess_volume
       1  exMute
     256  f1_coeff_st1
      64  f1_coeff_st2
     256  f2_coeff_st1
      64  f2_coeff_st2
     266  femto_function
       1  filter_data
       1  filter_flag
      24  filter_name
       1  grAck
       1  high_bit_0
       1  high_bit_1
       1  high_repeat_flag0
       1  high_repeat_flag1
       1  high_start_flag
       1  i2s_flag
       1  inByte
       1  init_rom_add0
       1  init_rom_add1
       1  init_rom_add2
       1  init_rom_address_data
       1  init_rom_data0
       1  init_rom_data1
       1  init_rom_data2
       1  init_setting_check
       1  init_sr_led
      18  init_vol
      46  init_vol_dn
       1  interface_ch
       1  interrupt_eicra
       1  inverse_data
       1  ir_error
       1  ir_error_check
       1  key_condition
       1  key_func
       2  key_func_tmr
       1  key_int_flag
       2  key_tmr
       2  led_tmr
       1  low_bit_time
       1  low_start_flag
      10  main
       2  max176
       2  max192
       2  max44
       2  max48
       2  max88
       2  max96
       2  min176
       2  min192
       2  min44
       2  min48
       2  min88
       2  min96
       1  mtime_flag
       2  mtime_length
       1  mute_enable
       1  new_repeat_flag
       8  normal_name
       1  old_ess_automute
       1  old_ess_lock_ck
       1  old_exMute
       1  phase_data
      46  phase_ess
       8  phase_name
     756  remocon_data
      28  reset_eeprom
      20  rom_I2C_Read
       1  rom_add_check_sum
       2  rom_add_pt
       1  rom_add_pt_high
       1  rom_add_pt_low
     238  rom_check_sum_error
       4  rom_cnt
     246  rom_cnt_check
       1  rom_cnt_high
       1  rom_cnt_low
       1  rom_cnt_mid
       1  rom_device_high
       1  rom_device_low
       1  rom_func_data
       1  rom_save_flag
       1  rom_save_flag2
       2  rom_tmr
     194  rom_write_multi
       2  sample_rate
       2  sample_rate2
     840  sample_rate_cal
       2  sp_en_cnt
       1  sr_data
       1  sr_led_data
      42  sr_name
       2  test_check
       2  test_check2
      32  test_eeprom
       1  test_osc
      26  test_set_eeprom
       1  tmr_flag_ck
       1  tmr_osc
       1  tmr_osc_ck
       2  usb_audio_timer
       1  usb_sr
       1  vol_dB
      34  volume_set
      14  -- Other

 
     35 bytes in segment ABSOLUTE
 11 206 bytes in segment CODE
     14 bytes in segment INITTAB
     28 bytes in segment INTVEC
    813 bytes in segment NEAR_I
    813 bytes in segment NEAR_ID
    196 bytes in segment NEAR_Z
 
 12 019 bytes of CODE memory (+ 42 bytes shared)
  1 009 bytes of DATA memory (+ 35 bytes shared)

Errors: none
Warnings: none
