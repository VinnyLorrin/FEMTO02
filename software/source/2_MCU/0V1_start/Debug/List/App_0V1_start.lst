##############################################################################
#                                                                            #
# IAR Atmel AVR C/EC++ Compiler V3.10C/W32             15/Mar/2012  14:10:30 #
# Copyright 1996-2004 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Source file  =  H:\2_CalyxII\0_SuperDAC\0_Circuit\0V1\MCU\0V1_start\App #
#                    _0V1_start.c                                            #
#    Command line =  --cpu=m128 -ms -o H:\2_CalyxII\0_SuperDAC\0_Circuit\0V1 #
#                    \MCU\0V1_start\Debug\Obj\ -lC                           #
#                    H:\2_CalyxII\0_SuperDAC\0_Circuit\0V1\MCU\0V1_start\Deb #
#                    ug\List\ -lA H:\2_CalyxII\0_SuperDAC\0_Circuit\0V1\MCU\ #
#                    0V1_start\Debug\List\ -y --initializers_in_flash -z3    #
#                    --no_cse --no_inline --no_code_motion --no_cross_call   #
#                    --no_clustering --debug -DENABLE_BIT_DEFINITIONS -e -I  #
#                    "E:\Program Files\IAR Systems\Embedded Workbench        #
#                    3.2\avr\INC\" -I "E:\Program Files\IAR                  #
#                    Systems\Embedded Workbench 3.2\avr\INC\CLIB\"           #
#                    --eeprom_size 4096 H:\2_CalyxII\0_SuperDAC\0_Circuit\0V #
#                    1\MCU\0V1_start\App_0V1_start.c                         #
#    List file    =  H:\2_CalyxII\0_SuperDAC\0_Circuit\0V1\MCU\0V1_start\Deb #
#                    ug\List\App_0V1_start.lst                               #
#    Object file  =  H:\2_CalyxII\0_SuperDAC\0_Circuit\0V1\MCU\0V1_start\Deb #
#                    ug\Obj\App_0V1_start.r90                                #
#                                                                            #
#                                                                            #
##############################################################################

H:\2_CalyxII\0_SuperDAC\0_Circuit\0V1\MCU\0V1_start\App_0V1_start.c
      1          //2012.02.20
      2          
      3          // OCDEN, JTAGEN, CKOPT, SPIEN
      4          
      5          #include <iom128.h>
      6          #include <inavr.h>
      7          #include "InitBoard.c"

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near rom_add_pt
   \                     rom_add_pt:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near rom_cycle
   \                     rom_cycle:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near rom_address
   \                     rom_address:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near rom_data_cnt
   \                     rom_data_cnt:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near rom_data
   \                     rom_data:
   \   00000000                              DS 2

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near phase_data
   \                     phase_data:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for phase_data>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near interrupt_eicra
   \                     interrupt_eicra:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for interrupt_eicra>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near init_setting_check
   \                     init_setting_check:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near ess_automute
   \                     ess_automute:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near ess_lock_ck
   \                     ess_lock_ck:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near old_ess_automute
   \                     old_ess_automute:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near old_ess_lock_ck
   \                     old_ess_lock_ck:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near exMute
   \                     exMute:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near old_exMute
   \                     old_exMute:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near key_tmr
   \                     key_tmr:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near tmr_osc_ck
   \                     tmr_osc_ck:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near key_int_flag
   \                     key_int_flag:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near rom_tmr
   \                     rom_tmr:
   \   00000000                              DS 2

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near rom_save_flag
   \                     rom_save_flag:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for rom_save_flag>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near rom_save_flag2
   \                     rom_save_flag2:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for rom_save_flag2>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near Time_500us
   \                     Time_500us:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near Time_100ms
   \                     Time_100ms:
   \   00000000                              DS 1

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near dot_light_reg
   \                     dot_light_reg:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for dot_light_reg>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near ch_led_data
   \                     ch_led_data:
   \   00000000                              DS 1

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near ch_led_enable
   \                     ch_led_enable:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for ch_led_enable>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near sr_led_data
   \                     sr_led_data:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for sr_led_data>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near display_num
   \                     display_num:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for display_num>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near vol_dB
   \                     vol_dB:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for vol_dB>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near i2s_flag
   \                     i2s_flag:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for i2s_flag>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near usb_sr
   \                     usb_sr:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for usb_sr>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near button_data
   \                     button_data:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near filter_flag
   \                     filter_flag:
   \   00000000                              DS 1

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near mute_enable
   \                     mute_enable:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for mute_enable>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near key_func
   \                     key_func:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near key_func_tmr
   \                     key_func_tmr:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near key_condition
   \                     key_condition:
   \   00000000                              DS 1

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near es9018_reg10
   \                     es9018_reg10:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for es9018_reg10>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near es9018_lock
   \                     es9018_lock:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near es9018_lock_flag
   \                     es9018_lock_flag:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near dac_audio_timer
   \                     dac_audio_timer:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near sample_rate
   \                     sample_rate:
   \   00000000                              DS 2

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near min44
   \                     min44:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for min44>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near max44
   \                     max44:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for max44>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near min48
   \                     min48:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for min48>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near max48
   \                     max48:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for max48>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near min88
   \                     min88:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for min88>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near max88
   \                     max88:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for max88>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near min96
   \                     min96:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for min96>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near max96
   \                     max96:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for max96>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near min176
   \                     min176:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for min176>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near max176
   \                     max176:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for max176>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near min192
   \                     min192:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for min192>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned int __near max192
   \                     max192:
   \   00000000                              DS 2
   \   00000002                              REQUIRE `?<Initializer for max192>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near tmr_osc
   \                     tmr_osc:
   \   00000000                              DS 1

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near interface_ch
   \                     interface_ch:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for interface_ch>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near cs_audio_timer
   \                     cs_audio_timer:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near usb_audio_timer
   \                     usb_audio_timer:
   \   00000000                              DS 2

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near KeyReady
   \                     KeyReady:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for KeyReady>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near I2C_error
   \                     I2C_error:
   \   00000000                              DS 1

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near ch_name[8][6]
   \                     ch_name:
   \   00000000                              DS 48
   \   00000030                              REQUIRE `?<Initializer for ch_name>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near sr_name[7][6]
   \                     sr_name:
   \   00000000                              DS 42
   \   0000002A                              REQUIRE `?<Initializer for sr_name>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near filter_name[3][8]
   \                     filter_name:
   \   00000000                              DS 24
   \   00000018                              REQUIRE `?<Initializer for filter_name>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near phase_name[8]
   \                     phase_name:
   \   00000000                              DS 8
   \   00000008                              REQUIRE `?<Initializer for phase_name>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near normal_name[8]
   \                     normal_name:
   \   00000000                              DS 8
   \   00000008                              REQUIRE `?<Initializer for normal_name>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near ch_data
   \                     ch_data:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near sr_data
   \                     sr_data:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near filter_data
   \                     filter_data:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near inverse_data
   \                     inverse_data:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near dot_string[16]
   \                     dot_string:
   \   00000000                              DS 16

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near ess_volume[4]
   \                     ess_volume:
   \   00000000                              DS 4

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   long __near f1_coeff_st1[64]
   \                     f1_coeff_st1:
   \   00000000                              DS 256
   \   00000100                              REQUIRE `?<Initializer for f1_coeff_st1>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   long __near f1_coeff_st2[16]
   \                     f1_coeff_st2:
   \   00000000                              DS 64
   \   00000040                              REQUIRE `?<Initializer for f1_coeff_st2>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   long __near f2_coeff_st1[64]
   \                     f2_coeff_st1:
   \   00000000                              DS 256
   \   00000100                              REQUIRE `?<Initializer for f2_coeff_st1>`

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   long __near f2_coeff_st2[16]
   \                     f2_coeff_st2:
   \   00000000                              DS 64
   \   00000040                              REQUIRE `?<Initializer for f2_coeff_st2>`

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void DelayTime(unsigned int)
   \                     DelayTime:
   \                     ??DelayTime_0:
   \   00000000   0198                       MOVW    R19 : R18,R17 : R16
   \   00000002   0189                       MOVW    R17 : R16,R19 : R18
   \   00000004   5001                       SUBI    R16,1
   \   00000006   4010                       SBCI    R17,0
   \   00000008   2B23                       OR      R18,R19
   \   0000000A   F7D1                       BRNE    ??DelayTime_0
   \   0000000C   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void DelayTime_ms(unsigned int)
   \                     DelayTime_ms:
   \   00000000   ........                   CALL    ?PROLOGUE4_L09
   \   00000004   01D8                       MOVW    R27 : R26,R17 : R16
   \   00000006   E080                       LDI     R24,0
   \   00000008   C004                       RJMP    ??DelayTime_ms_0
   \                     ??DelayTime_ms_1:
   \   0000000A   E800                       LDI     R16,128
   \   0000000C   E31E                       LDI     R17,62
   \   0000000E   ....                       RCALL   DelayTime
   \   00000010   9583                       INC     R24
   \                     ??DelayTime_ms_0:
   \   00000012   018D                       MOVW    R17 : R16,R27 : R26
   \   00000014   5F0F                       SUBI    R16,255
   \   00000016   4F1F                       SBCI    R17,255
   \   00000018   E090                       LDI     R25,0
   \   0000001A   1708                       CP      R16,R24
   \   0000001C   0719                       CPC     R17,R25
   \   0000001E   F7A8                       BRCC    ??DelayTime_ms_1
   \   00000020   E0E4                       LDI     R30,4
   \   00000022   ........                   JMP     ?EPILOGUE_B4_L09

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near _porta
   \                     _porta:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near _portb
   \                     _portb:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near _portc
   \                     _portc:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near _portd
   \                     _portd:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near _porte
   \                     _porte:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near _portf
   \                     _portf:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near _portg
   \                     _portg:
   \   00000000                              DS 1

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void _outport(unsigned char, char)
   \                     _outport:
   \   00000000   5001                       SUBI    R16,1
   \   00000002   F069                       BREQ    ??_outport_0
   \   00000004   950A                       DEC     R16
   \   00000006   F089                       BREQ    ??_outport_1
   \   00000008   950A                       DEC     R16
   \   0000000A   F0A9                       BREQ    ??_outport_2
   \   0000000C   950A                       DEC     R16
   \   0000000E   F0C9                       BREQ    ??_outport_3
   \   00000010   950A                       DEC     R16
   \   00000012   F0E9                       BREQ    ??_outport_4
   \   00000014   950A                       DEC     R16
   \   00000016   F109                       BREQ    ??_outport_5
   \   00000018   950A                       DEC     R16
   \   0000001A   F131                       BREQ    ??_outport_6
   \   0000001C   9508                       RET
   \                     ??_outport_0:
   \   0000001E   9310....                   STS     _porta,R17
   \   00000022   9100....                   LDS     R16,_porta
   \   00000026   BB0B                       OUT     0x1B,R16
   \   00000028   9508                       RET
   \                     ??_outport_1:
   \   0000002A   9310....                   STS     _portb,R17
   \   0000002E   9100....                   LDS     R16,_portb
   \   00000032   BB08                       OUT     0x18,R16
   \   00000034   9508                       RET
   \                     ??_outport_2:
   \   00000036   9310....                   STS     _portc,R17
   \   0000003A   9100....                   LDS     R16,_portc
   \   0000003E   BB05                       OUT     0x15,R16
   \   00000040   9508                       RET
   \                     ??_outport_3:
   \   00000042   9310....                   STS     _portd,R17
   \   00000046   9100....                   LDS     R16,_portd
   \   0000004A   BB02                       OUT     0x12,R16
   \   0000004C   9508                       RET
   \                     ??_outport_4:
   \   0000004E   9310....                   STS     _porte,R17
   \   00000052   9100....                   LDS     R16,_porte
   \   00000056   B903                       OUT     0x03,R16
   \   00000058   9508                       RET
   \                     ??_outport_5:
   \   0000005A   9310....                   STS     _portf,R17
   \   0000005E   9100....                   LDS     R16,_portf
   \   00000062   93000062                   STS     98,R16
   \   00000066   9508                       RET
   \                     ??_outport_6:
   \   00000068   9310....                   STS     _portg,R17
   \   0000006C   9100....                   LDS     R16,_portg
   \   00000070   93000065                   STS     101,R16
   \   00000074   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc unsigned char _inport(unsigned char)
   \                     _inport:
   \   00000000   5001                       SUBI    R16,1
   \   00000002   F069                       BREQ    ??_inport_0
   \   00000004   950A                       DEC     R16
   \   00000006   F069                       BREQ    ??_inport_1
   \   00000008   950A                       DEC     R16
   \   0000000A   F069                       BREQ    ??_inport_2
   \   0000000C   950A                       DEC     R16
   \   0000000E   F069                       BREQ    ??_inport_3
   \   00000010   950A                       DEC     R16
   \   00000012   F069                       BREQ    ??_inport_4
   \   00000014   950A                       DEC     R16
   \   00000016   F069                       BREQ    ??_inport_5
   \   00000018   950A                       DEC     R16
   \   0000001A   F069                       BREQ    ??_inport_6
   \   0000001C   C00E                       RJMP    ??_inport_7
   \                     ??_inport_0:
   \   0000001E   B319                       IN      R17,0x19
   \   00000020   C00C                       RJMP    ??_inport_7
   \                     ??_inport_1:
   \   00000022   B316                       IN      R17,0x16
   \   00000024   C00A                       RJMP    ??_inport_7
   \                     ??_inport_2:
   \   00000026   B313                       IN      R17,0x13
   \   00000028   C008                       RJMP    ??_inport_7
   \                     ??_inport_3:
   \   0000002A   B310                       IN      R17,0x10
   \   0000002C   C006                       RJMP    ??_inport_7
   \                     ??_inport_4:
   \   0000002E   B111                       IN      R17,0x01
   \   00000030   C004                       RJMP    ??_inport_7
   \                     ??_inport_5:
   \   00000032   B110                       IN      R17,0x00
   \   00000034   C002                       RJMP    ??_inport_7
   \                     ??_inport_6:
   \   00000036   91100063                   LDS     R17,99
   \                     ??_inport_7:
   \   0000003A   2F01                       MOV     R16,R17
   \   0000003C   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc char _inbit(unsigned char, unsigned char)
   \                     _inbit:
   \   00000000   2F20                       MOV     R18,R16
   \   00000002   2F41                       MOV     R20,R17
   \   00000004   E000                       LDI     R16,0
   \   00000006   5021                       SUBI    R18,1
   \   00000008   F079                       BREQ    ??_inbit_0
   \   0000000A   952A                       DEC     R18
   \   0000000C   F0C9                       BREQ    ??_inbit_1
   \   0000000E   952A                       DEC     R18
   \   00000010   F119                       BREQ    ??_inbit_2
   \   00000012   952A                       DEC     R18
   \   00000014   F169                       BREQ    ??_inbit_3
   \   00000016   952A                       DEC     R18
   \   00000018   F1B9                       BREQ    ??_inbit_4
   \   0000001A   952A                       DEC     R18
   \   0000001C   F409                       BRNE    $+2+2
   \   0000001E   C040                       RJMP    ??_inbit_5
   \   00000020   952A                       DEC     R18
   \   00000022   F409                       BRNE    $+2+2
   \   00000024   C049                       RJMP    ??_inbit_6
   \   00000026   9508                       RET
   \                     ??_inbit_0:
   \   00000028   B329                       IN      R18,0x19
   \   0000002A   E001                       LDI     R16,1
   \   0000002C   E010                       LDI     R17,0
   \   0000002E   ........                   CALL    ?S_SHL_L02
   \   00000032   2302                       AND     R16,R18
   \   00000034   2300                       TST     R16
   \   00000036   F011                       BREQ    ??_inbit_7
   \   00000038   E001                       LDI     R16,1
   \   0000003A   9508                       RET
   \                     ??_inbit_7:
   \   0000003C   E000                       LDI     R16,0
   \   0000003E   9508                       RET
   \                     ??_inbit_1:
   \   00000040   B326                       IN      R18,0x16
   \   00000042   E001                       LDI     R16,1
   \   00000044   E010                       LDI     R17,0
   \   00000046   ........                   CALL    ?S_SHL_L02
   \   0000004A   2302                       AND     R16,R18
   \   0000004C   2300                       TST     R16
   \   0000004E   F011                       BREQ    ??_inbit_8
   \   00000050   E001                       LDI     R16,1
   \   00000052   9508                       RET
   \                     ??_inbit_8:
   \   00000054   E000                       LDI     R16,0
   \   00000056   9508                       RET
   \                     ??_inbit_2:
   \   00000058   B323                       IN      R18,0x13
   \   0000005A   E001                       LDI     R16,1
   \   0000005C   E010                       LDI     R17,0
   \   0000005E   ........                   CALL    ?S_SHL_L02
   \   00000062   2302                       AND     R16,R18
   \   00000064   2300                       TST     R16
   \   00000066   F011                       BREQ    ??_inbit_9
   \   00000068   E001                       LDI     R16,1
   \   0000006A   9508                       RET
   \                     ??_inbit_9:
   \   0000006C   E000                       LDI     R16,0
   \   0000006E   9508                       RET
   \                     ??_inbit_3:
   \   00000070   B320                       IN      R18,0x10
   \   00000072   E001                       LDI     R16,1
   \   00000074   E010                       LDI     R17,0
   \   00000076   ........                   CALL    ?S_SHL_L02
   \   0000007A   2302                       AND     R16,R18
   \   0000007C   2300                       TST     R16
   \   0000007E   F011                       BREQ    ??_inbit_10
   \   00000080   E001                       LDI     R16,1
   \   00000082   9508                       RET
   \                     ??_inbit_10:
   \   00000084   E000                       LDI     R16,0
   \   00000086   9508                       RET
   \                     ??_inbit_4:
   \   00000088   B121                       IN      R18,0x01
   \   0000008A   E001                       LDI     R16,1
   \   0000008C   E010                       LDI     R17,0
   \   0000008E   ........                   CALL    ?S_SHL_L02
   \   00000092   2302                       AND     R16,R18
   \   00000094   2300                       TST     R16
   \   00000096   F011                       BREQ    ??_inbit_11
   \   00000098   E001                       LDI     R16,1
   \   0000009A   9508                       RET
   \                     ??_inbit_11:
   \   0000009C   E000                       LDI     R16,0
   \   0000009E   9508                       RET
   \                     ??_inbit_5:
   \   000000A0   B120                       IN      R18,0x00
   \   000000A2   E001                       LDI     R16,1
   \   000000A4   E010                       LDI     R17,0
   \   000000A6   ........                   CALL    ?S_SHL_L02
   \   000000AA   2302                       AND     R16,R18
   \   000000AC   2300                       TST     R16
   \   000000AE   F011                       BREQ    ??_inbit_12
   \   000000B0   E001                       LDI     R16,1
   \   000000B2   9508                       RET
   \                     ??_inbit_12:
   \   000000B4   E000                       LDI     R16,0
   \   000000B6   9508                       RET
   \                     ??_inbit_6:
   \   000000B8   91200063                   LDS     R18,99
   \   000000BC   E001                       LDI     R16,1
   \   000000BE   E010                       LDI     R17,0
   \   000000C0   ........                   CALL    ?S_SHL_L02
   \   000000C4   2302                       AND     R16,R18
   \   000000C6   2300                       TST     R16
   \   000000C8   F011                       BREQ    ??_inbit_13
   \   000000CA   E001                       LDI     R16,1
   \   000000CC   9508                       RET
   \                     ??_inbit_13:
   \   000000CE   E000                       LDI     R16,0
   \   000000D0   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void _outbit(unsigned char, unsigned char, char)
   \                     _outbit:
   \   00000000   2F41                       MOV     R20,R17
   \   00000002   5001                       SUBI    R16,1
   \   00000004   F091                       BREQ    ??_outbit_0
   \   00000006   950A                       DEC     R16
   \   00000008   F151                       BREQ    ??_outbit_1
   \   0000000A   950A                       DEC     R16
   \   0000000C   F409                       BRNE    $+2+2
   \   0000000E   C041                       RJMP    ??_outbit_2
   \   00000010   950A                       DEC     R16
   \   00000012   F409                       BRNE    $+2+2
   \   00000014   C058                       RJMP    ??_outbit_3
   \   00000016   950A                       DEC     R16
   \   00000018   F409                       BRNE    $+2+2
   \   0000001A   C06F                       RJMP    ??_outbit_4
   \   0000001C   950A                       DEC     R16
   \   0000001E   F409                       BRNE    $+2+2
   \   00000020   C086                       RJMP    ??_outbit_5
   \   00000022   950A                       DEC     R16
   \   00000024   F409                       BRNE    $+2+2
   \   00000026   C09E                       RJMP    ??_outbit_6
   \   00000028   9508                       RET
   \                     ??_outbit_0:
   \   0000002A   2322                       TST     R18
   \   0000002C   F051                       BREQ    ??_outbit_7
   \   0000002E   E001                       LDI     R16,1
   \   00000030   E010                       LDI     R17,0
   \   00000032   ........                   CALL    ?S_SHL_L02
   \   00000036   ....                       LDI     R30,LOW(_porta)
   \   00000038   ....                       LDI     R31,(_porta) >> 8
   \   0000003A   8110                       LD      R17,Z
   \   0000003C   2B10                       OR      R17,R16
   \   0000003E   8310                       ST      Z,R17
   \   00000040   C00A                       RJMP    ??_outbit_8
   \                     ??_outbit_7:
   \   00000042   E001                       LDI     R16,1
   \   00000044   E010                       LDI     R17,0
   \   00000046   ........                   CALL    ?S_SHL_L02
   \   0000004A   9500                       COM     R16
   \   0000004C   ....                       LDI     R30,LOW(_porta)
   \   0000004E   ....                       LDI     R31,(_porta) >> 8
   \   00000050   8110                       LD      R17,Z
   \   00000052   2310                       AND     R17,R16
   \   00000054   8310                       ST      Z,R17
   \                     ??_outbit_8:
   \   00000056   9100....                   LDS     R16,_porta
   \   0000005A   BB0B                       OUT     0x1B,R16
   \   0000005C   9508                       RET
   \                     ??_outbit_1:
   \   0000005E   2322                       TST     R18
   \   00000060   F051                       BREQ    ??_outbit_9
   \   00000062   E001                       LDI     R16,1
   \   00000064   E010                       LDI     R17,0
   \   00000066   ........                   CALL    ?S_SHL_L02
   \   0000006A   ....                       LDI     R30,LOW(_portb)
   \   0000006C   ....                       LDI     R31,(_portb) >> 8
   \   0000006E   8110                       LD      R17,Z
   \   00000070   2B10                       OR      R17,R16
   \   00000072   8310                       ST      Z,R17
   \   00000074   C00A                       RJMP    ??_outbit_10
   \                     ??_outbit_9:
   \   00000076   E001                       LDI     R16,1
   \   00000078   E010                       LDI     R17,0
   \   0000007A   ........                   CALL    ?S_SHL_L02
   \   0000007E   9500                       COM     R16
   \   00000080   ....                       LDI     R30,LOW(_portb)
   \   00000082   ....                       LDI     R31,(_portb) >> 8
   \   00000084   8110                       LD      R17,Z
   \   00000086   2310                       AND     R17,R16
   \   00000088   8310                       ST      Z,R17
   \                     ??_outbit_10:
   \   0000008A   9100....                   LDS     R16,_portb
   \   0000008E   BB08                       OUT     0x18,R16
   \   00000090   9508                       RET
   \                     ??_outbit_2:
   \   00000092   2322                       TST     R18
   \   00000094   F051                       BREQ    ??_outbit_11
   \   00000096   E001                       LDI     R16,1
   \   00000098   E010                       LDI     R17,0
   \   0000009A   ........                   CALL    ?S_SHL_L02
   \   0000009E   ....                       LDI     R30,LOW(_portc)
   \   000000A0   ....                       LDI     R31,(_portc) >> 8
   \   000000A2   8110                       LD      R17,Z
   \   000000A4   2B10                       OR      R17,R16
   \   000000A6   8310                       ST      Z,R17
   \   000000A8   C00A                       RJMP    ??_outbit_12
   \                     ??_outbit_11:
   \   000000AA   E001                       LDI     R16,1
   \   000000AC   E010                       LDI     R17,0
   \   000000AE   ........                   CALL    ?S_SHL_L02
   \   000000B2   9500                       COM     R16
   \   000000B4   ....                       LDI     R30,LOW(_portc)
   \   000000B6   ....                       LDI     R31,(_portc) >> 8
   \   000000B8   8110                       LD      R17,Z
   \   000000BA   2310                       AND     R17,R16
   \   000000BC   8310                       ST      Z,R17
   \                     ??_outbit_12:
   \   000000BE   9100....                   LDS     R16,_portc
   \   000000C2   BB05                       OUT     0x15,R16
   \   000000C4   9508                       RET
   \                     ??_outbit_3:
   \   000000C6   2322                       TST     R18
   \   000000C8   F051                       BREQ    ??_outbit_13
   \   000000CA   E001                       LDI     R16,1
   \   000000CC   E010                       LDI     R17,0
   \   000000CE   ........                   CALL    ?S_SHL_L02
   \   000000D2   ....                       LDI     R30,LOW(_portd)
   \   000000D4   ....                       LDI     R31,(_portd) >> 8
   \   000000D6   8110                       LD      R17,Z
   \   000000D8   2B10                       OR      R17,R16
   \   000000DA   8310                       ST      Z,R17
   \   000000DC   C00A                       RJMP    ??_outbit_14
   \                     ??_outbit_13:
   \   000000DE   E001                       LDI     R16,1
   \   000000E0   E010                       LDI     R17,0
   \   000000E2   ........                   CALL    ?S_SHL_L02
   \   000000E6   9500                       COM     R16
   \   000000E8   ....                       LDI     R30,LOW(_portd)
   \   000000EA   ....                       LDI     R31,(_portd) >> 8
   \   000000EC   8110                       LD      R17,Z
   \   000000EE   2310                       AND     R17,R16
   \   000000F0   8310                       ST      Z,R17
   \                     ??_outbit_14:
   \   000000F2   9100....                   LDS     R16,_portd
   \   000000F6   BB02                       OUT     0x12,R16
   \   000000F8   9508                       RET
   \                     ??_outbit_4:
   \   000000FA   2322                       TST     R18
   \   000000FC   F051                       BREQ    ??_outbit_15
   \   000000FE   E001                       LDI     R16,1
   \   00000100   E010                       LDI     R17,0
   \   00000102   ........                   CALL    ?S_SHL_L02
   \   00000106   ....                       LDI     R30,LOW(_porte)
   \   00000108   ....                       LDI     R31,(_porte) >> 8
   \   0000010A   8110                       LD      R17,Z
   \   0000010C   2B10                       OR      R17,R16
   \   0000010E   8310                       ST      Z,R17
   \   00000110   C00A                       RJMP    ??_outbit_16
   \                     ??_outbit_15:
   \   00000112   E001                       LDI     R16,1
   \   00000114   E010                       LDI     R17,0
   \   00000116   ........                   CALL    ?S_SHL_L02
   \   0000011A   9500                       COM     R16
   \   0000011C   ....                       LDI     R30,LOW(_porte)
   \   0000011E   ....                       LDI     R31,(_porte) >> 8
   \   00000120   8110                       LD      R17,Z
   \   00000122   2310                       AND     R17,R16
   \   00000124   8310                       ST      Z,R17
   \                     ??_outbit_16:
   \   00000126   9100....                   LDS     R16,_porte
   \   0000012A   B903                       OUT     0x03,R16
   \   0000012C   9508                       RET
   \                     ??_outbit_5:
   \   0000012E   2322                       TST     R18
   \   00000130   F051                       BREQ    ??_outbit_17
   \   00000132   E001                       LDI     R16,1
   \   00000134   E010                       LDI     R17,0
   \   00000136   ........                   CALL    ?S_SHL_L02
   \   0000013A   ....                       LDI     R30,LOW(_portf)
   \   0000013C   ....                       LDI     R31,(_portf) >> 8
   \   0000013E   8110                       LD      R17,Z
   \   00000140   2B10                       OR      R17,R16
   \   00000142   8310                       ST      Z,R17
   \   00000144   C00A                       RJMP    ??_outbit_18
   \                     ??_outbit_17:
   \   00000146   E001                       LDI     R16,1
   \   00000148   E010                       LDI     R17,0
   \   0000014A   ........                   CALL    ?S_SHL_L02
   \   0000014E   9500                       COM     R16
   \   00000150   ....                       LDI     R30,LOW(_portf)
   \   00000152   ....                       LDI     R31,(_portf) >> 8
   \   00000154   8110                       LD      R17,Z
   \   00000156   2310                       AND     R17,R16
   \   00000158   8310                       ST      Z,R17
   \                     ??_outbit_18:
   \   0000015A   9100....                   LDS     R16,_portf
   \   0000015E   93000062                   STS     98,R16
   \   00000162   9508                       RET
   \                     ??_outbit_6:
   \   00000164   2322                       TST     R18
   \   00000166   F051                       BREQ    ??_outbit_19
   \   00000168   E001                       LDI     R16,1
   \   0000016A   E010                       LDI     R17,0
   \   0000016C   ........                   CALL    ?S_SHL_L02
   \   00000170   ....                       LDI     R30,LOW(_portg)
   \   00000172   ....                       LDI     R31,(_portg) >> 8
   \   00000174   8110                       LD      R17,Z
   \   00000176   2B10                       OR      R17,R16
   \   00000178   8310                       ST      Z,R17
   \   0000017A   C00A                       RJMP    ??_outbit_20
   \                     ??_outbit_19:
   \   0000017C   E001                       LDI     R16,1
   \   0000017E   E010                       LDI     R17,0
   \   00000180   ........                   CALL    ?S_SHL_L02
   \   00000184   9500                       COM     R16
   \   00000186   ....                       LDI     R30,LOW(_portg)
   \   00000188   ....                       LDI     R31,(_portg) >> 8
   \   0000018A   8110                       LD      R17,Z
   \   0000018C   2310                       AND     R17,R16
   \   0000018E   8310                       ST      Z,R17
   \                     ??_outbit_20:
   \   00000190   9100....                   LDS     R16,_portg
   \   00000194   93000065                   STS     101,R16
   \   00000198   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void _port_init(unsigned char, unsigned char)
   \                     _port_init:
   \   00000000   5001                       SUBI    R16,1
   \   00000002   F069                       BREQ    ??_port_init_0
   \   00000004   950A                       DEC     R16
   \   00000006   F069                       BREQ    ??_port_init_1
   \   00000008   950A                       DEC     R16
   \   0000000A   F069                       BREQ    ??_port_init_2
   \   0000000C   950A                       DEC     R16
   \   0000000E   F069                       BREQ    ??_port_init_3
   \   00000010   950A                       DEC     R16
   \   00000012   F069                       BREQ    ??_port_init_4
   \   00000014   950A                       DEC     R16
   \   00000016   F069                       BREQ    ??_port_init_5
   \   00000018   950A                       DEC     R16
   \   0000001A   F071                       BREQ    ??_port_init_6
   \   0000001C   9508                       RET
   \                     ??_port_init_0:
   \   0000001E   BB1A                       OUT     0x1A,R17
   \   00000020   9508                       RET
   \                     ??_port_init_1:
   \   00000022   BB17                       OUT     0x17,R17
   \   00000024   9508                       RET
   \                     ??_port_init_2:
   \   00000026   BB14                       OUT     0x14,R17
   \   00000028   9508                       RET
   \                     ??_port_init_3:
   \   0000002A   BB11                       OUT     0x11,R17
   \   0000002C   9508                       RET
   \                     ??_port_init_4:
   \   0000002E   B912                       OUT     0x02,R17
   \   00000030   9508                       RET
   \                     ??_port_init_5:
   \   00000032   93100061                   STS     97,R17
   \   00000036   9508                       RET
   \                     ??_port_init_6:
   \   00000038   93100064                   STS     100,R17
   \   0000003C   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void _bit_init(unsigned char, unsigned char, char)
   \                     _bit_init:
   \   00000000   2F41                       MOV     R20,R17
   \   00000002   5001                       SUBI    R16,1
   \   00000004   F089                       BREQ    ??_bit_init_0
   \   00000006   950A                       DEC     R16
   \   00000008   F111                       BREQ    ??_bit_init_1
   \   0000000A   950A                       DEC     R16
   \   0000000C   F199                       BREQ    ??_bit_init_2
   \   0000000E   950A                       DEC     R16
   \   00000010   F409                       BRNE    $+2+2
   \   00000012   C043                       RJMP    ??_bit_init_3
   \   00000014   950A                       DEC     R16
   \   00000016   F409                       BRNE    $+2+2
   \   00000018   C053                       RJMP    ??_bit_init_4
   \   0000001A   950A                       DEC     R16
   \   0000001C   F409                       BRNE    $+2+2
   \   0000001E   C063                       RJMP    ??_bit_init_5
   \   00000020   950A                       DEC     R16
   \   00000022   F409                       BRNE    $+2+2
   \   00000024   C077                       RJMP    ??_bit_init_6
   \   00000026   9508                       RET
   \                     ??_bit_init_0:
   \   00000028   2322                       TST     R18
   \   0000002A   F041                       BREQ    ??_bit_init_7
   \   0000002C   E001                       LDI     R16,1
   \   0000002E   E010                       LDI     R17,0
   \   00000030   ........                   CALL    ?S_SHL_L02
   \   00000034   B31A                       IN      R17,0x1A
   \   00000036   2B10                       OR      R17,R16
   \   00000038   BB1A                       OUT     0x1A,R17
   \   0000003A   9508                       RET
   \                     ??_bit_init_7:
   \   0000003C   E001                       LDI     R16,1
   \   0000003E   E010                       LDI     R17,0
   \   00000040   ........                   CALL    ?S_SHL_L02
   \   00000044   9500                       COM     R16
   \   00000046   B31A                       IN      R17,0x1A
   \   00000048   2310                       AND     R17,R16
   \   0000004A   BB1A                       OUT     0x1A,R17
   \   0000004C   9508                       RET
   \                     ??_bit_init_1:
   \   0000004E   2322                       TST     R18
   \   00000050   F041                       BREQ    ??_bit_init_8
   \   00000052   E001                       LDI     R16,1
   \   00000054   E010                       LDI     R17,0
   \   00000056   ........                   CALL    ?S_SHL_L02
   \   0000005A   B317                       IN      R17,0x17
   \   0000005C   2B10                       OR      R17,R16
   \   0000005E   BB17                       OUT     0x17,R17
   \   00000060   9508                       RET
   \                     ??_bit_init_8:
   \   00000062   E001                       LDI     R16,1
   \   00000064   E010                       LDI     R17,0
   \   00000066   ........                   CALL    ?S_SHL_L02
   \   0000006A   9500                       COM     R16
   \   0000006C   B317                       IN      R17,0x17
   \   0000006E   2310                       AND     R17,R16
   \   00000070   BB17                       OUT     0x17,R17
   \   00000072   9508                       RET
   \                     ??_bit_init_2:
   \   00000074   2322                       TST     R18
   \   00000076   F041                       BREQ    ??_bit_init_9
   \   00000078   E001                       LDI     R16,1
   \   0000007A   E010                       LDI     R17,0
   \   0000007C   ........                   CALL    ?S_SHL_L02
   \   00000080   B314                       IN      R17,0x14
   \   00000082   2B10                       OR      R17,R16
   \   00000084   BB14                       OUT     0x14,R17
   \   00000086   9508                       RET
   \                     ??_bit_init_9:
   \   00000088   E001                       LDI     R16,1
   \   0000008A   E010                       LDI     R17,0
   \   0000008C   ........                   CALL    ?S_SHL_L02
   \   00000090   9500                       COM     R16
   \   00000092   B314                       IN      R17,0x14
   \   00000094   2310                       AND     R17,R16
   \   00000096   BB14                       OUT     0x14,R17
   \   00000098   9508                       RET
   \                     ??_bit_init_3:
   \   0000009A   2322                       TST     R18
   \   0000009C   F041                       BREQ    ??_bit_init_10
   \   0000009E   E001                       LDI     R16,1
   \   000000A0   E010                       LDI     R17,0
   \   000000A2   ........                   CALL    ?S_SHL_L02
   \   000000A6   B311                       IN      R17,0x11
   \   000000A8   2B10                       OR      R17,R16
   \   000000AA   BB11                       OUT     0x11,R17
   \   000000AC   9508                       RET
   \                     ??_bit_init_10:
   \   000000AE   E001                       LDI     R16,1
   \   000000B0   E010                       LDI     R17,0
   \   000000B2   ........                   CALL    ?S_SHL_L02
   \   000000B6   9500                       COM     R16
   \   000000B8   B311                       IN      R17,0x11
   \   000000BA   2310                       AND     R17,R16
   \   000000BC   BB11                       OUT     0x11,R17
   \   000000BE   9508                       RET
   \                     ??_bit_init_4:
   \   000000C0   2322                       TST     R18
   \   000000C2   F041                       BREQ    ??_bit_init_11
   \   000000C4   E001                       LDI     R16,1
   \   000000C6   E010                       LDI     R17,0
   \   000000C8   ........                   CALL    ?S_SHL_L02
   \   000000CC   B112                       IN      R17,0x02
   \   000000CE   2B10                       OR      R17,R16
   \   000000D0   B912                       OUT     0x02,R17
   \   000000D2   9508                       RET
   \                     ??_bit_init_11:
   \   000000D4   E001                       LDI     R16,1
   \   000000D6   E010                       LDI     R17,0
   \   000000D8   ........                   CALL    ?S_SHL_L02
   \   000000DC   9500                       COM     R16
   \   000000DE   B112                       IN      R17,0x02
   \   000000E0   2310                       AND     R17,R16
   \   000000E2   B912                       OUT     0x02,R17
   \   000000E4   9508                       RET
   \                     ??_bit_init_5:
   \   000000E6   2322                       TST     R18
   \   000000E8   F051                       BREQ    ??_bit_init_12
   \   000000EA   E001                       LDI     R16,1
   \   000000EC   E010                       LDI     R17,0
   \   000000EE   ........                   CALL    ?S_SHL_L02
   \   000000F2   91100061                   LDS     R17,97
   \   000000F6   2B10                       OR      R17,R16
   \   000000F8   93100061                   STS     97,R17
   \   000000FC   9508                       RET
   \                     ??_bit_init_12:
   \   000000FE   E001                       LDI     R16,1
   \   00000100   E010                       LDI     R17,0
   \   00000102   ........                   CALL    ?S_SHL_L02
   \   00000106   9500                       COM     R16
   \   00000108   91100061                   LDS     R17,97
   \   0000010C   2310                       AND     R17,R16
   \   0000010E   93100061                   STS     97,R17
   \   00000112   9508                       RET
   \                     ??_bit_init_6:
   \   00000114   2322                       TST     R18
   \   00000116   F051                       BREQ    ??_bit_init_13
   \   00000118   E001                       LDI     R16,1
   \   0000011A   E010                       LDI     R17,0
   \   0000011C   ........                   CALL    ?S_SHL_L02
   \   00000120   91100064                   LDS     R17,100
   \   00000124   2B10                       OR      R17,R16
   \   00000126   93100064                   STS     100,R17
   \   0000012A   9508                       RET
   \                     ??_bit_init_13:
   \   0000012C   E001                       LDI     R16,1
   \   0000012E   E010                       LDI     R17,0
   \   00000130   ........                   CALL    ?S_SHL_L02
   \   00000134   9500                       COM     R16
   \   00000136   91100064                   LDS     R17,100
   \   0000013A   2310                       AND     R17,R16
   \   0000013C   93100064                   STS     100,R17
   \   00000140   9508                       RET

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near inByte
   \                     inByte:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near grAck
   \                     grAck:
   \   00000000                              DS 1

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void I2C_START()
   \                     I2C_START:
   \   00000000   9A91                       SBI     0x12,0x01
   \   00000002   9A90                       SBI     0x12,0x00
   \   00000004   E00A                       LDI     R16,10
   \   00000006   E010                       LDI     R17,0
   \   00000008   ....                       RCALL   DelayTime
   \   0000000A   9891                       CBI     0x12,0x01
   \   0000000C   E208                       LDI     R16,40
   \   0000000E   E010                       LDI     R17,0
   \   00000010   ....                       RCALL   DelayTime
   \   00000012   9890                       CBI     0x12,0x00
   \   00000014   E906                       LDI     R16,150
   \   00000016   E010                       LDI     R17,0
   \   00000018   ....                       RCALL   DelayTime
   \   0000001A   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void I2C_STOP()
   \                     I2C_STOP:
   \   00000000   E906                       LDI     R16,150
   \   00000002   E010                       LDI     R17,0
   \   00000004   ....                       RCALL   DelayTime
   \   00000006   9891                       CBI     0x12,0x01
   \   00000008   E00A                       LDI     R16,10
   \   0000000A   E010                       LDI     R17,0
   \   0000000C   ....                       RCALL   DelayTime
   \   0000000E   9A90                       SBI     0x12,0x00
   \   00000010   E208                       LDI     R16,40
   \   00000012   E010                       LDI     R17,0
   \   00000014   ....                       RCALL   DelayTime
   \   00000016   9A91                       SBI     0x12,0x01
   \   00000018   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc unsigned char I2C_SHOUT(unsigned char)
   \                     I2C_SHOUT:
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
   \   00000004   2F90                       MOV     R25,R16
   \   00000006   E080                       LDI     R24,0
   \   00000008   C00B                       RJMP    ??I2C_SHOUT_0
   \                     ??I2C_SHOUT_1:
   \   0000000A   E000                       LDI     R16,0
   \                     ??I2C_SHOUT_2:
   \   0000000C   FB00                       BST     R16,0
   \   0000000E   B302                       IN      R16,0x12
   \   00000010   F901                       BLD     R16,1
   \   00000012   BB02                       OUT     0x12,R16
   \   00000014   0F99                       LSL     R25
   \   00000016   9A90                       SBI     0x12,0x00
   \   00000018   E00A                       LDI     R16,10
   \   0000001A   E010                       LDI     R17,0
   \   0000001C   ....                       RCALL   DelayTime
   \   0000001E   9583                       INC     R24
   \                     ??I2C_SHOUT_0:
   \   00000020   3088                       CPI     R24,8
   \   00000022   F440                       BRCC    ??I2C_SHOUT_3
   \   00000024   9890                       CBI     0x12,0x00
   \   00000026   E00A                       LDI     R16,10
   \   00000028   E010                       LDI     R17,0
   \   0000002A   ....                       RCALL   DelayTime
   \   0000002C   FB97                       BST     R25,7
   \   0000002E   F76E                       BRTC    ??I2C_SHOUT_1
   \   00000030   E001                       LDI     R16,1
   \   00000032   CFEC                       RJMP    ??I2C_SHOUT_2
   \                     ??I2C_SHOUT_3:
   \   00000034   9890                       CBI     0x12,0x00
   \   00000036   E104                       LDI     R16,20
   \   00000038   E010                       LDI     R17,0
   \   0000003A   ....                       RCALL   DelayTime
   \   0000003C   9889                       CBI     0x11,0x01
   \   0000003E   9A91                       SBI     0x12,0x01
   \   00000040   E00A                       LDI     R16,10
   \   00000042   E010                       LDI     R17,0
   \   00000044   ....                       RCALL   DelayTime
   \   00000046   9B81                       SBIS    0x10,0x01
   \   00000048   C002                       RJMP    ??I2C_SHOUT_4
   \   0000004A   E081                       LDI     R24,1
   \   0000004C   C001                       RJMP    ??I2C_SHOUT_5
   \                     ??I2C_SHOUT_4:
   \   0000004E   E080                       LDI     R24,0
   \                     ??I2C_SHOUT_5:
   \   00000050   2F08                       MOV     R16,R24
   \   00000052   FD00                       SBRC    R16,0
   \   00000054   9A91                       SBI     0x12,0x01
   \                     ??I2C_SHOUT_6:
   \   00000056   FF00                       SBRS    R16,0
   \   00000058   9891                       CBI     0x12,0x01
   \                     ??I2C_SHOUT_7:
   \   0000005A   E104                       LDI     R16,20
   \   0000005C   E010                       LDI     R17,0
   \   0000005E   ....                       RCALL   DelayTime
   \   00000060   9A90                       SBI     0x12,0x00
   \   00000062   E10E                       LDI     R16,30
   \   00000064   E010                       LDI     R17,0
   \   00000066   ....                       RCALL   DelayTime
   \   00000068   9890                       CBI     0x12,0x00
   \   0000006A   9A89                       SBI     0x11,0x01
   \   0000006C   E604                       LDI     R16,100
   \   0000006E   E010                       LDI     R17,0
   \   00000070   ....                       RCALL   DelayTime
   \   00000072   2F08                       MOV     R16,R24
   \   00000074   9189                       LD      R24,Y+
   \   00000076   9199                       LD      R25,Y+
   \   00000078   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void I2C_SHIN(unsigned char)
   \                     I2C_SHIN:
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
   \   00000004   2F90                       MOV     R25,R16
   \   00000006   E000                       LDI     R16,0
   \   00000008   9300....                   STS     inByte,R16
   \   0000000C   E000                       LDI     R16,0
   \   0000000E   9300....                   STS     grAck,R16
   \   00000012   E00A                       LDI     R16,10
   \   00000014   E010                       LDI     R17,0
   \   00000016   ....                       RCALL   DelayTime
   \   00000018   9889                       CBI     0x11,0x01
   \   0000001A   9A91                       SBI     0x12,0x01
   \   0000001C   E00A                       LDI     R16,10
   \   0000001E   E010                       LDI     R17,0
   \   00000020   ....                       RCALL   DelayTime
   \   00000022   E080                       LDI     R24,0
   \   00000024   C012                       RJMP    ??I2C_SHIN_0
   \                     ??I2C_SHIN_1:
   \   00000026   E000                       LDI     R16,0
   \                     ??I2C_SHIN_2:
   \   00000028   ....                       LDI     R30,LOW(inByte)
   \   0000002A   ....                       LDI     R31,(inByte) >> 8
   \   0000002C   8110                       LD      R17,Z
   \   0000002E   2B10                       OR      R17,R16
   \   00000030   8310                       ST      Z,R17
   \   00000032   3087                       CPI     R24,7
   \   00000034   F428                       BRCC    ??I2C_SHIN_3
   \   00000036   9100....                   LDS     R16,inByte
   \   0000003A   0F00                       LSL     R16
   \   0000003C   9300....                   STS     inByte,R16
   \                     ??I2C_SHIN_3:
   \   00000040   9A90                       SBI     0x12,0x00
   \   00000042   E00A                       LDI     R16,10
   \   00000044   E010                       LDI     R17,0
   \   00000046   ....                       RCALL   DelayTime
   \   00000048   9583                       INC     R24
   \                     ??I2C_SHIN_0:
   \   0000004A   3088                       CPI     R24,8
   \   0000004C   F440                       BRCC    ??I2C_SHIN_4
   \   0000004E   9890                       CBI     0x12,0x00
   \   00000050   E00A                       LDI     R16,10
   \   00000052   E010                       LDI     R17,0
   \   00000054   ....                       RCALL   DelayTime
   \   00000056   9B81                       SBIS    0x10,0x01
   \   00000058   CFE6                       RJMP    ??I2C_SHIN_1
   \   0000005A   E001                       LDI     R16,1
   \   0000005C   CFE5                       RJMP    ??I2C_SHIN_2
   \                     ??I2C_SHIN_4:
   \   0000005E   9890                       CBI     0x12,0x00
   \   00000060   E10E                       LDI     R16,30
   \   00000062   E010                       LDI     R17,0
   \   00000064   ....                       RCALL   DelayTime
   \   00000066   9A89                       SBI     0x11,0x01
   \   00000068   9891                       CBI     0x12,0x01
   \   0000006A   2399                       TST     R25
   \   0000006C   F421                       BRNE    ??I2C_SHIN_5
   \   0000006E   E000                       LDI     R16,0
   \   00000070   9300....                   STS     grAck,R16
   \   00000074   C003                       RJMP    ??I2C_SHIN_6
   \                     ??I2C_SHIN_5:
   \   00000076   E001                       LDI     R16,1
   \   00000078   9300....                   STS     grAck,R16
   \                     ??I2C_SHIN_6:
   \   0000007C   ....                       LDI     R30,LOW(grAck)
   \   0000007E   ....                       LDI     R31,(grAck) >> 8
   \   00000080   8100                       LD      R16,Z
   \   00000082   FD00                       SBRC    R16,0
   \   00000084   9A91                       SBI     0x12,0x01
   \                     ??I2C_SHIN_7:
   \   00000086   FF00                       SBRS    R16,0
   \   00000088   9891                       CBI     0x12,0x01
   \                     ??I2C_SHIN_8:
   \   0000008A   E104                       LDI     R16,20
   \   0000008C   E010                       LDI     R17,0
   \   0000008E   ....                       RCALL   DelayTime
   \   00000090   9A90                       SBI     0x12,0x00
   \   00000092   E10E                       LDI     R16,30
   \   00000094   E010                       LDI     R17,0
   \   00000096   ....                       RCALL   DelayTime
   \   00000098   9890                       CBI     0x12,0x00
   \   0000009A   E604                       LDI     R16,100
   \   0000009C   E010                       LDI     R17,0
   \   0000009E   ....                       RCALL   DelayTime
   \   000000A0   9189                       LD      R24,Y+
   \   000000A2   9199                       LD      R25,Y+
   \   000000A4   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void I2C_Write(unsigned char, unsigned char, unsigned char)
   \                     I2C_Write:
   \   00000000   ........                   CALL    ?PROLOGUE3_L09
   \   00000004   2FA0                       MOV     R26,R16
   \   00000006   2F81                       MOV     R24,R17
   \   00000008   2F92                       MOV     R25,R18
   \   0000000A   ....                       RCALL   I2C_START
   \   0000000C   2F0A                       MOV     R16,R26
   \   0000000E   ....                       RCALL   I2C_SHOUT
   \   00000010   2F08                       MOV     R16,R24
   \   00000012   ....                       RCALL   I2C_SHOUT
   \   00000014   2F09                       MOV     R16,R25
   \   00000016   ....                       RCALL   I2C_SHOUT
   \   00000018   ....                       RCALL   I2C_STOP
   \   0000001A   E0E3                       LDI     R30,3
   \   0000001C   ........                   JMP     ?EPILOGUE_B3_L09

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc unsigned char I2C_Read(unsigned char, unsigned char)
   \                     I2C_Read:
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
   \   00000004   2F80                       MOV     R24,R16
   \   00000006   2F91                       MOV     R25,R17
   \   00000008   ....                       RCALL   I2C_START
   \   0000000A   2F08                       MOV     R16,R24
   \   0000000C   ....                       RCALL   I2C_SHOUT
   \   0000000E   2F09                       MOV     R16,R25
   \   00000010   ....                       RCALL   I2C_SHOUT
   \   00000012   ....                       RCALL   I2C_STOP
   \   00000014   ....                       RCALL   I2C_START
   \   00000016   9583                       INC     R24
   \   00000018   2F08                       MOV     R16,R24
   \   0000001A   ....                       RCALL   I2C_SHOUT
   \   0000001C   E001                       LDI     R16,1
   \   0000001E   ....                       RCALL   I2C_SHIN
   \   00000020   9180....                   LDS     R24,inByte
   \   00000024   ....                       RCALL   I2C_STOP
   \   00000026   2F08                       MOV     R16,R24
   \   00000028   9189                       LD      R24,Y+
   \   0000002A   9199                       LD      R25,Y+
   \   0000002C   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void rom_I2C_Write(unsigned int, unsigned char)
   \                     rom_I2C_Write:
   \   00000000   01A8                       MOVW    R21 : R20,R17 : R16
   \   00000002   0F44                       LSL     R20
   \   00000004   2F45                       MOV     R20,R21
   \   00000006   1F44                       ROL     R20
   \   00000008   704E                       ANDI    R20,0x0E
   \   0000000A   5640                       SUBI    R20,96
   \   0000000C   2F10                       MOV     R17,R16
   \   0000000E   2F04                       MOV     R16,R20
   \   00000010   ....                       RCALL   I2C_Write
   \   00000012   E005                       LDI     R16,5
   \   00000014   E010                       LDI     R17,0
   \   00000016   ....                       RCALL   DelayTime_ms
   \   00000018   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc unsigned char rom_I2C_Read(unsigned int)
   \                     rom_I2C_Read:
   \   00000000   0198                       MOVW    R19 : R18,R17 : R16
   \   00000002   0F22                       LSL     R18
   \   00000004   2F23                       MOV     R18,R19
   \   00000006   1F22                       ROL     R18
   \   00000008   702E                       ANDI    R18,0x0E
   \   0000000A   5620                       SUBI    R18,96
   \   0000000C   2F10                       MOV     R17,R16
   \   0000000E   2F02                       MOV     R16,R18
   \   00000010   ....                       RCALL   I2C_Read
   \   00000012   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void dot_matrix_clear()
   \                     dot_matrix_clear:
   \   00000000   9897                       CBI     0x12,0x07
   \   00000002   E000                       LDI     R16,0
   \   00000004   9300....                   STS     dot_light_reg,R16
   \   00000008   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void dot_string_digit()
   \                     dot_string_digit:
   \   00000000   ........                   CALL    ?PROLOGUE3_L09
   \   00000004   E080                       LDI     R24,0
   \   00000006   9A97                       SBI     0x12,0x07
   \   00000008   91000062                   LDS     R16,98
   \   0000000C   6008                       ORI     R16,0x08
   \   0000000E   93000062                   STS     98,R16
   \   00000012   E090                       LDI     R25,0
   \   00000014   C005                       RJMP    ??dot_string_digit_0
   \                     ??dot_string_digit_1:
   \   00000016   E400                       LDI     R16,64
   \   00000018   E016                       LDI     R17,6
   \   0000001A   ....                       RCALL   DelayTime
   \   0000001C   E080                       LDI     R24,0
   \   0000001E   9593                       INC     R25
   \                     ??dot_string_digit_0:
   \   00000020   3092                       CPI     R25,2
   \   00000022   F008                       BRCS    $+2+2
   \   00000024   C0CD                       RJMP    ??dot_string_digit_2
   \   00000026   E0A0                       LDI     R26,0
   \   00000028   C00A                       RJMP    ??dot_string_digit_3
   \                     ??dot_string_digit_4:
   \   0000002A   91000065                   LDS     R16,101
   \   0000002E   6002                       ORI     R16,0x02
   \   00000030   93000065                   STS     101,R16
   \                     ??dot_string_digit_5:
   \   00000034   E100                       LDI     R16,16
   \   00000036   E010                       LDI     R17,0
   \   00000038   ....                       RCALL   DelayTime
   \   0000003A   9583                       INC     R24
   \   0000003C   95A3                       INC     R26
   \                     ??dot_string_digit_3:
   \   0000003E   30A8                       CPI     R26,8
   \   00000040   F750                       BRCC    ??dot_string_digit_1
   \   00000042   2388                       TST     R24
   \   00000044   F481                       BRNE    ??dot_string_digit_6
   \   00000046   91000062                   LDS     R16,98
   \   0000004A   7F0B                       ANDI    R16,0xFB
   \   0000004C   93000062                   STS     98,R16
   \   00000050   91000062                   LDS     R16,98
   \   00000054   7F0D                       ANDI    R16,0xFD
   \   00000056   93000062                   STS     98,R16
   \   0000005A   91000062                   LDS     R16,98
   \   0000005E   7F0E                       ANDI    R16,0xFE
   \   00000060   93000062                   STS     98,R16
   \   00000064   C07D                       RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_6:
   \   00000066   3081                       CPI     R24,1
   \   00000068   F481                       BRNE    ??dot_string_digit_8
   \   0000006A   91000062                   LDS     R16,98
   \   0000006E   7F0B                       ANDI    R16,0xFB
   \   00000070   93000062                   STS     98,R16
   \   00000074   91000062                   LDS     R16,98
   \   00000078   7F0D                       ANDI    R16,0xFD
   \   0000007A   93000062                   STS     98,R16
   \   0000007E   91000062                   LDS     R16,98
   \   00000082   6001                       ORI     R16,0x01
   \   00000084   93000062                   STS     98,R16
   \   00000088   C06B                       RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_8:
   \   0000008A   3082                       CPI     R24,2
   \   0000008C   F481                       BRNE    ??dot_string_digit_9
   \   0000008E   91000062                   LDS     R16,98
   \   00000092   7F0B                       ANDI    R16,0xFB
   \   00000094   93000062                   STS     98,R16
   \   00000098   91000062                   LDS     R16,98
   \   0000009C   6002                       ORI     R16,0x02
   \   0000009E   93000062                   STS     98,R16
   \   000000A2   91000062                   LDS     R16,98
   \   000000A6   7F0E                       ANDI    R16,0xFE
   \   000000A8   93000062                   STS     98,R16
   \   000000AC   C059                       RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_9:
   \   000000AE   3083                       CPI     R24,3
   \   000000B0   F481                       BRNE    ??dot_string_digit_10
   \   000000B2   91000062                   LDS     R16,98
   \   000000B6   7F0B                       ANDI    R16,0xFB
   \   000000B8   93000062                   STS     98,R16
   \   000000BC   91000062                   LDS     R16,98
   \   000000C0   6002                       ORI     R16,0x02
   \   000000C2   93000062                   STS     98,R16
   \   000000C6   91000062                   LDS     R16,98
   \   000000CA   6001                       ORI     R16,0x01
   \   000000CC   93000062                   STS     98,R16
   \   000000D0   C047                       RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_10:
   \   000000D2   3084                       CPI     R24,4
   \   000000D4   F481                       BRNE    ??dot_string_digit_11
   \   000000D6   91000062                   LDS     R16,98
   \   000000DA   6004                       ORI     R16,0x04
   \   000000DC   93000062                   STS     98,R16
   \   000000E0   91000062                   LDS     R16,98
   \   000000E4   7F0D                       ANDI    R16,0xFD
   \   000000E6   93000062                   STS     98,R16
   \   000000EA   91000062                   LDS     R16,98
   \   000000EE   7F0E                       ANDI    R16,0xFE
   \   000000F0   93000062                   STS     98,R16
   \   000000F4   C035                       RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_11:
   \   000000F6   3085                       CPI     R24,5
   \   000000F8   F481                       BRNE    ??dot_string_digit_12
   \   000000FA   91000062                   LDS     R16,98
   \   000000FE   6004                       ORI     R16,0x04
   \   00000100   93000062                   STS     98,R16
   \   00000104   91000062                   LDS     R16,98
   \   00000108   7F0D                       ANDI    R16,0xFD
   \   0000010A   93000062                   STS     98,R16
   \   0000010E   91000062                   LDS     R16,98
   \   00000112   6001                       ORI     R16,0x01
   \   00000114   93000062                   STS     98,R16
   \   00000118   C023                       RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_12:
   \   0000011A   3086                       CPI     R24,6
   \   0000011C   F481                       BRNE    ??dot_string_digit_13
   \   0000011E   91000062                   LDS     R16,98
   \   00000122   6004                       ORI     R16,0x04
   \   00000124   93000062                   STS     98,R16
   \   00000128   91000062                   LDS     R16,98
   \   0000012C   6002                       ORI     R16,0x02
   \   0000012E   93000062                   STS     98,R16
   \   00000132   91000062                   LDS     R16,98
   \   00000136   7F0E                       ANDI    R16,0xFE
   \   00000138   93000062                   STS     98,R16
   \   0000013C   C011                       RJMP    ??dot_string_digit_7
   \                     ??dot_string_digit_13:
   \   0000013E   3087                       CPI     R24,7
   \   00000140   F479                       BRNE    ??dot_string_digit_7
   \   00000142   91000062                   LDS     R16,98
   \   00000146   6004                       ORI     R16,0x04
   \   00000148   93000062                   STS     98,R16
   \   0000014C   91000062                   LDS     R16,98
   \   00000150   6002                       ORI     R16,0x02
   \   00000152   93000062                   STS     98,R16
   \   00000156   91000062                   LDS     R16,98
   \   0000015A   6001                       ORI     R16,0x01
   \   0000015C   93000062                   STS     98,R16
   \                     ??dot_string_digit_7:
   \   00000160   2399                       TST     R25
   \   00000162   F011                       BREQ    ??dot_string_digit_14
   \   00000164   98AF                       CBI     0x15,0x07
   \   00000166   C005                       RJMP    ??dot_string_digit_15
   \                     ??dot_string_digit_14:
   \   00000168   91000065                   LDS     R16,101
   \   0000016C   7F0D                       ANDI    R16,0xFD
   \   0000016E   93000065                   STS     101,R16
   \                     ??dot_string_digit_15:
   \   00000172   E008                       LDI     R16,8
   \   00000174   E010                       LDI     R17,0
   \   00000176   ....                       RCALL   DelayTime
   \   00000178   91000065                   LDS     R16,101
   \   0000017C   7F0B                       ANDI    R16,0xFB
   \   0000017E   93000065                   STS     101,R16
   \   00000182   E008                       LDI     R16,8
   \   00000184   E010                       LDI     R17,0
   \   00000186   ....                       RCALL   DelayTime
   \   00000188   2F49                       MOV     R20,R25
   \   0000018A   E050                       LDI     R21,0
   \   0000018C   E008                       LDI     R16,8
   \   0000018E   E010                       LDI     R17,0
   \   00000190   ........                   CALL    ?S_EC_MUL_L02
   \   00000194   2F2A                       MOV     R18,R26
   \   00000196   E030                       LDI     R19,0
   \   00000198   0F20                       ADD     R18,R16
   \   0000019A   1F31                       ADC     R19,R17
   \   0000019C   01F9                       MOVW    R31 : R30,R19 : R18
   \   0000019E   ....                       SUBI    R30,LOW((-(dot_string) & 0xFFFF))
   \   000001A0   ....                       SBCI    R31,(-(dot_string) & 0xFFFF) >> 8
   \   000001A2   8100                       LD      R16,Z
   \   000001A4   BB0B                       OUT     0x1B,R16
   \   000001A6   E100                       LDI     R16,16
   \   000001A8   E010                       LDI     R17,0
   \   000001AA   ....                       RCALL   DelayTime
   \   000001AC   91000065                   LDS     R16,101
   \   000001B0   6004                       ORI     R16,0x04
   \   000001B2   93000065                   STS     101,R16
   \   000001B6   2399                       TST     R25
   \   000001B8   F409                       BRNE    $+2+2
   \   000001BA   CF37                       RJMP    ??dot_string_digit_4
   \   000001BC   9AAF                       SBI     0x15,0x07
   \   000001BE   CF3A                       RJMP    ??dot_string_digit_5
   \                     ??dot_string_digit_2:
   \   000001C0   E0E3                       LDI     R30,3
   \   000001C2   ........                   JMP     ?EPILOGUE_B3_L09

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void dot_matrix_digit(unsigned char, unsigned char)
   \                     dot_matrix_digit:
   \   00000000   938A                       ST      -Y,R24
   \   00000002   2F80                       MOV     R24,R16
   \   00000004   9A97                       SBI     0x12,0x07
   \   00000006   91000062                   LDS     R16,98
   \   0000000A   6008                       ORI     R16,0x08
   \   0000000C   93000062                   STS     98,R16
   \   00000010   2311                       TST     R17
   \   00000012   F481                       BRNE    ??dot_matrix_digit_0
   \   00000014   91000062                   LDS     R16,98
   \   00000018   7F0B                       ANDI    R16,0xFB
   \   0000001A   93000062                   STS     98,R16
   \   0000001E   91000062                   LDS     R16,98
   \   00000022   7F0D                       ANDI    R16,0xFD
   \   00000024   93000062                   STS     98,R16
   \   00000028   91000062                   LDS     R16,98
   \   0000002C   7F0E                       ANDI    R16,0xFE
   \   0000002E   93000062                   STS     98,R16
   \   00000032   C07D                       RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_0:
   \   00000034   3011                       CPI     R17,1
   \   00000036   F481                       BRNE    ??dot_matrix_digit_2
   \   00000038   91000062                   LDS     R16,98
   \   0000003C   7F0B                       ANDI    R16,0xFB
   \   0000003E   93000062                   STS     98,R16
   \   00000042   91000062                   LDS     R16,98
   \   00000046   7F0D                       ANDI    R16,0xFD
   \   00000048   93000062                   STS     98,R16
   \   0000004C   91000062                   LDS     R16,98
   \   00000050   6001                       ORI     R16,0x01
   \   00000052   93000062                   STS     98,R16
   \   00000056   C06B                       RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_2:
   \   00000058   3012                       CPI     R17,2
   \   0000005A   F481                       BRNE    ??dot_matrix_digit_3
   \   0000005C   91000062                   LDS     R16,98
   \   00000060   7F0B                       ANDI    R16,0xFB
   \   00000062   93000062                   STS     98,R16
   \   00000066   91000062                   LDS     R16,98
   \   0000006A   6002                       ORI     R16,0x02
   \   0000006C   93000062                   STS     98,R16
   \   00000070   91000062                   LDS     R16,98
   \   00000074   7F0E                       ANDI    R16,0xFE
   \   00000076   93000062                   STS     98,R16
   \   0000007A   C059                       RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_3:
   \   0000007C   3013                       CPI     R17,3
   \   0000007E   F481                       BRNE    ??dot_matrix_digit_4
   \   00000080   91000062                   LDS     R16,98
   \   00000084   7F0B                       ANDI    R16,0xFB
   \   00000086   93000062                   STS     98,R16
   \   0000008A   91000062                   LDS     R16,98
   \   0000008E   6002                       ORI     R16,0x02
   \   00000090   93000062                   STS     98,R16
   \   00000094   91000062                   LDS     R16,98
   \   00000098   6001                       ORI     R16,0x01
   \   0000009A   93000062                   STS     98,R16
   \   0000009E   C047                       RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_4:
   \   000000A0   3014                       CPI     R17,4
   \   000000A2   F481                       BRNE    ??dot_matrix_digit_5
   \   000000A4   91000062                   LDS     R16,98
   \   000000A8   6004                       ORI     R16,0x04
   \   000000AA   93000062                   STS     98,R16
   \   000000AE   91000062                   LDS     R16,98
   \   000000B2   7F0D                       ANDI    R16,0xFD
   \   000000B4   93000062                   STS     98,R16
   \   000000B8   91000062                   LDS     R16,98
   \   000000BC   7F0E                       ANDI    R16,0xFE
   \   000000BE   93000062                   STS     98,R16
   \   000000C2   C035                       RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_5:
   \   000000C4   3015                       CPI     R17,5
   \   000000C6   F481                       BRNE    ??dot_matrix_digit_6
   \   000000C8   91000062                   LDS     R16,98
   \   000000CC   6004                       ORI     R16,0x04
   \   000000CE   93000062                   STS     98,R16
   \   000000D2   91000062                   LDS     R16,98
   \   000000D6   7F0D                       ANDI    R16,0xFD
   \   000000D8   93000062                   STS     98,R16
   \   000000DC   91000062                   LDS     R16,98
   \   000000E0   6001                       ORI     R16,0x01
   \   000000E2   93000062                   STS     98,R16
   \   000000E6   C023                       RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_6:
   \   000000E8   3016                       CPI     R17,6
   \   000000EA   F481                       BRNE    ??dot_matrix_digit_7
   \   000000EC   91000062                   LDS     R16,98
   \   000000F0   6004                       ORI     R16,0x04
   \   000000F2   93000062                   STS     98,R16
   \   000000F6   91000062                   LDS     R16,98
   \   000000FA   6002                       ORI     R16,0x02
   \   000000FC   93000062                   STS     98,R16
   \   00000100   91000062                   LDS     R16,98
   \   00000104   7F0E                       ANDI    R16,0xFE
   \   00000106   93000062                   STS     98,R16
   \   0000010A   C011                       RJMP    ??dot_matrix_digit_1
   \                     ??dot_matrix_digit_7:
   \   0000010C   3017                       CPI     R17,7
   \   0000010E   F479                       BRNE    ??dot_matrix_digit_1
   \   00000110   91000062                   LDS     R16,98
   \   00000114   6004                       ORI     R16,0x04
   \   00000116   93000062                   STS     98,R16
   \   0000011A   91000062                   LDS     R16,98
   \   0000011E   6002                       ORI     R16,0x02
   \   00000120   93000062                   STS     98,R16
   \   00000124   91000062                   LDS     R16,98
   \   00000128   6001                       ORI     R16,0x01
   \   0000012A   93000062                   STS     98,R16
   \                     ??dot_matrix_digit_1:
   \   0000012E   E008                       LDI     R16,8
   \   00000130   E010                       LDI     R17,0
   \   00000132   ....                       RCALL   DelayTime
   \   00000134   91000065                   LDS     R16,101
   \   00000138   7F0D                       ANDI    R16,0xFD
   \   0000013A   93000065                   STS     101,R16
   \   0000013E   E008                       LDI     R16,8
   \   00000140   E010                       LDI     R17,0
   \   00000142   ....                       RCALL   DelayTime
   \   00000144   91000065                   LDS     R16,101
   \   00000148   7F0B                       ANDI    R16,0xFB
   \   0000014A   93000065                   STS     101,R16
   \   0000014E   E008                       LDI     R16,8
   \   00000150   E010                       LDI     R17,0
   \   00000152   ....                       RCALL   DelayTime
   \   00000154   BB8B                       OUT     0x1B,R24
   \   00000156   E100                       LDI     R16,16
   \   00000158   E010                       LDI     R17,0
   \   0000015A   ....                       RCALL   DelayTime
   \   0000015C   91000065                   LDS     R16,101
   \   00000160   6004                       ORI     R16,0x04
   \   00000162   93000065                   STS     101,R16
   \   00000166   91000065                   LDS     R16,101
   \   0000016A   6002                       ORI     R16,0x02
   \   0000016C   93000065                   STS     101,R16
   \   00000170   E100                       LDI     R16,16
   \   00000172   E010                       LDI     R17,0
   \   00000174   ....                       RCALL   DelayTime
   \   00000176   9189                       LD      R24,Y+
   \   00000178   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void dot_matrix_digit2(unsigned char, unsigned char)
   \                     dot_matrix_digit2:
   \   00000000   938A                       ST      -Y,R24
   \   00000002   2F80                       MOV     R24,R16
   \   00000004   9A97                       SBI     0x12,0x07
   \   00000006   91000062                   LDS     R16,98
   \   0000000A   6008                       ORI     R16,0x08
   \   0000000C   93000062                   STS     98,R16
   \   00000010   2311                       TST     R17
   \   00000012   F481                       BRNE    ??dot_matrix_digit2_0
   \   00000014   91000062                   LDS     R16,98
   \   00000018   7F0B                       ANDI    R16,0xFB
   \   0000001A   93000062                   STS     98,R16
   \   0000001E   91000062                   LDS     R16,98
   \   00000022   7F0D                       ANDI    R16,0xFD
   \   00000024   93000062                   STS     98,R16
   \   00000028   91000062                   LDS     R16,98
   \   0000002C   7F0E                       ANDI    R16,0xFE
   \   0000002E   93000062                   STS     98,R16
   \   00000032   C07D                       RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_0:
   \   00000034   3011                       CPI     R17,1
   \   00000036   F481                       BRNE    ??dot_matrix_digit2_2
   \   00000038   91000062                   LDS     R16,98
   \   0000003C   7F0B                       ANDI    R16,0xFB
   \   0000003E   93000062                   STS     98,R16
   \   00000042   91000062                   LDS     R16,98
   \   00000046   7F0D                       ANDI    R16,0xFD
   \   00000048   93000062                   STS     98,R16
   \   0000004C   91000062                   LDS     R16,98
   \   00000050   6001                       ORI     R16,0x01
   \   00000052   93000062                   STS     98,R16
   \   00000056   C06B                       RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_2:
   \   00000058   3012                       CPI     R17,2
   \   0000005A   F481                       BRNE    ??dot_matrix_digit2_3
   \   0000005C   91000062                   LDS     R16,98
   \   00000060   7F0B                       ANDI    R16,0xFB
   \   00000062   93000062                   STS     98,R16
   \   00000066   91000062                   LDS     R16,98
   \   0000006A   6002                       ORI     R16,0x02
   \   0000006C   93000062                   STS     98,R16
   \   00000070   91000062                   LDS     R16,98
   \   00000074   7F0E                       ANDI    R16,0xFE
   \   00000076   93000062                   STS     98,R16
   \   0000007A   C059                       RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_3:
   \   0000007C   3013                       CPI     R17,3
   \   0000007E   F481                       BRNE    ??dot_matrix_digit2_4
   \   00000080   91000062                   LDS     R16,98
   \   00000084   7F0B                       ANDI    R16,0xFB
   \   00000086   93000062                   STS     98,R16
   \   0000008A   91000062                   LDS     R16,98
   \   0000008E   6002                       ORI     R16,0x02
   \   00000090   93000062                   STS     98,R16
   \   00000094   91000062                   LDS     R16,98
   \   00000098   6001                       ORI     R16,0x01
   \   0000009A   93000062                   STS     98,R16
   \   0000009E   C047                       RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_4:
   \   000000A0   3014                       CPI     R17,4
   \   000000A2   F481                       BRNE    ??dot_matrix_digit2_5
   \   000000A4   91000062                   LDS     R16,98
   \   000000A8   6004                       ORI     R16,0x04
   \   000000AA   93000062                   STS     98,R16
   \   000000AE   91000062                   LDS     R16,98
   \   000000B2   7F0D                       ANDI    R16,0xFD
   \   000000B4   93000062                   STS     98,R16
   \   000000B8   91000062                   LDS     R16,98
   \   000000BC   7F0E                       ANDI    R16,0xFE
   \   000000BE   93000062                   STS     98,R16
   \   000000C2   C035                       RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_5:
   \   000000C4   3015                       CPI     R17,5
   \   000000C6   F481                       BRNE    ??dot_matrix_digit2_6
   \   000000C8   91000062                   LDS     R16,98
   \   000000CC   6004                       ORI     R16,0x04
   \   000000CE   93000062                   STS     98,R16
   \   000000D2   91000062                   LDS     R16,98
   \   000000D6   7F0D                       ANDI    R16,0xFD
   \   000000D8   93000062                   STS     98,R16
   \   000000DC   91000062                   LDS     R16,98
   \   000000E0   6001                       ORI     R16,0x01
   \   000000E2   93000062                   STS     98,R16
   \   000000E6   C023                       RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_6:
   \   000000E8   3016                       CPI     R17,6
   \   000000EA   F481                       BRNE    ??dot_matrix_digit2_7
   \   000000EC   91000062                   LDS     R16,98
   \   000000F0   6004                       ORI     R16,0x04
   \   000000F2   93000062                   STS     98,R16
   \   000000F6   91000062                   LDS     R16,98
   \   000000FA   6002                       ORI     R16,0x02
   \   000000FC   93000062                   STS     98,R16
   \   00000100   91000062                   LDS     R16,98
   \   00000104   7F0E                       ANDI    R16,0xFE
   \   00000106   93000062                   STS     98,R16
   \   0000010A   C011                       RJMP    ??dot_matrix_digit2_1
   \                     ??dot_matrix_digit2_7:
   \   0000010C   3017                       CPI     R17,7
   \   0000010E   F479                       BRNE    ??dot_matrix_digit2_1
   \   00000110   91000062                   LDS     R16,98
   \   00000114   6004                       ORI     R16,0x04
   \   00000116   93000062                   STS     98,R16
   \   0000011A   91000062                   LDS     R16,98
   \   0000011E   6002                       ORI     R16,0x02
   \   00000120   93000062                   STS     98,R16
   \   00000124   91000062                   LDS     R16,98
   \   00000128   6001                       ORI     R16,0x01
   \   0000012A   93000062                   STS     98,R16
   \                     ??dot_matrix_digit2_1:
   \   0000012E   E008                       LDI     R16,8
   \   00000130   E010                       LDI     R17,0
   \   00000132   ....                       RCALL   DelayTime
   \   00000134   98AF                       CBI     0x15,0x07
   \   00000136   E008                       LDI     R16,8
   \   00000138   E010                       LDI     R17,0
   \   0000013A   ....                       RCALL   DelayTime
   \   0000013C   91000065                   LDS     R16,101
   \   00000140   7F0B                       ANDI    R16,0xFB
   \   00000142   93000065                   STS     101,R16
   \   00000146   E008                       LDI     R16,8
   \   00000148   E010                       LDI     R17,0
   \   0000014A   ....                       RCALL   DelayTime
   \   0000014C   BB8B                       OUT     0x1B,R24
   \   0000014E   E100                       LDI     R16,16
   \   00000150   E010                       LDI     R17,0
   \   00000152   ....                       RCALL   DelayTime
   \   00000154   91000065                   LDS     R16,101
   \   00000158   6004                       ORI     R16,0x04
   \   0000015A   93000065                   STS     101,R16
   \   0000015E   9AAF                       SBI     0x15,0x07
   \   00000160   E100                       LDI     R16,16
   \   00000162   E010                       LDI     R17,0
   \   00000164   ....                       RCALL   DelayTime
   \   00000166   9189                       LD      R24,Y+
   \   00000168   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void dot_matrix_bright(unsigned char)
   \                     dot_matrix_bright:
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
   \   00000004   2F90                       MOV     R25,R16
   \   00000006   E080                       LDI     R24,0
   \   00000008   C036                       RJMP    ??dot_matrix_bright_0
   \                     ??dot_matrix_bright_1:
   \   0000000A   3087                       CPI     R24,7
   \   0000000C   F479                       BRNE    ??dot_matrix_bright_2
   \   0000000E   91000062                   LDS     R16,98
   \   00000012   6004                       ORI     R16,0x04
   \   00000014   93000062                   STS     98,R16
   \   00000018   91000062                   LDS     R16,98
   \   0000001C   6002                       ORI     R16,0x02
   \   0000001E   93000062                   STS     98,R16
   \   00000022   91000062                   LDS     R16,98
   \   00000026   6001                       ORI     R16,0x01
   \   00000028   93000062                   STS     98,R16
   \                     ??dot_matrix_bright_2:
   \   0000002C   E008                       LDI     R16,8
   \   0000002E   E010                       LDI     R17,0
   \   00000030   ....                       RCALL   DelayTime
   \   00000032   91000065                   LDS     R16,101
   \   00000036   7F0D                       ANDI    R16,0xFD
   \   00000038   93000065                   STS     101,R16
   \   0000003C   E008                       LDI     R16,8
   \   0000003E   E010                       LDI     R17,0
   \   00000040   ....                       RCALL   DelayTime
   \   00000042   91000065                   LDS     R16,101
   \   00000046   7F0B                       ANDI    R16,0xFB
   \   00000048   93000065                   STS     101,R16
   \   0000004C   E008                       LDI     R16,8
   \   0000004E   E010                       LDI     R17,0
   \   00000050   ....                       RCALL   DelayTime
   \   00000052   BB9B                       OUT     0x1B,R25
   \   00000054   E100                       LDI     R16,16
   \   00000056   E010                       LDI     R17,0
   \   00000058   ....                       RCALL   DelayTime
   \   0000005A   91000065                   LDS     R16,101
   \   0000005E   6004                       ORI     R16,0x04
   \   00000060   93000065                   STS     101,R16
   \   00000064   91000065                   LDS     R16,101
   \   00000068   6002                       ORI     R16,0x02
   \   0000006A   93000065                   STS     101,R16
   \   0000006E   E100                       LDI     R16,16
   \   00000070   E010                       LDI     R17,0
   \   00000072   ....                       RCALL   DelayTime
   \   00000074   9583                       INC     R24
   \                     ??dot_matrix_bright_0:
   \   00000076   3088                       CPI     R24,8
   \   00000078   F008                       BRCS    $+2+2
   \   0000007A   C085                       RJMP    ??dot_matrix_bright_3
   \   0000007C   9A97                       SBI     0x12,0x07
   \   0000007E   91000062                   LDS     R16,98
   \   00000082   7F07                       ANDI    R16,0xF7
   \   00000084   93000062                   STS     98,R16
   \   00000088   2388                       TST     R24
   \   0000008A   F481                       BRNE    ??dot_matrix_bright_4
   \   0000008C   91000062                   LDS     R16,98
   \   00000090   7F0B                       ANDI    R16,0xFB
   \   00000092   93000062                   STS     98,R16
   \   00000096   91000062                   LDS     R16,98
   \   0000009A   7F0D                       ANDI    R16,0xFD
   \   0000009C   93000062                   STS     98,R16
   \   000000A0   91000062                   LDS     R16,98
   \   000000A4   7F0E                       ANDI    R16,0xFE
   \   000000A6   93000062                   STS     98,R16
   \   000000AA   CFC0                       RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_4:
   \   000000AC   3081                       CPI     R24,1
   \   000000AE   F481                       BRNE    ??dot_matrix_bright_5
   \   000000B0   91000062                   LDS     R16,98
   \   000000B4   7F0B                       ANDI    R16,0xFB
   \   000000B6   93000062                   STS     98,R16
   \   000000BA   91000062                   LDS     R16,98
   \   000000BE   7F0D                       ANDI    R16,0xFD
   \   000000C0   93000062                   STS     98,R16
   \   000000C4   91000062                   LDS     R16,98
   \   000000C8   6001                       ORI     R16,0x01
   \   000000CA   93000062                   STS     98,R16
   \   000000CE   CFAE                       RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_5:
   \   000000D0   3082                       CPI     R24,2
   \   000000D2   F481                       BRNE    ??dot_matrix_bright_6
   \   000000D4   91000062                   LDS     R16,98
   \   000000D8   7F0B                       ANDI    R16,0xFB
   \   000000DA   93000062                   STS     98,R16
   \   000000DE   91000062                   LDS     R16,98
   \   000000E2   6002                       ORI     R16,0x02
   \   000000E4   93000062                   STS     98,R16
   \   000000E8   91000062                   LDS     R16,98
   \   000000EC   7F0E                       ANDI    R16,0xFE
   \   000000EE   93000062                   STS     98,R16
   \   000000F2   CF9C                       RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_6:
   \   000000F4   3083                       CPI     R24,3
   \   000000F6   F481                       BRNE    ??dot_matrix_bright_7
   \   000000F8   91000062                   LDS     R16,98
   \   000000FC   7F0B                       ANDI    R16,0xFB
   \   000000FE   93000062                   STS     98,R16
   \   00000102   91000062                   LDS     R16,98
   \   00000106   6002                       ORI     R16,0x02
   \   00000108   93000062                   STS     98,R16
   \   0000010C   91000062                   LDS     R16,98
   \   00000110   6001                       ORI     R16,0x01
   \   00000112   93000062                   STS     98,R16
   \   00000116   CF8A                       RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_7:
   \   00000118   3084                       CPI     R24,4
   \   0000011A   F481                       BRNE    ??dot_matrix_bright_8
   \   0000011C   91000062                   LDS     R16,98
   \   00000120   6004                       ORI     R16,0x04
   \   00000122   93000062                   STS     98,R16
   \   00000126   91000062                   LDS     R16,98
   \   0000012A   7F0D                       ANDI    R16,0xFD
   \   0000012C   93000062                   STS     98,R16
   \   00000130   91000062                   LDS     R16,98
   \   00000134   7F0E                       ANDI    R16,0xFE
   \   00000136   93000062                   STS     98,R16
   \   0000013A   CF78                       RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_8:
   \   0000013C   3085                       CPI     R24,5
   \   0000013E   F481                       BRNE    ??dot_matrix_bright_9
   \   00000140   91000062                   LDS     R16,98
   \   00000144   6004                       ORI     R16,0x04
   \   00000146   93000062                   STS     98,R16
   \   0000014A   91000062                   LDS     R16,98
   \   0000014E   7F0D                       ANDI    R16,0xFD
   \   00000150   93000062                   STS     98,R16
   \   00000154   91000062                   LDS     R16,98
   \   00000158   6001                       ORI     R16,0x01
   \   0000015A   93000062                   STS     98,R16
   \   0000015E   CF66                       RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_9:
   \   00000160   3086                       CPI     R24,6
   \   00000162   F009                       BREQ    $+2+2
   \   00000164   CF52                       RJMP    ??dot_matrix_bright_1
   \   00000166   91000062                   LDS     R16,98
   \   0000016A   6004                       ORI     R16,0x04
   \   0000016C   93000062                   STS     98,R16
   \   00000170   91000062                   LDS     R16,98
   \   00000174   6002                       ORI     R16,0x02
   \   00000176   93000062                   STS     98,R16
   \   0000017A   91000062                   LDS     R16,98
   \   0000017E   7F0E                       ANDI    R16,0xFE
   \   00000180   93000062                   STS     98,R16
   \   00000184   CF53                       RJMP    ??dot_matrix_bright_2
   \                     ??dot_matrix_bright_3:
   \   00000186   E080                       LDI     R24,0
   \   00000188   C02E                       RJMP    ??dot_matrix_bright_10
   \                     ??dot_matrix_bright_11:
   \   0000018A   3087                       CPI     R24,7
   \   0000018C   F479                       BRNE    ??dot_matrix_bright_12
   \   0000018E   91000062                   LDS     R16,98
   \   00000192   6004                       ORI     R16,0x04
   \   00000194   93000062                   STS     98,R16
   \   00000198   91000062                   LDS     R16,98
   \   0000019C   6002                       ORI     R16,0x02
   \   0000019E   93000062                   STS     98,R16
   \   000001A2   91000062                   LDS     R16,98
   \   000001A6   6001                       ORI     R16,0x01
   \   000001A8   93000062                   STS     98,R16
   \                     ??dot_matrix_bright_12:
   \   000001AC   E008                       LDI     R16,8
   \   000001AE   E010                       LDI     R17,0
   \   000001B0   ....                       RCALL   DelayTime
   \   000001B2   98AF                       CBI     0x15,0x07
   \   000001B4   E008                       LDI     R16,8
   \   000001B6   E010                       LDI     R17,0
   \   000001B8   ....                       RCALL   DelayTime
   \   000001BA   91000065                   LDS     R16,101
   \   000001BE   7F0B                       ANDI    R16,0xFB
   \   000001C0   93000065                   STS     101,R16
   \   000001C4   E008                       LDI     R16,8
   \   000001C6   E010                       LDI     R17,0
   \   000001C8   ....                       RCALL   DelayTime
   \   000001CA   BB9B                       OUT     0x1B,R25
   \   000001CC   E100                       LDI     R16,16
   \   000001CE   E010                       LDI     R17,0
   \   000001D0   ....                       RCALL   DelayTime
   \   000001D2   91000065                   LDS     R16,101
   \   000001D6   6004                       ORI     R16,0x04
   \   000001D8   93000065                   STS     101,R16
   \   000001DC   9AAF                       SBI     0x15,0x07
   \   000001DE   E100                       LDI     R16,16
   \   000001E0   E010                       LDI     R17,0
   \   000001E2   ....                       RCALL   DelayTime
   \   000001E4   9583                       INC     R24
   \                     ??dot_matrix_bright_10:
   \   000001E6   3088                       CPI     R24,8
   \   000001E8   F008                       BRCS    $+2+2
   \   000001EA   C085                       RJMP    ??dot_matrix_bright_13
   \   000001EC   9A97                       SBI     0x12,0x07
   \   000001EE   91000062                   LDS     R16,98
   \   000001F2   7F07                       ANDI    R16,0xF7
   \   000001F4   93000062                   STS     98,R16
   \   000001F8   2388                       TST     R24
   \   000001FA   F481                       BRNE    ??dot_matrix_bright_14
   \   000001FC   91000062                   LDS     R16,98
   \   00000200   7F0B                       ANDI    R16,0xFB
   \   00000202   93000062                   STS     98,R16
   \   00000206   91000062                   LDS     R16,98
   \   0000020A   7F0D                       ANDI    R16,0xFD
   \   0000020C   93000062                   STS     98,R16
   \   00000210   91000062                   LDS     R16,98
   \   00000214   7F0E                       ANDI    R16,0xFE
   \   00000216   93000062                   STS     98,R16
   \   0000021A   CFC8                       RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_14:
   \   0000021C   3081                       CPI     R24,1
   \   0000021E   F481                       BRNE    ??dot_matrix_bright_15
   \   00000220   91000062                   LDS     R16,98
   \   00000224   7F0B                       ANDI    R16,0xFB
   \   00000226   93000062                   STS     98,R16
   \   0000022A   91000062                   LDS     R16,98
   \   0000022E   7F0D                       ANDI    R16,0xFD
   \   00000230   93000062                   STS     98,R16
   \   00000234   91000062                   LDS     R16,98
   \   00000238   6001                       ORI     R16,0x01
   \   0000023A   93000062                   STS     98,R16
   \   0000023E   CFB6                       RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_15:
   \   00000240   3082                       CPI     R24,2
   \   00000242   F481                       BRNE    ??dot_matrix_bright_16
   \   00000244   91000062                   LDS     R16,98
   \   00000248   7F0B                       ANDI    R16,0xFB
   \   0000024A   93000062                   STS     98,R16
   \   0000024E   91000062                   LDS     R16,98
   \   00000252   6002                       ORI     R16,0x02
   \   00000254   93000062                   STS     98,R16
   \   00000258   91000062                   LDS     R16,98
   \   0000025C   7F0E                       ANDI    R16,0xFE
   \   0000025E   93000062                   STS     98,R16
   \   00000262   CFA4                       RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_16:
   \   00000264   3083                       CPI     R24,3
   \   00000266   F481                       BRNE    ??dot_matrix_bright_17
   \   00000268   91000062                   LDS     R16,98
   \   0000026C   7F0B                       ANDI    R16,0xFB
   \   0000026E   93000062                   STS     98,R16
   \   00000272   91000062                   LDS     R16,98
   \   00000276   6002                       ORI     R16,0x02
   \   00000278   93000062                   STS     98,R16
   \   0000027C   91000062                   LDS     R16,98
   \   00000280   6001                       ORI     R16,0x01
   \   00000282   93000062                   STS     98,R16
   \   00000286   CF92                       RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_17:
   \   00000288   3084                       CPI     R24,4
   \   0000028A   F481                       BRNE    ??dot_matrix_bright_18
   \   0000028C   91000062                   LDS     R16,98
   \   00000290   6004                       ORI     R16,0x04
   \   00000292   93000062                   STS     98,R16
   \   00000296   91000062                   LDS     R16,98
   \   0000029A   7F0D                       ANDI    R16,0xFD
   \   0000029C   93000062                   STS     98,R16
   \   000002A0   91000062                   LDS     R16,98
   \   000002A4   7F0E                       ANDI    R16,0xFE
   \   000002A6   93000062                   STS     98,R16
   \   000002AA   CF80                       RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_18:
   \   000002AC   3085                       CPI     R24,5
   \   000002AE   F481                       BRNE    ??dot_matrix_bright_19
   \   000002B0   91000062                   LDS     R16,98
   \   000002B4   6004                       ORI     R16,0x04
   \   000002B6   93000062                   STS     98,R16
   \   000002BA   91000062                   LDS     R16,98
   \   000002BE   7F0D                       ANDI    R16,0xFD
   \   000002C0   93000062                   STS     98,R16
   \   000002C4   91000062                   LDS     R16,98
   \   000002C8   6001                       ORI     R16,0x01
   \   000002CA   93000062                   STS     98,R16
   \   000002CE   CF6E                       RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_19:
   \   000002D0   3086                       CPI     R24,6
   \   000002D2   F009                       BREQ    $+2+2
   \   000002D4   CF5A                       RJMP    ??dot_matrix_bright_11
   \   000002D6   91000062                   LDS     R16,98
   \   000002DA   6004                       ORI     R16,0x04
   \   000002DC   93000062                   STS     98,R16
   \   000002E0   91000062                   LDS     R16,98
   \   000002E4   6002                       ORI     R16,0x02
   \   000002E6   93000062                   STS     98,R16
   \   000002EA   91000062                   LDS     R16,98
   \   000002EE   7F0E                       ANDI    R16,0xFE
   \   000002F0   93000062                   STS     98,R16
   \   000002F4   CF5B                       RJMP    ??dot_matrix_bright_12
   \                     ??dot_matrix_bright_13:
   \   000002F6   9189                       LD      R24,Y+
   \   000002F8   9199                       LD      R25,Y+
   \   000002FA   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void dot_0x_hexadecimal(unsigned char)
   \                     dot_0x_hexadecimal:
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
   \   00000004   2F90                       MOV     R25,R16
   \   00000006   E013                       LDI     R17,3
   \   00000008   E300                       LDI     R16,48
   \   0000000A   ....                       RCALL   dot_matrix_digit
   \   0000000C   E012                       LDI     R17,2
   \   0000000E   E708                       LDI     R16,120
   \   00000010   ....                       RCALL   dot_matrix_digit
   \   00000012   E082                       LDI     R24,2
   \   00000014   C005                       RJMP    ??dot_0x_hexadecimal_0
   \                     ??dot_0x_hexadecimal_1:
   \   00000016   2F18                       MOV     R17,R24
   \   00000018   951A                       DEC     R17
   \   0000001A   5C09                       SUBI    R16,201
   \   0000001C   ....                       RCALL   dot_matrix_digit
   \                     ??dot_0x_hexadecimal_2:
   \   0000001E   958A                       DEC     R24
   \                     ??dot_0x_hexadecimal_0:
   \   00000020   3081                       CPI     R24,1
   \   00000022   F088                       BRCS    ??dot_0x_hexadecimal_3
   \   00000024   2F09                       MOV     R16,R25
   \   00000026   E010                       LDI     R17,0
   \   00000028   2F38                       MOV     R19,R24
   \   0000002A   953A                       DEC     R19
   \   0000002C   E024                       LDI     R18,4
   \   0000002E   9F32                       MUL     R19,R18
   \   00000030   2D40                       MOV     R20,R0
   \   00000032   ........                   CALL    ?SS_SHR_L02
   \   00000036   700F                       ANDI    R16,0x0F
   \   00000038   300A                       CPI     R16,10
   \   0000003A   F768                       BRCC    ??dot_0x_hexadecimal_1
   \   0000003C   2F18                       MOV     R17,R24
   \   0000003E   951A                       DEC     R17
   \   00000040   5D00                       SUBI    R16,208
   \   00000042   ....                       RCALL   dot_matrix_digit
   \   00000044   CFEC                       RJMP    ??dot_0x_hexadecimal_2
   \                     ??dot_0x_hexadecimal_3:
   \   00000046   9189                       LD      R24,Y+
   \   00000048   9199                       LD      R25,Y+
   \   0000004A   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void dot_vol_hextodeci(unsigned char)
   \                     dot_vol_hextodeci:
   \   00000000   ........                   CALL    ?PROLOGUE4_L09
   \   00000004   2F90                       MOV     R25,R16
   \   00000006   9100....                   LDS     R16,mute_enable
   \   0000000A   2300                       TST     R16
   \   0000000C   F469                       BRNE    ??dot_vol_hextodeci_0
   \   0000000E   E40D                       LDI     R16,77
   \   00000010   9300....                   STS     ess_volume,R16
   \   00000014   E505                       LDI     R16,85
   \   00000016   9300....                   STS     (ess_volume + 1),R16
   \   0000001A   E504                       LDI     R16,84
   \   0000001C   9300....                   STS     (ess_volume + 2),R16
   \   00000020   E405                       LDI     R16,69
   \   00000022   9300....                   STS     (ess_volume + 3),R16
   \   00000026   C04B                       RJMP    ??dot_vol_hextodeci_1
   \                     ??dot_vol_hextodeci_0:
   \   00000028   2399                       TST     R25
   \   0000002A   F469                       BRNE    ??dot_vol_hextodeci_2
   \   0000002C   E200                       LDI     R16,32
   \   0000002E   9300....                   STS     ess_volume,R16
   \   00000032   E301                       LDI     R16,49
   \   00000034   9300....                   STS     (ess_volume + 1),R16
   \   00000038   E300                       LDI     R16,48
   \   0000003A   9300....                   STS     (ess_volume + 2),R16
   \   0000003E   E300                       LDI     R16,48
   \   00000040   9300....                   STS     (ess_volume + 3),R16
   \   00000044   C03C                       RJMP    ??dot_vol_hextodeci_1
   \                     ??dot_vol_hextodeci_2:
   \   00000046   3F9F                       CPI     R25,255
   \   00000048   F469                       BRNE    ??dot_vol_hextodeci_3
   \   0000004A   E300                       LDI     R16,48
   \   0000004C   9300....                   STS     ess_volume,R16
   \   00000050   E300                       LDI     R16,48
   \   00000052   9300....                   STS     (ess_volume + 1),R16
   \   00000056   E20E                       LDI     R16,46
   \   00000058   9300....                   STS     (ess_volume + 2),R16
   \   0000005C   E300                       LDI     R16,48
   \   0000005E   9300....                   STS     (ess_volume + 3),R16
   \   00000062   C02D                       RJMP    ??dot_vol_hextodeci_1
   \                     ??dot_vol_hextodeci_3:
   \   00000064   E1A4                       LDI     R26,20
   \   00000066   EC08                       LDI     R16,200
   \   00000068   1B09                       SUB     R16,R25
   \   0000006A   2F90                       MOV     R25,R16
   \   0000006C   E080                       LDI     R24,0
   \   0000006E   C016                       RJMP    ??dot_vol_hextodeci_4
   \                     ??dot_vol_hextodeci_5:
   \   00000070   2F09                       MOV     R16,R25
   \   00000072   2F4A                       MOV     R20,R26
   \   00000074   ........                   CALL    ?UC_DIVMOD_L01
   \   00000078   5D00                       SUBI    R16,208
   \   0000007A   2F28                       MOV     R18,R24
   \   0000007C   E030                       LDI     R19,0
   \   0000007E   01F9                       MOVW    R31 : R30,R19 : R18
   \   00000080   ....                       SUBI    R30,LOW((-(ess_volume) & 0xFFFF))
   \   00000082   ....                       SBCI    R31,(-(ess_volume) & 0xFFFF) >> 8
   \   00000084   8300                       ST      Z,R16
   \   00000086   2F09                       MOV     R16,R25
   \   00000088   2F4A                       MOV     R20,R26
   \   0000008A   ........                   CALL    ?UC_DIVMOD_L01
   \   0000008E   2F94                       MOV     R25,R20
   \   00000090   2F0A                       MOV     R16,R26
   \   00000092   E04A                       LDI     R20,10
   \   00000094   ........                   CALL    ?UC_DIVMOD_L01
   \   00000098   2FA0                       MOV     R26,R16
   \   0000009A   9583                       INC     R24
   \                     ??dot_vol_hextodeci_4:
   \   0000009C   3082                       CPI     R24,2
   \   0000009E   F340                       BRCS    ??dot_vol_hextodeci_5
   \   000000A0   2399                       TST     R25
   \   000000A2   F039                       BREQ    ??dot_vol_hextodeci_6
   \   000000A4   E20E                       LDI     R16,46
   \   000000A6   9300....                   STS     (ess_volume + 2),R16
   \   000000AA   E305                       LDI     R16,53
   \   000000AC   9300....                   STS     (ess_volume + 3),R16
   \   000000B0   C006                       RJMP    ??dot_vol_hextodeci_1
   \                     ??dot_vol_hextodeci_6:
   \   000000B2   E20E                       LDI     R16,46
   \   000000B4   9300....                   STS     (ess_volume + 2),R16
   \   000000B8   E300                       LDI     R16,48
   \   000000BA   9300....                   STS     (ess_volume + 3),R16
   \                     ??dot_vol_hextodeci_1:
   \   000000BE   E080                       LDI     R24,0
   \   000000C0   C00D                       RJMP    ??dot_vol_hextodeci_7
   \                     ??dot_vol_hextodeci_8:
   \   000000C2   E090                       LDI     R25,0
   \   000000C4   01FC                       MOVW    R31 : R30,R25 : R24
   \   000000C6   ....                       SUBI    R30,LOW((-(ess_volume) & 0xFFFF))
   \   000000C8   ....                       SBCI    R31,(-(ess_volume) & 0xFFFF) >> 8
   \   000000CA   8100                       LD      R16,Z
   \   000000CC   2FA8                       MOV     R26,R24
   \   000000CE   E0B0                       LDI     R27,0
   \   000000D0   961C                       ADIW    R27 : R26,12
   \   000000D2   01FD                       MOVW    R31 : R30,R27 : R26
   \   000000D4   ....                       SUBI    R30,LOW((-(dot_string) & 0xFFFF))
   \   000000D6   ....                       SBCI    R31,(-(dot_string) & 0xFFFF) >> 8
   \   000000D8   8300                       ST      Z,R16
   \   000000DA   9583                       INC     R24
   \                     ??dot_vol_hextodeci_7:
   \   000000DC   3084                       CPI     R24,4
   \   000000DE   F388                       BRCS    ??dot_vol_hextodeci_8
   \   000000E0   ....                       RCALL   dot_string_digit
   \   000000E2   E0E4                       LDI     R30,4
   \   000000E4   ........                   JMP     ?EPILOGUE_B4_L09

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void dot_matrix_set()
   \                     dot_matrix_set:
   \   00000000   9A97                       SBI     0x12,0x07
   \   00000002   E001                       LDI     R16,1
   \   00000004   9300....                   STS     dot_light_reg,R16
   \   00000008   91000065                   LDS     R16,101
   \   0000000C   6001                       ORI     R16,0x01
   \   0000000E   93000065                   STS     101,R16
   \   00000012   E004                       LDI     R16,4
   \   00000014   ....                       RCALL   dot_matrix_bright
   \   00000016   9508                       RET

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near test_osc
   \                     test_osc:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for test_osc>`

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void ess_mute()
   \                     ess_mute:
   \   00000000   9100....                   LDS     R16,key_func
   \   00000004   2300                       TST     R16
   \   00000006   F519                       BRNE    ??ess_mute_0
   \   00000008   9100....                   LDS     R16,mute_enable
   \   0000000C   2300                       TST     R16
   \   0000000E   F411                       BRNE    ??ess_mute_1
   \   00000010   E001                       LDI     R16,1
   \   00000012   C001                       RJMP    ??ess_mute_2
   \                     ??ess_mute_1:
   \   00000014   E000                       LDI     R16,0
   \                     ??ess_mute_2:
   \   00000016   9300....                   STS     mute_enable,R16
   \   0000001A   9100....                   LDS     R16,mute_enable
   \   0000001E   2300                       TST     R16
   \   00000020   F411                       BRNE    ??ess_mute_3
   \   00000022   E011                       LDI     R17,1
   \   00000024   C001                       RJMP    ??ess_mute_4
   \                     ??ess_mute_3:
   \   00000026   E010                       LDI     R17,0
   \                     ??ess_mute_4:
   \   00000028   9100....                   LDS     R16,es9018_reg10
   \   0000002C   7C0E                       ANDI    R16,0xCE
   \   0000002E   0F01                       ADD     R16,R17
   \   00000030   9300....                   STS     es9018_reg10,R16
   \   00000034   9120....                   LDS     R18,es9018_reg10
   \   00000038   E01A                       LDI     R17,10
   \   0000003A   E900                       LDI     R16,144
   \   0000003C   ....                       RCALL   I2C_Write
   \   0000003E   9120....                   LDS     R18,es9018_reg10
   \   00000042   E01A                       LDI     R17,10
   \   00000044   E902                       LDI     R16,146
   \   00000046   ....                       RCALL   I2C_Write
   \   00000048   9100....                   LDS     R16,vol_dB
   \   0000004C   ....                       RCALL   dot_vol_hextodeci
   \                     ??ess_mute_0:
   \   0000004E   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void phase_ess()
   \                     phase_ess:
   \   00000000   9100....                   LDS     R16,phase_data
   \   00000004   2300                       TST     R16
   \   00000006   F449                       BRNE    ??phase_ess_0
   \   00000008   EF2F                       LDI     R18,255
   \   0000000A   E01D                       LDI     R17,13
   \   0000000C   E900                       LDI     R16,144
   \   0000000E   ....                       RCALL   I2C_Write
   \   00000010   EF2F                       LDI     R18,255
   \   00000012   E01D                       LDI     R17,13
   \   00000014   E902                       LDI     R16,146
   \   00000016   ....                       RCALL   I2C_Write
   \   00000018   9508                       RET
   \                     ??phase_ess_0:
   \   0000001A   E020                       LDI     R18,0
   \   0000001C   E01D                       LDI     R17,13
   \   0000001E   E900                       LDI     R16,144
   \   00000020   ....                       RCALL   I2C_Write
   \   00000022   E020                       LDI     R18,0
   \   00000024   E01D                       LDI     R17,13
   \   00000026   E902                       LDI     R16,146
   \   00000028   ....                       RCALL   I2C_Write
   \   0000002A   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void volume_set()
   \                     volume_set:
   \   00000000   938A                       ST      -Y,R24
   \   00000002   E080                       LDI     R24,0
   \   00000004   C00B                       RJMP    ??volume_set_0
   \                     ??volume_set_1:
   \   00000006   9120....                   LDS     R18,vol_dB
   \   0000000A   2F18                       MOV     R17,R24
   \   0000000C   E900                       LDI     R16,144
   \   0000000E   ....                       RCALL   I2C_Write
   \   00000010   9120....                   LDS     R18,vol_dB
   \   00000014   2F18                       MOV     R17,R24
   \   00000016   E902                       LDI     R16,146
   \   00000018   ....                       RCALL   I2C_Write
   \   0000001A   9583                       INC     R24
   \                     ??volume_set_0:
   \   0000001C   3088                       CPI     R24,8
   \   0000001E   F398                       BRCS    ??volume_set_1
   \   00000020   9189                       LD      R24,Y+
   \   00000022   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void init_vol_dn(unsigned char)
   \                     init_vol_dn:
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
   \   00000004   2F80                       MOV     R24,R16
   \   00000006   3C87                       CPI     R24,199
   \   00000008   F410                       BRCC    ??init_vol_dn_0
   \   0000000A   9583                       INC     R24
   \   0000000C   C001                       RJMP    ??init_vol_dn_1
   \                     ??init_vol_dn_0:
   \   0000000E   EF8F                       LDI     R24,255
   \                     ??init_vol_dn_1:
   \   00000010   E090                       LDI     R25,0
   \   00000012   C009                       RJMP    ??init_vol_dn_2
   \                     ??init_vol_dn_3:
   \   00000014   2F28                       MOV     R18,R24
   \   00000016   2F19                       MOV     R17,R25
   \   00000018   E900                       LDI     R16,144
   \   0000001A   ....                       RCALL   I2C_Write
   \   0000001C   2F28                       MOV     R18,R24
   \   0000001E   2F19                       MOV     R17,R25
   \   00000020   E902                       LDI     R16,146
   \   00000022   ....                       RCALL   I2C_Write
   \   00000024   9593                       INC     R25
   \                     ??init_vol_dn_2:
   \   00000026   3098                       CPI     R25,8
   \   00000028   F3A8                       BRCS    ??init_vol_dn_3
   \   0000002A   9189                       LD      R24,Y+
   \   0000002C   9199                       LD      R25,Y+
   \   0000002E   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void init_vol(unsigned char)
   \                     init_vol:
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
   \   00000004   2F90                       MOV     R25,R16
   \   00000006   E080                       LDI     R24,0
   \   00000008   C009                       RJMP    ??init_vol_0
   \                     ??init_vol_1:
   \   0000000A   2F29                       MOV     R18,R25
   \   0000000C   2F18                       MOV     R17,R24
   \   0000000E   E900                       LDI     R16,144
   \   00000010   ....                       RCALL   I2C_Write
   \   00000012   2F29                       MOV     R18,R25
   \   00000014   2F18                       MOV     R17,R24
   \   00000016   E902                       LDI     R16,146
   \   00000018   ....                       RCALL   I2C_Write
   \   0000001A   9583                       INC     R24
   \                     ??init_vol_0:
   \   0000001C   3088                       CPI     R24,8
   \   0000001E   F3A8                       BRCS    ??init_vol_1
   \   00000020   9189                       LD      R24,Y+
   \   00000022   9199                       LD      R25,Y+
   \   00000024   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void audio_level_sp_down()
   \                     audio_level_sp_down:
   \   00000000   9100....                   LDS     R16,key_func
   \   00000004   2300                       TST     R16
   \   00000006   F4B9                       BRNE    ??audio_level_sp_down_0
   \   00000008   9110....                   LDS     R17,vol_dB
   \   0000000C   9100....                   LDS     R16,vol_dB
   \   00000010   3C05                       CPI     R16,197
   \   00000012   F430                       BRCC    ??audio_level_sp_down_1
   \   00000014   ....                       LDI     R30,LOW(vol_dB)
   \   00000016   ....                       LDI     R31,(vol_dB) >> 8
   \   00000018   8100                       LD      R16,Z
   \   0000001A   5F0D                       SUBI    R16,253
   \   0000001C   8300                       ST      Z,R16
   \   0000001E   C003                       RJMP    ??audio_level_sp_down_2
   \                     ??audio_level_sp_down_1:
   \   00000020   EF0F                       LDI     R16,255
   \   00000022   9300....                   STS     vol_dB,R16
   \                     ??audio_level_sp_down_2:
   \   00000026   9100....                   LDS     R16,vol_dB
   \   0000002A   1710                       CP      R17,R16
   \   0000002C   F021                       BREQ    ??audio_level_sp_down_0
   \   0000002E   ....                       RCALL   volume_set
   \   00000030   9100....                   LDS     R16,vol_dB
   \   00000034   ....                       RCALL   dot_vol_hextodeci
   \                     ??audio_level_sp_down_0:
   \   00000036   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void audio_level_sp_up()
   \                     audio_level_sp_up:
   \   00000000   9100....                   LDS     R16,key_func
   \   00000004   2300                       TST     R16
   \   00000006   F4F9                       BRNE    ??audio_level_sp_up_0
   \   00000008   9110....                   LDS     R17,vol_dB
   \   0000000C   9100....                   LDS     R16,vol_dB
   \   00000010   3F0F                       CPI     R16,255
   \   00000012   F421                       BRNE    ??audio_level_sp_up_1
   \   00000014   EC07                       LDI     R16,199
   \   00000016   9300....                   STS     vol_dB,R16
   \   0000001A   C00D                       RJMP    ??audio_level_sp_up_2
   \                     ??audio_level_sp_up_1:
   \   0000001C   9100....                   LDS     R16,vol_dB
   \   00000020   3003                       CPI     R16,3
   \   00000022   F030                       BRCS    ??audio_level_sp_up_3
   \   00000024   ....                       LDI     R30,LOW(vol_dB)
   \   00000026   ....                       LDI     R31,(vol_dB) >> 8
   \   00000028   8100                       LD      R16,Z
   \   0000002A   5003                       SUBI    R16,3
   \   0000002C   8300                       ST      Z,R16
   \   0000002E   C003                       RJMP    ??audio_level_sp_up_2
   \                     ??audio_level_sp_up_3:
   \   00000030   E000                       LDI     R16,0
   \   00000032   9300....                   STS     vol_dB,R16
   \                     ??audio_level_sp_up_2:
   \   00000036   9100....                   LDS     R16,vol_dB
   \   0000003A   1710                       CP      R17,R16
   \   0000003C   F021                       BREQ    ??audio_level_sp_up_0
   \   0000003E   ....                       RCALL   volume_set
   \   00000040   9100....                   LDS     R16,vol_dB
   \   00000044   ....                       RCALL   dot_vol_hextodeci
   \                     ??audio_level_sp_up_0:
   \   00000046   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void audio_level_down()
   \                     audio_level_down:
   \   00000000   9100....                   LDS     R16,key_func
   \   00000004   2300                       TST     R16
   \   00000006   F4E1                       BRNE    ??audio_level_down_0
   \   00000008   9100....                   LDS     R16,mute_enable
   \   0000000C   2300                       TST     R16
   \   0000000E   F409                       BRNE    ??audio_level_down_1
   \   00000010   ....                       RCALL   ess_mute
   \                     ??audio_level_down_1:
   \   00000012   9110....                   LDS     R17,vol_dB
   \   00000016   9100....                   LDS     R16,vol_dB
   \   0000001A   3C07                       CPI     R16,199
   \   0000001C   F430                       BRCC    ??audio_level_down_2
   \   0000001E   ....                       LDI     R30,LOW(vol_dB)
   \   00000020   ....                       LDI     R31,(vol_dB) >> 8
   \   00000022   8100                       LD      R16,Z
   \   00000024   9503                       INC     R16
   \   00000026   8300                       ST      Z,R16
   \   00000028   C003                       RJMP    ??audio_level_down_3
   \                     ??audio_level_down_2:
   \   0000002A   EF0F                       LDI     R16,255
   \   0000002C   9300....                   STS     vol_dB,R16
   \                     ??audio_level_down_3:
   \   00000030   9100....                   LDS     R16,vol_dB
   \   00000034   1710                       CP      R17,R16
   \   00000036   F021                       BREQ    ??audio_level_down_0
   \   00000038   ....                       RCALL   volume_set
   \   0000003A   9100....                   LDS     R16,vol_dB
   \   0000003E   ....                       RCALL   dot_vol_hextodeci
   \                     ??audio_level_down_0:
   \   00000040   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void audio_level_up()
   \                     audio_level_up:
   \   00000000   9100....                   LDS     R16,key_func
   \   00000004   2300                       TST     R16
   \   00000006   F501                       BRNE    ??audio_level_up_0
   \   00000008   9100....                   LDS     R16,mute_enable
   \   0000000C   2300                       TST     R16
   \   0000000E   F409                       BRNE    ??audio_level_up_1
   \   00000010   ....                       RCALL   ess_mute
   \                     ??audio_level_up_1:
   \   00000012   9110....                   LDS     R17,vol_dB
   \   00000016   9100....                   LDS     R16,vol_dB
   \   0000001A   3F0F                       CPI     R16,255
   \   0000001C   F421                       BRNE    ??audio_level_up_2
   \   0000001E   EC07                       LDI     R16,199
   \   00000020   9300....                   STS     vol_dB,R16
   \   00000024   C009                       RJMP    ??audio_level_up_3
   \                     ??audio_level_up_2:
   \   00000026   9100....                   LDS     R16,vol_dB
   \   0000002A   3001                       CPI     R16,1
   \   0000002C   F028                       BRCS    ??audio_level_up_3
   \   0000002E   ....                       LDI     R30,LOW(vol_dB)
   \   00000030   ....                       LDI     R31,(vol_dB) >> 8
   \   00000032   8100                       LD      R16,Z
   \   00000034   950A                       DEC     R16
   \   00000036   8300                       ST      Z,R16
   \                     ??audio_level_up_3:
   \   00000038   9100....                   LDS     R16,vol_dB
   \   0000003C   1710                       CP      R17,R16
   \   0000003E   F021                       BREQ    ??audio_level_up_0
   \   00000040   ....                       RCALL   volume_set
   \   00000042   9100....                   LDS     R16,vol_dB
   \   00000046   ....                       RCALL   dot_vol_hextodeci
   \                     ??audio_level_up_0:
   \   00000048   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void channel_change()
   \                     channel_change:
   \   00000000   9100....                   LDS     R16,ch_led_data
   \   00000004   3007                       CPI     R16,7
   \   00000006   F411                       BRNE    ??channel_change_0
   \   00000008   E000                       LDI     R16,0
   \   0000000A   C001                       RJMP    ??channel_change_1
   \                     ??channel_change_0:
   \   0000000C   E001                       LDI     R16,1
   \                     ??channel_change_1:
   \   0000000E   9110....                   LDS     R17,i2s_flag
   \   00000012   1701                       CP      R16,R17
   \   00000014   F049                       BREQ    ??channel_change_2
   \   00000016   9300....                   STS     i2s_flag,R16
   \   0000001A   ....                       LDI     R30,LOW(i2s_flag)
   \   0000001C   ....                       LDI     R31,(i2s_flag) >> 8
   \   0000001E   8100                       LD      R16,Z
   \   00000020   FD00                       SBRC    R16,0
   \   00000022   9A1B                       SBI     0x03,0x03
   \                     ??channel_change_3:
   \   00000024   FF00                       SBRS    R16,0
   \   00000026   981B                       CBI     0x03,0x03
   \                     ??channel_change_2:
   \   00000028   ....                       LDI     R30,LOW(interface_ch)
   \   0000002A   ....                       LDI     R31,(interface_ch) >> 8
   \   0000002C   8100                       LD      R16,Z
   \   0000002E   7C07                       ANDI    R16,0xC7
   \   00000030   8300                       ST      Z,R16
   \   00000032   9100....                   LDS     R16,ch_led_data
   \   00000036   0F00                       LSL     R16
   \   00000038   0F00                       LSL     R16
   \   0000003A   0F00                       LSL     R16
   \   0000003C   ....                       LDI     R30,LOW(interface_ch)
   \   0000003E   ....                       LDI     R31,(interface_ch) >> 8
   \   00000040   8110                       LD      R17,Z
   \   00000042   0F10                       ADD     R17,R16
   \   00000044   8310                       ST      Z,R17
   \   00000046   9120....                   LDS     R18,interface_ch
   \   0000004A   E014                       LDI     R17,4
   \   0000004C   E200                       LDI     R16,32
   \   0000004E   ....                       RCALL   I2C_Write
   \   00000050   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void channel_up()
   \                     channel_up:
   \   00000000   9100....                   LDS     R16,key_func
   \   00000004   2300                       TST     R16
   \   00000006   F471                       BRNE    ??channel_up_0
   \   00000008   9100....                   LDS     R16,ch_led_data
   \   0000000C   3007                       CPI     R16,7
   \   0000000E   F430                       BRCC    ??channel_up_1
   \   00000010   ....                       LDI     R30,LOW(ch_led_data)
   \   00000012   ....                       LDI     R31,(ch_led_data) >> 8
   \   00000014   8100                       LD      R16,Z
   \   00000016   9503                       INC     R16
   \   00000018   8300                       ST      Z,R16
   \   0000001A   C003                       RJMP    ??channel_up_2
   \                     ??channel_up_1:
   \   0000001C   E000                       LDI     R16,0
   \   0000001E   9300....                   STS     ch_led_data,R16
   \                     ??channel_up_2:
   \   00000022   ....                       RCALL   channel_change
   \                     ??channel_up_0:
   \   00000024   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void channel_down()
   \                     channel_down:
   \   00000000   9100....                   LDS     R16,key_func
   \   00000004   2300                       TST     R16
   \   00000006   F471                       BRNE    ??channel_down_0
   \   00000008   9100....                   LDS     R16,ch_led_data
   \   0000000C   2300                       TST     R16
   \   0000000E   F031                       BREQ    ??channel_down_1
   \   00000010   ....                       LDI     R30,LOW(ch_led_data)
   \   00000012   ....                       LDI     R31,(ch_led_data) >> 8
   \   00000014   8100                       LD      R16,Z
   \   00000016   950A                       DEC     R16
   \   00000018   8300                       ST      Z,R16
   \   0000001A   C003                       RJMP    ??channel_down_2
   \                     ??channel_down_1:
   \   0000001C   E007                       LDI     R16,7
   \   0000001E   9300....                   STS     ch_led_data,R16
   \                     ??channel_down_2:
   \   00000022   ....                       RCALL   channel_change
   \                     ??channel_down_0:
   \   00000024   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void ess_filter()
   \                     ess_filter:
   \   00000000   ........                   CALL    ?PROLOGUE7_L09
   \   00000004                              REQUIRE ?Register_R4_is_cg_reg
   \   00000004                              REQUIRE ?Register_R5_is_cg_reg
   \   00000004                              REQUIRE ?Register_R6_is_cg_reg
   \   00000004   E000                       LDI     R16,0
   \   00000006   9300....                   STS     rom_save_flag2,R16
   \   0000000A   9100....                   LDS     R16,filter_flag
   \   0000000E   3003                       CPI     R16,3
   \   00000010   F419                       BRNE    ??ess_filter_0
   \   00000012   E000                       LDI     R16,0
   \   00000014   9300....                   STS     filter_flag,R16
   \                     ??ess_filter_0:
   \   00000018   9040....                   LDS     R4,filter_flag
   \   0000001C   2044                       TST     R4
   \   0000001E   F489                       BRNE    ??ess_filter_1
   \   00000020   E020                       LDI     R18,0
   \   00000022   E215                       LDI     R17,37
   \   00000024   E900                       LDI     R16,144
   \   00000026   ....                       RCALL   I2C_Write
   \   00000028   E020                       LDI     R18,0
   \   0000002A   E215                       LDI     R17,37
   \   0000002C   E902                       LDI     R16,146
   \   0000002E   ....                       RCALL   I2C_Write
   \   00000030   E02B                       LDI     R18,11
   \   00000032   E01E                       LDI     R17,14
   \   00000034   E900                       LDI     R16,144
   \   00000036   ....                       RCALL   I2C_Write
   \   00000038   E02B                       LDI     R18,11
   \   0000003A   E01E                       LDI     R17,14
   \   0000003C   E902                       LDI     R16,146
   \   0000003E   ....                       RCALL   I2C_Write
   \   00000040   C104                       RJMP    ??ess_filter_2
   \                     ??ess_filter_1:
   \   00000042   E001                       LDI     R16,1
   \   00000044   1640                       CP      R4,R16
   \   00000046   F021                       BREQ    ??ess_filter_3
   \   00000048   E002                       LDI     R16,2
   \   0000004A   1640                       CP      R4,R16
   \   0000004C   F009                       BREQ    $+2+2
   \   0000004E   C0FD                       RJMP    ??ess_filter_2
   \                     ??ess_filter_3:
   \   00000050   E120                       LDI     R18,16
   \   00000052   E215                       LDI     R17,37
   \   00000054   E900                       LDI     R16,144
   \   00000056   ....                       RCALL   I2C_Write
   \   00000058   E120                       LDI     R18,16
   \   0000005A   E215                       LDI     R17,37
   \   0000005C   E902                       LDI     R16,146
   \   0000005E   ....                       RCALL   I2C_Write
   \   00000060   2466                       CLR     R6
   \   00000062   C02F                       RJMP    ??ess_filter_4
   \                     ??ess_filter_5:
   \   00000064   019D                       MOVW    R19 : R18,R27 : R26
   \   00000066   2F03                       MOV     R16,R19
   \   00000068   2F20                       MOV     R18,R16
   \   0000006A   E219                       LDI     R17,41
   \   0000006C   E900                       LDI     R16,144
   \   0000006E   ....                       RCALL   I2C_Write
   \   00000070   019D                       MOVW    R19 : R18,R27 : R26
   \   00000072   2F03                       MOV     R16,R19
   \   00000074   2F20                       MOV     R18,R16
   \   00000076   E219                       LDI     R17,41
   \   00000078   E902                       LDI     R16,146
   \   0000007A   ....                       RCALL   I2C_Write
   \   0000007C   019D                       MOVW    R19 : R18,R27 : R26
   \   0000007E   2F02                       MOV     R16,R18
   \   00000080   2F20                       MOV     R18,R16
   \   00000082   E218                       LDI     R17,40
   \   00000084   E900                       LDI     R16,144
   \   00000086   ....                       RCALL   I2C_Write
   \   00000088   019D                       MOVW    R19 : R18,R27 : R26
   \   0000008A   2F02                       MOV     R16,R18
   \   0000008C   2F20                       MOV     R18,R16
   \   0000008E   E218                       LDI     R17,40
   \   00000090   E902                       LDI     R16,146
   \   00000092   ....                       RCALL   I2C_Write
   \   00000094   019C                       MOVW    R19 : R18,R25 : R24
   \   00000096   2F23                       MOV     R18,R19
   \   00000098   E217                       LDI     R17,39
   \   0000009A   E900                       LDI     R16,144
   \   0000009C   ....                       RCALL   I2C_Write
   \   0000009E   019C                       MOVW    R19 : R18,R25 : R24
   \   000000A0   2F23                       MOV     R18,R19
   \   000000A2   E217                       LDI     R17,39
   \   000000A4   E902                       LDI     R16,146
   \   000000A6   ....                       RCALL   I2C_Write
   \   000000A8   019C                       MOVW    R19 : R18,R25 : R24
   \   000000AA   E216                       LDI     R17,38
   \   000000AC   E900                       LDI     R16,144
   \   000000AE   ....                       RCALL   I2C_Write
   \   000000B0   019C                       MOVW    R19 : R18,R25 : R24
   \   000000B2   E216                       LDI     R17,38
   \   000000B4   E902                       LDI     R16,146
   \   000000B6   ....                       RCALL   I2C_Write
   \   000000B8   9453                       INC     R5
   \                     ??ess_filter_6:
   \   000000BA   E008                       LDI     R16,8
   \   000000BC   1650                       CP      R5,R16
   \   000000BE   F290                       BRCS    ??ess_filter_5
   \   000000C0   9463                       INC     R6
   \                     ??ess_filter_4:
   \   000000C2   E400                       LDI     R16,64
   \   000000C4   1660                       CP      R6,R16
   \   000000C6   F518                       BRCC    ??ess_filter_7
   \   000000C8   E001                       LDI     R16,1
   \   000000CA   1640                       CP      R4,R16
   \   000000CC   F471                       BRNE    ??ess_filter_8
   \   000000CE   2D06                       MOV     R16,R6
   \   000000D0   E010                       LDI     R17,0
   \   000000D2   0F00                       LSL     R16
   \   000000D4   1F11                       ROL     R17
   \   000000D6   0F00                       LSL     R16
   \   000000D8   1F11                       ROL     R17
   \   000000DA   01F8                       MOVW    R31 : R30,R17 : R16
   \   000000DC   ....                       SUBI    R30,LOW((-(f1_coeff_st1) & 0xFFFF))
   \   000000DE   ....                       SBCI    R31,(-(f1_coeff_st1) & 0xFFFF) >> 8
   \   000000E0   8180                       LD      R24,Z
   \   000000E2   8191                       LDD     R25,Z+1
   \   000000E4   81A2                       LDD     R26,Z+2
   \   000000E6   81B3                       LDD     R27,Z+3
   \   000000E8   C010                       RJMP    ??ess_filter_9
   \                     ??ess_filter_8:
   \   000000EA   E002                       LDI     R16,2
   \   000000EC   1640                       CP      R4,R16
   \   000000EE   F469                       BRNE    ??ess_filter_9
   \   000000F0   2D06                       MOV     R16,R6
   \   000000F2   E010                       LDI     R17,0
   \   000000F4   0F00                       LSL     R16
   \   000000F6   1F11                       ROL     R17
   \   000000F8   0F00                       LSL     R16
   \   000000FA   1F11                       ROL     R17
   \   000000FC   01F8                       MOVW    R31 : R30,R17 : R16
   \   000000FE   ....                       SUBI    R30,LOW((-(f2_coeff_st1) & 0xFFFF))
   \   00000100   ....                       SBCI    R31,(-(f2_coeff_st1) & 0xFFFF) >> 8
   \   00000102   8180                       LD      R24,Z
   \   00000104   8191                       LDD     R25,Z+1
   \   00000106   81A2                       LDD     R26,Z+2
   \   00000108   81B3                       LDD     R27,Z+3
   \                     ??ess_filter_9:
   \   0000010A   2455                       CLR     R5
   \   0000010C   CFD6                       RJMP    ??ess_filter_6
   \                     ??ess_filter_7:
   \   0000010E   E020                       LDI     R18,0
   \   00000110   E216                       LDI     R17,38
   \   00000112   E900                       LDI     R16,144
   \   00000114   ....                       RCALL   I2C_Write
   \   00000116   E020                       LDI     R18,0
   \   00000118   E216                       LDI     R17,38
   \   0000011A   E902                       LDI     R16,146
   \   0000011C   ....                       RCALL   I2C_Write
   \   0000011E   E020                       LDI     R18,0
   \   00000120   E215                       LDI     R17,37
   \   00000122   E900                       LDI     R16,144
   \   00000124   ....                       RCALL   I2C_Write
   \   00000126   E020                       LDI     R18,0
   \   00000128   E215                       LDI     R17,37
   \   0000012A   E902                       LDI     R16,146
   \   0000012C   ....                       RCALL   I2C_Write
   \   0000012E   E021                       LDI     R18,1
   \   00000130   E215                       LDI     R17,37
   \   00000132   E900                       LDI     R16,144
   \   00000134   ....                       RCALL   I2C_Write
   \   00000136   E021                       LDI     R18,1
   \   00000138   E215                       LDI     R17,37
   \   0000013A   E902                       LDI     R16,146
   \   0000013C   ....                       RCALL   I2C_Write
   \   0000013E   2466                       CLR     R6
   \   00000140   C02F                       RJMP    ??ess_filter_10
   \                     ??ess_filter_11:
   \   00000142   019D                       MOVW    R19 : R18,R27 : R26
   \   00000144   2F03                       MOV     R16,R19
   \   00000146   2F20                       MOV     R18,R16
   \   00000148   E21D                       LDI     R17,45
   \   0000014A   E900                       LDI     R16,144
   \   0000014C   ....                       RCALL   I2C_Write
   \   0000014E   019D                       MOVW    R19 : R18,R27 : R26
   \   00000150   2F03                       MOV     R16,R19
   \   00000152   2F20                       MOV     R18,R16
   \   00000154   E21D                       LDI     R17,45
   \   00000156   E902                       LDI     R16,146
   \   00000158   ....                       RCALL   I2C_Write
   \   0000015A   019D                       MOVW    R19 : R18,R27 : R26
   \   0000015C   2F02                       MOV     R16,R18
   \   0000015E   2F20                       MOV     R18,R16
   \   00000160   E21C                       LDI     R17,44
   \   00000162   E900                       LDI     R16,144
   \   00000164   ....                       RCALL   I2C_Write
   \   00000166   019D                       MOVW    R19 : R18,R27 : R26
   \   00000168   2F02                       MOV     R16,R18
   \   0000016A   2F20                       MOV     R18,R16
   \   0000016C   E21C                       LDI     R17,44
   \   0000016E   E902                       LDI     R16,146
   \   00000170   ....                       RCALL   I2C_Write
   \   00000172   019C                       MOVW    R19 : R18,R25 : R24
   \   00000174   2F23                       MOV     R18,R19
   \   00000176   E21B                       LDI     R17,43
   \   00000178   E900                       LDI     R16,144
   \   0000017A   ....                       RCALL   I2C_Write
   \   0000017C   019C                       MOVW    R19 : R18,R25 : R24
   \   0000017E   2F23                       MOV     R18,R19
   \   00000180   E21B                       LDI     R17,43
   \   00000182   E902                       LDI     R16,146
   \   00000184   ....                       RCALL   I2C_Write
   \   00000186   019C                       MOVW    R19 : R18,R25 : R24
   \   00000188   E21A                       LDI     R17,42
   \   0000018A   E900                       LDI     R16,144
   \   0000018C   ....                       RCALL   I2C_Write
   \   0000018E   019C                       MOVW    R19 : R18,R25 : R24
   \   00000190   E21A                       LDI     R17,42
   \   00000192   E902                       LDI     R16,146
   \   00000194   ....                       RCALL   I2C_Write
   \   00000196   9453                       INC     R5
   \                     ??ess_filter_12:
   \   00000198   E008                       LDI     R16,8
   \   0000019A   1650                       CP      R5,R16
   \   0000019C   F290                       BRCS    ??ess_filter_11
   \   0000019E   9463                       INC     R6
   \                     ??ess_filter_10:
   \   000001A0   E100                       LDI     R16,16
   \   000001A2   1660                       CP      R6,R16
   \   000001A4   F518                       BRCC    ??ess_filter_13
   \   000001A6   E001                       LDI     R16,1
   \   000001A8   1640                       CP      R4,R16
   \   000001AA   F471                       BRNE    ??ess_filter_14
   \   000001AC   2D06                       MOV     R16,R6
   \   000001AE   E010                       LDI     R17,0
   \   000001B0   0F00                       LSL     R16
   \   000001B2   1F11                       ROL     R17
   \   000001B4   0F00                       LSL     R16
   \   000001B6   1F11                       ROL     R17
   \   000001B8   01F8                       MOVW    R31 : R30,R17 : R16
   \   000001BA   ....                       SUBI    R30,LOW((-(f1_coeff_st2) & 0xFFFF))
   \   000001BC   ....                       SBCI    R31,(-(f1_coeff_st2) & 0xFFFF) >> 8
   \   000001BE   8180                       LD      R24,Z
   \   000001C0   8191                       LDD     R25,Z+1
   \   000001C2   81A2                       LDD     R26,Z+2
   \   000001C4   81B3                       LDD     R27,Z+3
   \   000001C6   C010                       RJMP    ??ess_filter_15
   \                     ??ess_filter_14:
   \   000001C8   E002                       LDI     R16,2
   \   000001CA   1640                       CP      R4,R16
   \   000001CC   F469                       BRNE    ??ess_filter_15
   \   000001CE   2D06                       MOV     R16,R6
   \   000001D0   E010                       LDI     R17,0
   \   000001D2   0F00                       LSL     R16
   \   000001D4   1F11                       ROL     R17
   \   000001D6   0F00                       LSL     R16
   \   000001D8   1F11                       ROL     R17
   \   000001DA   01F8                       MOVW    R31 : R30,R17 : R16
   \   000001DC   ....                       SUBI    R30,LOW((-(f2_coeff_st2) & 0xFFFF))
   \   000001DE   ....                       SBCI    R31,(-(f2_coeff_st2) & 0xFFFF) >> 8
   \   000001E0   8180                       LD      R24,Z
   \   000001E2   8191                       LDD     R25,Z+1
   \   000001E4   81A2                       LDD     R26,Z+2
   \   000001E6   81B3                       LDD     R27,Z+3
   \                     ??ess_filter_15:
   \   000001E8   2455                       CLR     R5
   \   000001EA   CFD6                       RJMP    ??ess_filter_12
   \                     ??ess_filter_13:
   \   000001EC   E020                       LDI     R18,0
   \   000001EE   E21A                       LDI     R17,42
   \   000001F0   E900                       LDI     R16,144
   \   000001F2   ....                       RCALL   I2C_Write
   \   000001F4   E020                       LDI     R18,0
   \   000001F6   E21A                       LDI     R17,42
   \   000001F8   E902                       LDI     R16,146
   \   000001FA   ....                       RCALL   I2C_Write
   \   000001FC   E020                       LDI     R18,0
   \   000001FE   E215                       LDI     R17,37
   \   00000200   E900                       LDI     R16,144
   \   00000202   ....                       RCALL   I2C_Write
   \   00000204   E020                       LDI     R18,0
   \   00000206   E215                       LDI     R17,37
   \   00000208   E902                       LDI     R16,146
   \   0000020A   ....                       RCALL   I2C_Write
   \   0000020C   E222                       LDI     R18,34
   \   0000020E   E215                       LDI     R17,37
   \   00000210   E900                       LDI     R16,144
   \   00000212   ....                       RCALL   I2C_Write
   \   00000214   E222                       LDI     R18,34
   \   00000216   E215                       LDI     R17,37
   \   00000218   E902                       LDI     R16,146
   \   0000021A   ....                       RCALL   I2C_Write
   \   0000021C   E001                       LDI     R16,1
   \   0000021E   1640                       CP      R4,R16
   \   00000220   F449                       BRNE    ??ess_filter_16
   \   00000222   E02A                       LDI     R18,10
   \   00000224   E01E                       LDI     R17,14
   \   00000226   E900                       LDI     R16,144
   \   00000228   ....                       RCALL   I2C_Write
   \   0000022A   E02C                       LDI     R18,12
   \   0000022C   E01E                       LDI     R17,14
   \   0000022E   E902                       LDI     R16,146
   \   00000230   ....                       RCALL   I2C_Write
   \   00000232   C00B                       RJMP    ??ess_filter_2
   \                     ??ess_filter_16:
   \   00000234   E002                       LDI     R16,2
   \   00000236   1640                       CP      R4,R16
   \   00000238   F441                       BRNE    ??ess_filter_2
   \   0000023A   E02A                       LDI     R18,10
   \   0000023C   E01E                       LDI     R17,14
   \   0000023E   E900                       LDI     R16,144
   \   00000240   ....                       RCALL   I2C_Write
   \   00000242   E02E                       LDI     R18,14
   \   00000244   E01E                       LDI     R17,14
   \   00000246   E902                       LDI     R16,146
   \   00000248   ....                       RCALL   I2C_Write
   \                     ??ess_filter_2:
   \   0000024A   E001                       LDI     R16,1
   \   0000024C   9300....                   STS     rom_save_flag2,R16
   \   00000250   E000                       LDI     R16,0
   \   00000252   E010                       LDI     R17,0
   \   00000254   ....                       LDI     R30,LOW(rom_tmr)
   \   00000256   ....                       LDI     R31,(rom_tmr) >> 8
   \   00000258   8300                       ST      Z,R16
   \   0000025A   8311                       STD     Z+1,R17
   \   0000025C   E0E7                       LDI     R30,7
   \   0000025E   ........                   JMP     ?EPILOGUE_B7_L09

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void femto_function()
   \                     femto_function:
   \   00000000   ........                   CALL    ?PROLOGUE4_L09
   \   00000004   9100....                   LDS     R16,key_func
   \   00000008   3001                       CPI     R16,1
   \   0000000A   F021                       BREQ    ??femto_function_0
   \   0000000C   9100....                   LDS     R16,key_func
   \   00000010   3002                       CPI     R16,2
   \   00000012   F421                       BRNE    ??femto_function_1
   \                     ??femto_function_0:
   \   00000014   E001                       LDI     R16,1
   \   00000016   9300....                   STS     key_condition,R16
   \   0000001A   C019                       RJMP    ??femto_function_2
   \                     ??femto_function_1:
   \   0000001C   9100....                   LDS     R16,key_func
   \   00000020   3003                       CPI     R16,3
   \   00000022   F459                       BRNE    ??femto_function_3
   \   00000024   9100....                   LDS     R16,phase_data
   \   00000028   2300                       TST     R16
   \   0000002A   F411                       BRNE    ??femto_function_4
   \   0000002C   E001                       LDI     R16,1
   \   0000002E   C001                       RJMP    ??femto_function_5
   \                     ??femto_function_4:
   \   00000030   E000                       LDI     R16,0
   \                     ??femto_function_5:
   \   00000032   9300....                   STS     phase_data,R16
   \   00000036   ....                       RCALL   phase_ess
   \   00000038   C00A                       RJMP    ??femto_function_2
   \                     ??femto_function_3:
   \   0000003A   9100....                   LDS     R16,key_func
   \   0000003E   3004                       CPI     R16,4
   \   00000040   F431                       BRNE    ??femto_function_2
   \   00000042   ....                       LDI     R30,LOW(filter_flag)
   \   00000044   ....                       LDI     R31,(filter_flag) >> 8
   \   00000046   8100                       LD      R16,Z
   \   00000048   9503                       INC     R16
   \   0000004A   8300                       ST      Z,R16
   \   0000004C   ....                       RCALL   ess_filter
   \                     ??femto_function_2:
   \   0000004E   E080                       LDI     R24,0
   \   00000050   C00D                       RJMP    ??femto_function_6
   \                     ??femto_function_7:
   \   00000052   2FA8                       MOV     R26,R24
   \   00000054   E0B0                       LDI     R27,0
   \   00000056   9718                       SBIW    R27 : R26,8
   \   00000058   01FD                       MOVW    R31 : R30,R27 : R26
   \   0000005A   ....                       SUBI    R30,LOW((-(normal_name) & 0xFFFF))
   \   0000005C   ....                       SBCI    R31,(-(normal_name) & 0xFFFF) >> 8
   \   0000005E   8100                       LD      R16,Z
   \   00000060   E090                       LDI     R25,0
   \   00000062   01FC                       MOVW    R31 : R30,R25 : R24
   \   00000064   ....                       SUBI    R30,LOW((-(dot_string) & 0xFFFF))
   \   00000066   ....                       SBCI    R31,(-(dot_string) & 0xFFFF) >> 8
   \   00000068   8300                       ST      Z,R16
   \                     ??femto_function_8:
   \   0000006A   9583                       INC     R24
   \                     ??femto_function_6:
   \   0000006C   3180                       CPI     R24,16
   \   0000006E   F540                       BRCC    ??femto_function_9
   \   00000070   3088                       CPI     R24,8
   \   00000072   F4A8                       BRCC    ??femto_function_10
   \   00000074   ....                       LDI     R26,LOW(filter_name)
   \   00000076   ....                       LDI     R27,(filter_name) >> 8
   \   00000078   9140....                   LDS     R20,filter_flag
   \   0000007C   E050                       LDI     R21,0
   \   0000007E   E008                       LDI     R16,8
   \   00000080   E010                       LDI     R17,0
   \   00000082   ........                   CALL    ?S_EC_MUL_L02
   \   00000086   0FA0                       ADD     R26,R16
   \   00000088   1FB1                       ADC     R27,R17
   \   0000008A   E090                       LDI     R25,0
   \   0000008C   0FA8                       ADD     R26,R24
   \   0000008E   1FB9                       ADC     R27,R25
   \   00000090   910C                       LD      R16,X
   \   00000092   E090                       LDI     R25,0
   \   00000094   01FC                       MOVW    R31 : R30,R25 : R24
   \   00000096   ....                       SUBI    R30,LOW((-(dot_string) & 0xFFFF))
   \   00000098   ....                       SBCI    R31,(-(dot_string) & 0xFFFF) >> 8
   \   0000009A   8300                       ST      Z,R16
   \   0000009C   CFE6                       RJMP    ??femto_function_8
   \                     ??femto_function_10:
   \   0000009E   9100....                   LDS     R16,phase_data
   \   000000A2   2300                       TST     R16
   \   000000A4   F6B1                       BRNE    ??femto_function_7
   \   000000A6   2FA8                       MOV     R26,R24
   \   000000A8   E0B0                       LDI     R27,0
   \   000000AA   9718                       SBIW    R27 : R26,8
   \   000000AC   01FD                       MOVW    R31 : R30,R27 : R26
   \   000000AE   ....                       SUBI    R30,LOW((-(phase_name) & 0xFFFF))
   \   000000B0   ....                       SBCI    R31,(-(phase_name) & 0xFFFF) >> 8
   \   000000B2   8100                       LD      R16,Z
   \   000000B4   E090                       LDI     R25,0
   \   000000B6   01FC                       MOVW    R31 : R30,R25 : R24
   \   000000B8   ....                       SUBI    R30,LOW((-(dot_string) & 0xFFFF))
   \   000000BA   ....                       SBCI    R31,(-(dot_string) & 0xFFFF) >> 8
   \   000000BC   8300                       ST      Z,R16
   \   000000BE   CFD5                       RJMP    ??femto_function_8
   \                     ??femto_function_9:
   \   000000C0   E000                       LDI     R16,0
   \   000000C2   E010                       LDI     R17,0
   \   000000C4   ....                       LDI     R30,LOW(key_func_tmr)
   \   000000C6   ....                       LDI     R31,(key_func_tmr) >> 8
   \   000000C8   8300                       ST      Z,R16
   \   000000CA   8311                       STD     Z+1,R17
   \   000000CC   ....                       RCALL   dot_string_digit
   \   000000CE   E0E4                       LDI     R30,4
   \   000000D0   ........                   JMP     ?EPILOGUE_B4_L09

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void ex_eeprom_save()
   \                     ex_eeprom_save:
   \   00000000   9100....                   LDS     R16,rom_data_cnt
   \   00000004   3F0F                       CPI     R16,255
   \   00000006   F009                       BREQ    $+2+2
   \   00000008   C07B                       RJMP    ??ex_eeprom_save_0
   \   0000000A   E000                       LDI     R16,0
   \   0000000C   9300....                   STS     rom_data_cnt,R16
   \   00000010   ....                       LDI     R30,LOW(rom_address)
   \   00000012   ....                       LDI     R31,(rom_address) >> 8
   \   00000014   8100                       LD      R16,Z
   \   00000016   8111                       LDD     R17,Z+1
   \   00000018   3F0C                       CPI     R16,252
   \   0000001A   E027                       LDI     R18,7
   \   0000001C   0712                       CPC     R17,R18
   \   0000001E   F009                       BREQ    $+2+2
   \   00000020   C055                       RJMP    ??ex_eeprom_save_1
   \   00000022   E100                       LDI     R16,16
   \   00000024   E010                       LDI     R17,0
   \   00000026   ....                       LDI     R30,LOW(rom_address)
   \   00000028   ....                       LDI     R31,(rom_address) >> 8
   \   0000002A   8300                       ST      Z,R16
   \   0000002C   8311                       STD     Z+1,R17
   \   0000002E   9100....                   LDS     R16,rom_add_pt
   \   00000032   300D                       CPI     R16,13
   \   00000034   F579                       BRNE    ??ex_eeprom_save_2
   \   00000036   ....                       LDI     R30,LOW(rom_cycle)
   \   00000038   ....                       LDI     R31,(rom_cycle) >> 8
   \   0000003A   8100                       LD      R16,Z
   \   0000003C   8111                       LDD     R17,Z+1
   \   0000003E   5F0F                       SUBI    R16,255
   \   00000040   4F1F                       SBCI    R17,255
   \   00000042   8300                       ST      Z,R16
   \   00000044   8311                       STD     Z+1,R17
   \   00000046   E003                       LDI     R16,3
   \   00000048   9300....                   STS     rom_add_pt,R16
   \   0000004C   9120....                   LDS     R18,rom_add_pt
   \   00000050   E000                       LDI     R16,0
   \   00000052   E010                       LDI     R17,0
   \   00000054   ....                       RCALL   rom_I2C_Write
   \   00000056   ....                       LDI     R30,LOW(rom_cycle)
   \   00000058   ....                       LDI     R31,(rom_cycle) >> 8
   \   0000005A   8131                       LDD     R19,Z+1
   \   0000005C   2F23                       MOV     R18,R19
   \   0000005E   E001                       LDI     R16,1
   \   00000060   E010                       LDI     R17,0
   \   00000062   ....                       RCALL   rom_I2C_Write
   \   00000064   ....                       LDI     R30,LOW(rom_cycle)
   \   00000066   ....                       LDI     R31,(rom_cycle) >> 8
   \   00000068   8120                       LD      R18,Z
   \   0000006A   E002                       LDI     R16,2
   \   0000006C   E010                       LDI     R17,0
   \   0000006E   ....                       RCALL   rom_I2C_Write
   \   00000070   ....                       LDI     R30,LOW(rom_address)
   \   00000072   ....                       LDI     R31,(rom_address) >> 8
   \   00000074   8131                       LDD     R19,Z+1
   \   00000076   2F23                       MOV     R18,R19
   \   00000078   9100....                   LDS     R16,rom_add_pt
   \   0000007C   E010                       LDI     R17,0
   \   0000007E   ....                       RCALL   rom_I2C_Write
   \   00000080   ....                       LDI     R30,LOW(rom_address)
   \   00000082   ....                       LDI     R31,(rom_address) >> 8
   \   00000084   8120                       LD      R18,Z
   \   00000086   9100....                   LDS     R16,rom_add_pt
   \   0000008A   E010                       LDI     R17,0
   \   0000008C   5F0F                       SUBI    R16,255
   \   0000008E   4F1F                       SBCI    R17,255
   \   00000090   ....                       RCALL   rom_I2C_Write
   \   00000092   C03B                       RJMP    ??ex_eeprom_save_3
   \                     ??ex_eeprom_save_2:
   \   00000094   ....                       LDI     R30,LOW(rom_add_pt)
   \   00000096   ....                       LDI     R31,(rom_add_pt) >> 8
   \   00000098   8100                       LD      R16,Z
   \   0000009A   5F0E                       SUBI    R16,254
   \   0000009C   8300                       ST      Z,R16
   \   0000009E   9120....                   LDS     R18,rom_add_pt
   \   000000A2   E000                       LDI     R16,0
   \   000000A4   E010                       LDI     R17,0
   \   000000A6   ....                       RCALL   rom_I2C_Write
   \   000000A8   ....                       LDI     R30,LOW(rom_address)
   \   000000AA   ....                       LDI     R31,(rom_address) >> 8
   \   000000AC   8131                       LDD     R19,Z+1
   \   000000AE   2F23                       MOV     R18,R19
   \   000000B0   9100....                   LDS     R16,rom_add_pt
   \   000000B4   E010                       LDI     R17,0
   \   000000B6   ....                       RCALL   rom_I2C_Write
   \   000000B8   ....                       LDI     R30,LOW(rom_address)
   \   000000BA   ....                       LDI     R31,(rom_address) >> 8
   \   000000BC   8120                       LD      R18,Z
   \   000000BE   9100....                   LDS     R16,rom_add_pt
   \   000000C2   E010                       LDI     R17,0
   \   000000C4   5F0F                       SUBI    R16,255
   \   000000C6   4F1F                       SBCI    R17,255
   \   000000C8   ....                       RCALL   rom_I2C_Write
   \   000000CA   C01F                       RJMP    ??ex_eeprom_save_3
   \                     ??ex_eeprom_save_1:
   \   000000CC   ....                       LDI     R30,LOW(rom_address)
   \   000000CE   ....                       LDI     R31,(rom_address) >> 8
   \   000000D0   8100                       LD      R16,Z
   \   000000D2   8111                       LDD     R17,Z+1
   \   000000D4   5F0D                       SUBI    R16,253
   \   000000D6   4F1F                       SBCI    R17,255
   \   000000D8   8300                       ST      Z,R16
   \   000000DA   8311                       STD     Z+1,R17
   \   000000DC   ....                       LDI     R30,LOW(rom_address)
   \   000000DE   ....                       LDI     R31,(rom_address) >> 8
   \   000000E0   8131                       LDD     R19,Z+1
   \   000000E2   2F23                       MOV     R18,R19
   \   000000E4   9100....                   LDS     R16,rom_add_pt
   \   000000E8   E010                       LDI     R17,0
   \   000000EA   ....                       RCALL   rom_I2C_Write
   \   000000EC   ....                       LDI     R30,LOW(rom_address)
   \   000000EE   ....                       LDI     R31,(rom_address) >> 8
   \   000000F0   8120                       LD      R18,Z
   \   000000F2   9100....                   LDS     R16,rom_add_pt
   \   000000F6   E010                       LDI     R17,0
   \   000000F8   5F0F                       SUBI    R16,255
   \   000000FA   4F1F                       SBCI    R17,255
   \   000000FC   ....                       RCALL   rom_I2C_Write
   \   000000FE   C005                       RJMP    ??ex_eeprom_save_3
   \                     ??ex_eeprom_save_0:
   \   00000100   ....                       LDI     R30,LOW(rom_data_cnt)
   \   00000102   ....                       LDI     R31,(rom_data_cnt) >> 8
   \   00000104   8100                       LD      R16,Z
   \   00000106   9503                       INC     R16
   \   00000108   8300                       ST      Z,R16
   \                     ??ex_eeprom_save_3:
   \   0000010A   9120....                   LDS     R18,rom_data_cnt
   \   0000010E   ....                       LDI     R30,LOW(rom_address)
   \   00000110   ....                       LDI     R31,(rom_address) >> 8
   \   00000112   8100                       LD      R16,Z
   \   00000114   8111                       LDD     R17,Z+1
   \   00000116   ........                   CALL    rom_I2C_Write
   \   0000011A   ....                       LDI     R30,LOW(rom_data)
   \   0000011C   ....                       LDI     R31,(rom_data) >> 8
   \   0000011E   8131                       LDD     R19,Z+1
   \   00000120   2F23                       MOV     R18,R19
   \   00000122   ....                       LDI     R30,LOW(rom_address)
   \   00000124   ....                       LDI     R31,(rom_address) >> 8
   \   00000126   8100                       LD      R16,Z
   \   00000128   8111                       LDD     R17,Z+1
   \   0000012A   5F0F                       SUBI    R16,255
   \   0000012C   4F1F                       SBCI    R17,255
   \   0000012E   ........                   CALL    rom_I2C_Write
   \   00000132   ....                       LDI     R30,LOW(rom_data)
   \   00000134   ....                       LDI     R31,(rom_data) >> 8
   \   00000136   8120                       LD      R18,Z
   \   00000138   ....                       LDI     R30,LOW(rom_address)
   \   0000013A   ....                       LDI     R31,(rom_address) >> 8
   \   0000013C   8100                       LD      R16,Z
   \   0000013E   8111                       LDD     R17,Z+1
   \   00000140   5F0E                       SUBI    R16,254
   \   00000142   4F1F                       SBCI    R17,255
   \   00000144   ........                   CALL    rom_I2C_Write
   \   00000148   9508                       RET

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   char __near _flg_on_remocon
   \                     _flg_on_remocon:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   char __near _code_remocon
   \                     _code_remocon:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near _counter_remocon
   \                     _counter_remocon:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   int __near _remocon_custom
   \                     _remocon_custom:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   int __near _remocon_custom_2
   \                     _remocon_custom_2:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   int __near _remocon_data
   \                     _remocon_data:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   int __near Remoc_data_save
   \                     Remoc_data_save:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   int __near _remocon_data_2
   \                     _remocon_data_2:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   char __near _remocon_counter
   \                     _remocon_counter:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   char __near _flgOrKey
   \                     _flgOrKey:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   char __near _flg_enter
   \                     _flg_enter:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near _remocon_buffer
   \                     _remocon_buffer:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   char __near _flg_repeat
   \                     _flg_repeat:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near _remocon_repeat_count
   \                     _remocon_repeat_count:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   char __near _flg_run_repeat
   \                     _flg_run_repeat:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   char __near _flg_allow_remocon_repeat
   \                     _flg_allow_remocon_repeat:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   char __near bit_input
   \                     bit_input:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near _repeat_remocon
   \                     _repeat_remocon:
   \   00000000                              DS 1

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \   unsigned char __near _repeat_data
   \                     _repeat_data:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for _repeat_data>`

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near low_bit_time
   \                     low_bit_time:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near low_start_flag
   \                     low_start_flag:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near high_bit_0
   \                     high_bit_0:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near high_bit_1
   \                     high_bit_1:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near high_start_flag
   \                     high_start_flag:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near high_repeat_flag0
   \                     high_repeat_flag0:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near high_repeat_flag1
   \                     high_repeat_flag1:
   \   00000000                              DS 1

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near ir_error_check
   \                     ir_error_check:
   \   00000000                              DS 1

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc __interrupt void TIMER2_OVF_Handler()
   \                     TIMER2_OVF_Handler:
   \   00000000   93FA                       ST      -Y,R31
   \   00000002   93EA                       ST      -Y,R30
   \   00000004   933A                       ST      -Y,R19
   \   00000006   932A                       ST      -Y,R18
   \   00000008   931A                       ST      -Y,R17
   \   0000000A   930A                       ST      -Y,R16
   \   0000000C   B73F                       IN      R19,0x3F
   \   0000000E   E307                       LDI     R16,55
   \   00000010   BD04                       OUT     0x24,R16
   \   00000012   ....                       LDI     R30,LOW(_counter_remocon)
   \   00000014   ....                       LDI     R31,(_counter_remocon) >> 8
   \   00000016   8100                       LD      R16,Z
   \   00000018   8111                       LDD     R17,Z+1
   \   0000001A   5F0F                       SUBI    R16,255
   \   0000001C   4F1F                       SBCI    R17,255
   \   0000001E   8300                       ST      Z,R16
   \   00000020   8311                       STD     Z+1,R17
   \   00000022   ....                       LDI     R30,LOW(_counter_remocon)
   \   00000024   ....                       LDI     R31,(_counter_remocon) >> 8
   \   00000026   8100                       LD      R16,Z
   \   00000028   8111                       LDD     R17,Z+1
   \   0000002A   340D                       CPI     R16,77
   \   0000002C   E024                       LDI     R18,4
   \   0000002E   0712                       CPC     R17,R18
   \   00000030   F408                       BRCC    $+2+2
   \   00000032   C052                       RJMP    ??TIMER2_OVF_Handler_0
   \   00000034   E000                       LDI     R16,0
   \   00000036   9300....                   STS     _flg_on_remocon,R16
   \   0000003A   E000                       LDI     R16,0
   \   0000003C   9300....                   STS     _code_remocon,R16
   \   00000040   E000                       LDI     R16,0
   \   00000042   E010                       LDI     R17,0
   \   00000044   ....                       LDI     R30,LOW(_remocon_custom_2)
   \   00000046   ....                       LDI     R31,(_remocon_custom_2) >> 8
   \   00000048   8300                       ST      Z,R16
   \   0000004A   8311                       STD     Z+1,R17
   \   0000004C   E000                       LDI     R16,0
   \   0000004E   E010                       LDI     R17,0
   \   00000050   ....                       LDI     R30,LOW(_remocon_custom)
   \   00000052   ....                       LDI     R31,(_remocon_custom) >> 8
   \   00000054   8300                       ST      Z,R16
   \   00000056   8311                       STD     Z+1,R17
   \   00000058   E000                       LDI     R16,0
   \   0000005A   E010                       LDI     R17,0
   \   0000005C   ....                       LDI     R30,LOW(_remocon_data)
   \   0000005E   ....                       LDI     R31,(_remocon_data) >> 8
   \   00000060   8300                       ST      Z,R16
   \   00000062   8311                       STD     Z+1,R17
   \   00000064   E000                       LDI     R16,0
   \   00000066   E010                       LDI     R17,0
   \   00000068   ....                       LDI     R30,LOW(_remocon_data_2)
   \   0000006A   ....                       LDI     R31,(_remocon_data_2) >> 8
   \   0000006C   8300                       ST      Z,R16
   \   0000006E   8311                       STD     Z+1,R17
   \   00000070   E000                       LDI     R16,0
   \   00000072   9300....                   STS     _remocon_counter,R16
   \   00000076   E000                       LDI     R16,0
   \   00000078   9300....                   STS     low_start_flag,R16
   \   0000007C   E000                       LDI     R16,0
   \   0000007E   9300....                   STS     high_start_flag,R16
   \   00000082   E000                       LDI     R16,0
   \   00000084   9300....                   STS     low_bit_time,R16
   \   00000088   E000                       LDI     R16,0
   \   0000008A   9300....                   STS     high_bit_0,R16
   \   0000008E   E000                       LDI     R16,0
   \   00000090   9300....                   STS     high_bit_1,R16
   \   00000094   E000                       LDI     R16,0
   \   00000096   9300....                   STS     high_repeat_flag0,R16
   \   0000009A   E000                       LDI     R16,0
   \   0000009C   9300....                   STS     high_repeat_flag1,R16
   \   000000A0   E000                       LDI     R16,0
   \   000000A2   9300....                   STS     _repeat_remocon,R16
   \   000000A6   E000                       LDI     R16,0
   \   000000A8   E010                       LDI     R17,0
   \   000000AA   ....                       LDI     R30,LOW(_counter_remocon)
   \   000000AC   ....                       LDI     R31,(_counter_remocon) >> 8
   \   000000AE   8300                       ST      Z,R16
   \   000000B0   8311                       STD     Z+1,R17
   \   000000B2   E000                       LDI     R16,0
   \   000000B4   9300....                   STS     ir_error_check,R16
   \   000000B8   E001                       LDI     R16,1
   \   000000BA   9300....                   STS     rom_save_flag,R16
   \   000000BE   9100....                   LDS     R16,rom_save_flag
   \   000000C2   2300                       TST     R16
   \   000000C4   F449                       BRNE    ??TIMER2_OVF_Handler_0
   \   000000C6   E001                       LDI     R16,1
   \   000000C8   9300....                   STS     rom_save_flag,R16
   \   000000CC   E000                       LDI     R16,0
   \   000000CE   E010                       LDI     R17,0
   \   000000D0   ....                       LDI     R30,LOW(rom_tmr)
   \   000000D2   ....                       LDI     R31,(rom_tmr) >> 8
   \   000000D4   8300                       ST      Z,R16
   \   000000D6   8311                       STD     Z+1,R17
   \                     ??TIMER2_OVF_Handler_0:
   \   000000D8   BF3F                       OUT     0x3F,R19
   \   000000DA   9109                       LD      R16,Y+
   \   000000DC   9119                       LD      R17,Y+
   \   000000DE   9129                       LD      R18,Y+
   \   000000E0   9139                       LD      R19,Y+
   \   000000E2   91E9                       LD      R30,Y+
   \   000000E4   91F9                       LD      R31,Y+
   \   000000E6   9518                       RETI

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void remocon_data()
   \                     remocon_data:
   \   00000000   9100....                   LDS     R16,_code_remocon
   \   00000004   5001                       SUBI    R16,1
   \   00000006   F041                       BREQ    ??remocon_data_0
   \   00000008   950A                       DEC     R16
   \   0000000A   F0E1                       BREQ    ??remocon_data_1
   \   0000000C   950A                       DEC     R16
   \   0000000E   F181                       BREQ    ??remocon_data_2
   \   00000010   950A                       DEC     R16
   \   00000012   F409                       BRNE    $+2+2
   \   00000014   C043                       RJMP    ??remocon_data_3
   \   00000016   C057                       RJMP    ??remocon_data_4
   \                     ??remocon_data_0:
   \   00000018   ....                       LDI     R30,LOW(_remocon_custom)
   \   0000001A   ....                       LDI     R31,(_remocon_custom) >> 8
   \   0000001C   8100                       LD      R16,Z
   \   0000001E   8111                       LDD     R17,Z+1
   \   00000020   0F00                       LSL     R16
   \   00000022   1F11                       ROL     R17
   \   00000024   ....                       LDI     R30,LOW(_remocon_custom)
   \   00000026   ....                       LDI     R31,(_remocon_custom) >> 8
   \   00000028   8300                       ST      Z,R16
   \   0000002A   8311                       STD     Z+1,R17
   \   0000002C   9100....                   LDS     R16,bit_input
   \   00000030   E010                       LDI     R17,0
   \   00000032   ....                       LDI     R30,LOW(_remocon_custom)
   \   00000034   ....                       LDI     R31,(_remocon_custom) >> 8
   \   00000036   8120                       LD      R18,Z
   \   00000038   8131                       LDD     R19,Z+1
   \   0000003A   2B20                       OR      R18,R16
   \   0000003C   2B31                       OR      R19,R17
   \   0000003E   8320                       ST      Z,R18
   \   00000040   8331                       STD     Z+1,R19
   \   00000042   C041                       RJMP    ??remocon_data_4
   \                     ??remocon_data_1:
   \   00000044   ....                       LDI     R30,LOW(_remocon_custom_2)
   \   00000046   ....                       LDI     R31,(_remocon_custom_2) >> 8
   \   00000048   8100                       LD      R16,Z
   \   0000004A   8111                       LDD     R17,Z+1
   \   0000004C   0F00                       LSL     R16
   \   0000004E   1F11                       ROL     R17
   \   00000050   ....                       LDI     R30,LOW(_remocon_custom_2)
   \   00000052   ....                       LDI     R31,(_remocon_custom_2) >> 8
   \   00000054   8300                       ST      Z,R16
   \   00000056   8311                       STD     Z+1,R17
   \   00000058   9100....                   LDS     R16,bit_input
   \   0000005C   E010                       LDI     R17,0
   \   0000005E   ....                       LDI     R30,LOW(_remocon_custom_2)
   \   00000060   ....                       LDI     R31,(_remocon_custom_2) >> 8
   \   00000062   8120                       LD      R18,Z
   \   00000064   8131                       LDD     R19,Z+1
   \   00000066   2B20                       OR      R18,R16
   \   00000068   2B31                       OR      R19,R17
   \   0000006A   8320                       ST      Z,R18
   \   0000006C   8331                       STD     Z+1,R19
   \   0000006E   C02B                       RJMP    ??remocon_data_4
   \                     ??remocon_data_2:
   \   00000070   ....                       LDI     R30,LOW(_remocon_data)
   \   00000072   ....                       LDI     R31,(_remocon_data) >> 8
   \   00000074   8100                       LD      R16,Z
   \   00000076   8111                       LDD     R17,Z+1
   \   00000078   0F00                       LSL     R16
   \   0000007A   1F11                       ROL     R17
   \   0000007C   ....                       LDI     R30,LOW(_remocon_data)
   \   0000007E   ....                       LDI     R31,(_remocon_data) >> 8
   \   00000080   8300                       ST      Z,R16
   \   00000082   8311                       STD     Z+1,R17
   \   00000084   9100....                   LDS     R16,bit_input
   \   00000088   E010                       LDI     R17,0
   \   0000008A   ....                       LDI     R30,LOW(_remocon_data)
   \   0000008C   ....                       LDI     R31,(_remocon_data) >> 8
   \   0000008E   8120                       LD      R18,Z
   \   00000090   8131                       LDD     R19,Z+1
   \   00000092   2B20                       OR      R18,R16
   \   00000094   2B31                       OR      R19,R17
   \   00000096   8320                       ST      Z,R18
   \   00000098   8331                       STD     Z+1,R19
   \   0000009A   C015                       RJMP    ??remocon_data_4
   \                     ??remocon_data_3:
   \   0000009C   ....                       LDI     R30,LOW(_remocon_data_2)
   \   0000009E   ....                       LDI     R31,(_remocon_data_2) >> 8
   \   000000A0   8100                       LD      R16,Z
   \   000000A2   8111                       LDD     R17,Z+1
   \   000000A4   0F00                       LSL     R16
   \   000000A6   1F11                       ROL     R17
   \   000000A8   ....                       LDI     R30,LOW(_remocon_data_2)
   \   000000AA   ....                       LDI     R31,(_remocon_data_2) >> 8
   \   000000AC   8300                       ST      Z,R16
   \   000000AE   8311                       STD     Z+1,R17
   \   000000B0   9100....                   LDS     R16,bit_input
   \   000000B4   E010                       LDI     R17,0
   \   000000B6   ....                       LDI     R30,LOW(_remocon_data_2)
   \   000000B8   ....                       LDI     R31,(_remocon_data_2) >> 8
   \   000000BA   8120                       LD      R18,Z
   \   000000BC   8131                       LDD     R19,Z+1
   \   000000BE   2B20                       OR      R18,R16
   \   000000C0   2B31                       OR      R19,R17
   \   000000C2   8320                       ST      Z,R18
   \   000000C4   8331                       STD     Z+1,R19
   \                     ??remocon_data_4:
   \   000000C6   ....                       LDI     R30,LOW(_remocon_counter)
   \   000000C8   ....                       LDI     R31,(_remocon_counter) >> 8
   \   000000CA   8100                       LD      R16,Z
   \   000000CC   9503                       INC     R16
   \   000000CE   8300                       ST      Z,R16
   \   000000D0   9100....                   LDS     R16,_remocon_counter
   \   000000D4   3008                       CPI     R16,8
   \   000000D6   F040                       BRCS    ??remocon_data_5
   \   000000D8   ....                       LDI     R30,LOW(_code_remocon)
   \   000000DA   ....                       LDI     R31,(_code_remocon) >> 8
   \   000000DC   8100                       LD      R16,Z
   \   000000DE   9503                       INC     R16
   \   000000E0   8300                       ST      Z,R16
   \   000000E2   E000                       LDI     R16,0
   \   000000E4   9300....                   STS     _remocon_counter,R16
   \                     ??remocon_data_5:
   \   000000E8   9100....                   LDS     R16,_code_remocon
   \   000000EC   3005                       CPI     R16,5
   \   000000EE   F408                       BRCC    $+2+2
   \   000000F0   C0D6                       RJMP    ??remocon_data_6
   \   000000F2   ....                       LDI     R30,LOW(_remocon_custom)
   \   000000F4   ....                       LDI     R31,(_remocon_custom) >> 8
   \   000000F6   8100                       LD      R16,Z
   \   000000F8   8111                       LDD     R17,Z+1
   \   000000FA   700F                       ANDI    R16,0x0F
   \   000000FC   7010                       ANDI    R17,0x00
   \   000000FE   8300                       ST      Z,R16
   \   00000100   8311                       STD     Z+1,R17
   \   00000102   ....                       LDI     R30,LOW(_remocon_custom_2)
   \   00000104   ....                       LDI     R31,(_remocon_custom_2) >> 8
   \   00000106   8100                       LD      R16,Z
   \   00000108   8111                       LDD     R17,Z+1
   \   0000010A   700F                       ANDI    R16,0x0F
   \   0000010C   7010                       ANDI    R17,0x00
   \   0000010E   8300                       ST      Z,R16
   \   00000110   8311                       STD     Z+1,R17
   \   00000112   ....                       LDI     R30,LOW(_remocon_custom)
   \   00000114   ....                       LDI     R31,(_remocon_custom) >> 8
   \   00000116   8100                       LD      R16,Z
   \   00000118   8111                       LDD     R17,Z+1
   \   0000011A   3007                       CPI     R16,7
   \   0000011C   E020                       LDI     R18,0
   \   0000011E   0712                       CPC     R17,R18
   \   00000120   F009                       BREQ    $+2+2
   \   00000122   C081                       RJMP    ??remocon_data_7
   \   00000124   ....                       LDI     R30,LOW(_remocon_custom_2)
   \   00000126   ....                       LDI     R31,(_remocon_custom_2) >> 8
   \   00000128   8100                       LD      R16,Z
   \   0000012A   8111                       LDD     R17,Z+1
   \   0000012C   300A                       CPI     R16,10
   \   0000012E   E020                       LDI     R18,0
   \   00000130   0712                       CPC     R17,R18
   \   00000132   F009                       BREQ    $+2+2
   \   00000134   C078                       RJMP    ??remocon_data_7
   \   00000136   ....                       LDI     R30,LOW(_remocon_data_2)
   \   00000138   ....                       LDI     R31,(_remocon_data_2) >> 8
   \   0000013A   8120                       LD      R18,Z
   \   0000013C   8131                       LDD     R19,Z+1
   \   0000013E   ....                       LDI     R30,LOW(_remocon_data)
   \   00000140   ....                       LDI     R31,(_remocon_data) >> 8
   \   00000142   8140                       LD      R20,Z
   \   00000144   8151                       LDD     R21,Z+1
   \   00000146   EF0F                       LDI     R16,255
   \   00000148   E010                       LDI     R17,0
   \   0000014A   2704                       EOR     R16,R20
   \   0000014C   2715                       EOR     R17,R21
   \   0000014E   1720                       CP      R18,R16
   \   00000150   0731                       CPC     R19,R17
   \   00000152   F009                       BREQ    $+2+2
   \   00000154   C068                       RJMP    ??remocon_data_7
   \   00000156   ....                       LDI     R30,LOW(_remocon_data)
   \   00000158   ....                       LDI     R31,(_remocon_data) >> 8
   \   0000015A   8100                       LD      R16,Z
   \   0000015C   9300....                   STS     _repeat_data,R16
   \   00000160   9100....                   LDS     R16,init_setting_check
   \   00000164   2300                       TST     R16
   \   00000166   F409                       BRNE    $+2+2
   \   00000168   C05E                       RJMP    ??remocon_data_7
   \   0000016A   E000                       LDI     R16,0
   \   0000016C   9300....                   STS     rom_save_flag,R16
   \   00000170   ....                       LDI     R30,LOW(_remocon_data)
   \   00000172   ....                       LDI     R31,(_remocon_data) >> 8
   \   00000174   8100                       LD      R16,Z
   \   00000176   8111                       LDD     R17,Z+1
   \   00000178   3B00                       CPI     R16,176
   \   0000017A   E020                       LDI     R18,0
   \   0000017C   0712                       CPC     R17,R18
   \   0000017E   F411                       BRNE    ??remocon_data_8
   \   00000180   ....                       RCALL   ess_mute
   \   00000182   C051                       RJMP    ??remocon_data_7
   \                     ??remocon_data_8:
   \   00000184   ....                       LDI     R30,LOW(_remocon_data)
   \   00000186   ....                       LDI     R31,(_remocon_data) >> 8
   \   00000188   8100                       LD      R16,Z
   \   0000018A   8111                       LDD     R17,Z+1
   \   0000018C   3800                       CPI     R16,128
   \   0000018E   E020                       LDI     R18,0
   \   00000190   0712                       CPC     R17,R18
   \   00000192   F411                       BRNE    ??remocon_data_9
   \   00000194   ....                       RCALL   audio_level_up
   \   00000196   C047                       RJMP    ??remocon_data_7
   \                     ??remocon_data_9:
   \   00000198   ....                       LDI     R30,LOW(_remocon_data)
   \   0000019A   ....                       LDI     R31,(_remocon_data) >> 8
   \   0000019C   8100                       LD      R16,Z
   \   0000019E   8111                       LDD     R17,Z+1
   \   000001A0   3A08                       CPI     R16,168
   \   000001A2   E020                       LDI     R18,0
   \   000001A4   0712                       CPC     R17,R18
   \   000001A6   F411                       BRNE    ??remocon_data_10
   \   000001A8   ....                       RCALL   audio_level_down
   \   000001AA   C03D                       RJMP    ??remocon_data_7
   \                     ??remocon_data_10:
   \   000001AC   ....                       LDI     R30,LOW(_remocon_data)
   \   000001AE   ....                       LDI     R31,(_remocon_data) >> 8
   \   000001B0   8100                       LD      R16,Z
   \   000001B2   8111                       LDD     R17,Z+1
   \   000001B4   3900                       CPI     R16,144
   \   000001B6   E020                       LDI     R18,0
   \   000001B8   0712                       CPC     R17,R18
   \   000001BA   F411                       BRNE    ??remocon_data_11
   \   000001BC   ....                       RCALL   channel_up
   \   000001BE   C033                       RJMP    ??remocon_data_7
   \                     ??remocon_data_11:
   \   000001C0   ....                       LDI     R30,LOW(_remocon_data)
   \   000001C2   ....                       LDI     R31,(_remocon_data) >> 8
   \   000001C4   8100                       LD      R16,Z
   \   000001C6   8111                       LDD     R17,Z+1
   \   000001C8   3808                       CPI     R16,136
   \   000001CA   E020                       LDI     R18,0
   \   000001CC   0712                       CPC     R17,R18
   \   000001CE   F411                       BRNE    ??remocon_data_12
   \   000001D0   ....                       RCALL   channel_down
   \   000001D2   C029                       RJMP    ??remocon_data_7
   \                     ??remocon_data_12:
   \   000001D4   ....                       LDI     R30,LOW(_remocon_data)
   \   000001D6   ....                       LDI     R31,(_remocon_data) >> 8
   \   000001D8   8100                       LD      R16,Z
   \   000001DA   8111                       LDD     R17,Z+1
   \   000001DC   3A00                       CPI     R16,160
   \   000001DE   E020                       LDI     R18,0
   \   000001E0   0712                       CPC     R17,R18
   \   000001E2   F469                       BRNE    ??remocon_data_13
   \   000001E4   9100....                   LDS     R16,key_condition
   \   000001E8   2300                       TST     R16
   \   000001EA   F421                       BRNE    ??remocon_data_14
   \   000001EC   E001                       LDI     R16,1
   \   000001EE   9300....                   STS     key_func,R16
   \   000001F2   C003                       RJMP    ??remocon_data_15
   \                     ??remocon_data_14:
   \   000001F4   E003                       LDI     R16,3
   \   000001F6   9300....                   STS     key_func,R16
   \                     ??remocon_data_15:
   \   000001FA   ....                       RCALL   femto_function
   \   000001FC   C014                       RJMP    ??remocon_data_7
   \                     ??remocon_data_13:
   \   000001FE   ....                       LDI     R30,LOW(_remocon_data)
   \   00000200   ....                       LDI     R31,(_remocon_data) >> 8
   \   00000202   8100                       LD      R16,Z
   \   00000204   8111                       LDD     R17,Z+1
   \   00000206   3908                       CPI     R16,152
   \   00000208   E020                       LDI     R18,0
   \   0000020A   0712                       CPC     R17,R18
   \   0000020C   F461                       BRNE    ??remocon_data_7
   \   0000020E   9100....                   LDS     R16,key_condition
   \   00000212   2300                       TST     R16
   \   00000214   F421                       BRNE    ??remocon_data_16
   \   00000216   E002                       LDI     R16,2
   \   00000218   9300....                   STS     key_func,R16
   \   0000021C   C003                       RJMP    ??remocon_data_17
   \                     ??remocon_data_16:
   \   0000021E   E004                       LDI     R16,4
   \   00000220   9300....                   STS     key_func,R16
   \                     ??remocon_data_17:
   \   00000224   ....                       RCALL   femto_function
   \                     ??remocon_data_7:
   \   00000226   E000                       LDI     R16,0
   \   00000228   9300....                   STS     _flg_on_remocon,R16
   \   0000022C   E000                       LDI     R16,0
   \   0000022E   9300....                   STS     _code_remocon,R16
   \   00000232   E000                       LDI     R16,0
   \   00000234   E010                       LDI     R17,0
   \   00000236   ....                       LDI     R30,LOW(_remocon_custom_2)
   \   00000238   ....                       LDI     R31,(_remocon_custom_2) >> 8
   \   0000023A   8300                       ST      Z,R16
   \   0000023C   8311                       STD     Z+1,R17
   \   0000023E   E000                       LDI     R16,0
   \   00000240   E010                       LDI     R17,0
   \   00000242   ....                       LDI     R30,LOW(_remocon_custom)
   \   00000244   ....                       LDI     R31,(_remocon_custom) >> 8
   \   00000246   8300                       ST      Z,R16
   \   00000248   8311                       STD     Z+1,R17
   \   0000024A   E000                       LDI     R16,0
   \   0000024C   E010                       LDI     R17,0
   \   0000024E   ....                       LDI     R30,LOW(_remocon_data)
   \   00000250   ....                       LDI     R31,(_remocon_data) >> 8
   \   00000252   8300                       ST      Z,R16
   \   00000254   8311                       STD     Z+1,R17
   \   00000256   E000                       LDI     R16,0
   \   00000258   E010                       LDI     R17,0
   \   0000025A   ....                       LDI     R30,LOW(_remocon_data_2)
   \   0000025C   ....                       LDI     R31,(_remocon_data_2) >> 8
   \   0000025E   8300                       ST      Z,R16
   \   00000260   8311                       STD     Z+1,R17
   \   00000262   E000                       LDI     R16,0
   \   00000264   9300....                   STS     _remocon_counter,R16
   \   00000268   E000                       LDI     R16,0
   \   0000026A   9300....                   STS     low_start_flag,R16
   \   0000026E   E000                       LDI     R16,0
   \   00000270   9300....                   STS     high_start_flag,R16
   \   00000274   E000                       LDI     R16,0
   \   00000276   9300....                   STS     low_bit_time,R16
   \   0000027A   E000                       LDI     R16,0
   \   0000027C   9300....                   STS     high_bit_0,R16
   \   00000280   E000                       LDI     R16,0
   \   00000282   9300....                   STS     high_bit_1,R16
   \   00000286   E000                       LDI     R16,0
   \   00000288   9300....                   STS     high_repeat_flag0,R16
   \   0000028C   E000                       LDI     R16,0
   \   0000028E   9300....                   STS     high_repeat_flag1,R16
   \   00000292   E000                       LDI     R16,0
   \   00000294   9300....                   STS     _repeat_remocon,R16
   \   00000298   E000                       LDI     R16,0
   \   0000029A   9300....                   STS     ir_error_check,R16
   \                     ??remocon_data_6:
   \   0000029E   9508                       RET

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near sp_en_cnt
   \                     sp_en_cnt:
   \   00000000                              DS 2

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void _remocon_processing()
   \                     _remocon_processing:
   \   00000000   93BA                       ST      -Y,R27
   \   00000002   93AA                       ST      -Y,R26
   \   00000004   9100....                   LDS     R16,low_start_flag
   \   00000008   2300                       TST     R16
   \   0000000A   F1E9                       BREQ    ??_remocon_processing_0
   \   0000000C   9100....                   LDS     R16,high_start_flag
   \   00000010   2300                       TST     R16
   \   00000012   F1C9                       BREQ    ??_remocon_processing_0
   \   00000014   9100....                   LDS     R16,_flg_on_remocon
   \   00000018   2300                       TST     R16
   \   0000001A   F009                       BREQ    $+2+2
   \   0000001C   C0B8                       RJMP    ??_remocon_processing_1
   \   0000001E   E001                       LDI     R16,1
   \   00000020   9300....                   STS     _flg_on_remocon,R16
   \   00000024   E001                       LDI     R16,1
   \   00000026   9300....                   STS     _code_remocon,R16
   \   0000002A   E000                       LDI     R16,0
   \   0000002C   9300....                   STS     _flg_repeat,R16
   \   00000030   E000                       LDI     R16,0
   \   00000032   9300....                   STS     _flg_run_repeat,R16
   \   00000036   E000                       LDI     R16,0
   \   00000038   E010                       LDI     R17,0
   \   0000003A   ....                       LDI     R30,LOW(_remocon_repeat_count)
   \   0000003C   ....                       LDI     R31,(_remocon_repeat_count) >> 8
   \   0000003E   8300                       ST      Z,R16
   \   00000040   8311                       STD     Z+1,R17
   \   00000042   E000                       LDI     R16,0
   \   00000044   9300....                   STS     low_start_flag,R16
   \   00000048   E000                       LDI     R16,0
   \   0000004A   9300....                   STS     high_start_flag,R16
   \   0000004E   E000                       LDI     R16,0
   \   00000050   9300....                   STS     low_bit_time,R16
   \   00000054   E000                       LDI     R16,0
   \   00000056   9300....                   STS     high_bit_0,R16
   \   0000005A   E000                       LDI     R16,0
   \   0000005C   9300....                   STS     high_bit_1,R16
   \   00000060   E000                       LDI     R16,0
   \   00000062   9300....                   STS     high_repeat_flag0,R16
   \   00000066   E000                       LDI     R16,0
   \   00000068   9300....                   STS     high_repeat_flag1,R16
   \   0000006C   E000                       LDI     R16,0
   \   0000006E   9300....                   STS     _repeat_remocon,R16
   \   00000072   E000                       LDI     R16,0
   \   00000074   E010                       LDI     R17,0
   \   00000076   ....                       LDI     R30,LOW(sp_en_cnt)
   \   00000078   ....                       LDI     R31,(sp_en_cnt) >> 8
   \   0000007A   8300                       ST      Z,R16
   \   0000007C   8311                       STD     Z+1,R17
   \   0000007E   E000                       LDI     R16,0
   \   00000080   9300....                   STS     ir_error_check,R16
   \   00000084   C084                       RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_0:
   \   00000086   9100....                   LDS     R16,_flg_on_remocon
   \   0000008A   2300                       TST     R16
   \   0000008C   F099                       BREQ    ??_remocon_processing_2
   \   0000008E   9100....                   LDS     R16,low_bit_time
   \   00000092   2300                       TST     R16
   \   00000094   F079                       BREQ    ??_remocon_processing_2
   \   00000096   9100....                   LDS     R16,high_bit_0
   \   0000009A   2300                       TST     R16
   \   0000009C   F059                       BREQ    ??_remocon_processing_2
   \   0000009E   E000                       LDI     R16,0
   \   000000A0   9300....                   STS     bit_input,R16
   \   000000A4   E000                       LDI     R16,0
   \   000000A6   9300....                   STS     low_bit_time,R16
   \   000000AA   E000                       LDI     R16,0
   \   000000AC   9300....                   STS     high_bit_0,R16
   \   000000B0   ....                       RCALL   remocon_data
   \   000000B2   C06D                       RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_2:
   \   000000B4   9100....                   LDS     R16,_flg_on_remocon
   \   000000B8   2300                       TST     R16
   \   000000BA   F099                       BREQ    ??_remocon_processing_3
   \   000000BC   9100....                   LDS     R16,low_bit_time
   \   000000C0   2300                       TST     R16
   \   000000C2   F079                       BREQ    ??_remocon_processing_3
   \   000000C4   9100....                   LDS     R16,high_bit_1
   \   000000C8   2300                       TST     R16
   \   000000CA   F059                       BREQ    ??_remocon_processing_3
   \   000000CC   E001                       LDI     R16,1
   \   000000CE   9300....                   STS     bit_input,R16
   \   000000D2   E000                       LDI     R16,0
   \   000000D4   9300....                   STS     low_bit_time,R16
   \   000000D8   E000                       LDI     R16,0
   \   000000DA   9300....                   STS     high_bit_1,R16
   \   000000DE   ....                       RCALL   remocon_data
   \   000000E0   C056                       RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_3:
   \   000000E2   9100....                   LDS     R16,_flg_on_remocon
   \   000000E6   2300                       TST     R16
   \   000000E8   F481                       BRNE    ??_remocon_processing_4
   \   000000EA   9100....                   LDS     R16,high_repeat_flag0
   \   000000EE   2300                       TST     R16
   \   000000F0   F061                       BREQ    ??_remocon_processing_4
   \   000000F2   E001                       LDI     R16,1
   \   000000F4   9300....                   STS     _repeat_remocon,R16
   \   000000F8   E000                       LDI     R16,0
   \   000000FA   9300....                   STS     high_repeat_flag0,R16
   \   000000FE   ....                       LDI     R30,LOW(ir_error_check)
   \   00000100   ....                       LDI     R31,(ir_error_check) >> 8
   \   00000102   8100                       LD      R16,Z
   \   00000104   9503                       INC     R16
   \   00000106   8300                       ST      Z,R16
   \   00000108   C042                       RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_4:
   \   0000010A   9100....                   LDS     R16,_repeat_remocon
   \   0000010E   2300                       TST     R16
   \   00000110   F1F1                       BREQ    ??_remocon_processing_1
   \   00000112   9100....                   LDS     R16,high_repeat_flag1
   \   00000116   2300                       TST     R16
   \   00000118   F1D1                       BREQ    ??_remocon_processing_1
   \   0000011A   9100....                   LDS     R16,init_setting_check
   \   0000011E   2300                       TST     R16
   \   00000120   F1B1                       BREQ    ??_remocon_processing_1
   \   00000122   9100....                   LDS     R16,ir_error_check
   \   00000126   3001                       CPI     R16,1
   \   00000128   F561                       BRNE    ??_remocon_processing_5
   \   0000012A   E000                       LDI     R16,0
   \   0000012C   9300....                   STS     high_repeat_flag1,R16
   \   00000130   E000                       LDI     R16,0
   \   00000132   9300....                   STS     rom_save_flag,R16
   \   00000136   ....                       LDI     R30,LOW(sp_en_cnt)
   \   00000138   ....                       LDI     R31,(sp_en_cnt) >> 8
   \   0000013A   8100                       LD      R16,Z
   \   0000013C   8111                       LDD     R17,Z+1
   \   0000013E   5F0F                       SUBI    R16,255
   \   00000140   4F1F                       SBCI    R17,255
   \   00000142   8300                       ST      Z,R16
   \   00000144   8311                       STD     Z+1,R17
   \   00000146   ....                       LDI     R26,LOW(sp_en_cnt)
   \   00000148   ....                       LDI     R27,(sp_en_cnt) >> 8
   \   0000014A   91ED                       LD      R30,X+
   \   0000014C   91FC                       LD      R31,X
   \   0000014E   9733                       SBIW    R31 : R30,3
   \   00000150   F060                       BRCS    ??_remocon_processing_6
   \   00000152   9100....                   LDS     R16,_repeat_data
   \   00000156   3800                       CPI     R16,128
   \   00000158   F411                       BRNE    ??_remocon_processing_7
   \   0000015A   ....                       RCALL   audio_level_sp_up
   \   0000015C   C018                       RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_7:
   \   0000015E   9100....                   LDS     R16,_repeat_data
   \   00000162   3A08                       CPI     R16,168
   \   00000164   F4A1                       BRNE    ??_remocon_processing_1
   \   00000166   ....                       RCALL   audio_level_sp_down
   \   00000168   C012                       RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_6:
   \   0000016A   9100....                   LDS     R16,_repeat_data
   \   0000016E   3800                       CPI     R16,128
   \   00000170   F411                       BRNE    ??_remocon_processing_8
   \   00000172   ....                       RCALL   audio_level_up
   \   00000174   C00C                       RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_8:
   \   00000176   9100....                   LDS     R16,_repeat_data
   \   0000017A   3A08                       CPI     R16,168
   \   0000017C   F441                       BRNE    ??_remocon_processing_1
   \   0000017E   ....                       RCALL   audio_level_down
   \   00000180   C006                       RJMP    ??_remocon_processing_1
   \                     ??_remocon_processing_5:
   \   00000182   E000                       LDI     R16,0
   \   00000184   9300....                   STS     ir_error_check,R16
   \   00000188   E000                       LDI     R16,0
   \   0000018A   9300....                   STS     _repeat_data,R16
   \                     ??_remocon_processing_1:
   \   0000018E   91A9                       LD      R26,Y+
   \   00000190   91B9                       LD      R27,Y+
   \   00000192   9508                       RET

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near ir_error
   \                     ir_error:
   \   00000000                              DS 1

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc __interrupt void INT5_Handler()
   \                     INT5_Handler:
   \   00000000   93BA                       ST      -Y,R27
   \   00000002   93AA                       ST      -Y,R26
   \   00000004   939A                       ST      -Y,R25
   \   00000006   938A                       ST      -Y,R24
   \   00000008   93FA                       ST      -Y,R31
   \   0000000A   93EA                       ST      -Y,R30
   \   0000000C   923A                       ST      -Y,R3
   \   0000000E   922A                       ST      -Y,R2
   \   00000010   921A                       ST      -Y,R1
   \   00000012   920A                       ST      -Y,R0
   \   00000014   937A                       ST      -Y,R23
   \   00000016   936A                       ST      -Y,R22
   \   00000018   935A                       ST      -Y,R21
   \   0000001A   934A                       ST      -Y,R20
   \   0000001C   933A                       ST      -Y,R19
   \   0000001E   932A                       ST      -Y,R18
   \   00000020   931A                       ST      -Y,R17
   \   00000022   930A                       ST      -Y,R16
   \   00000024   B78F                       IN      R24,0x3F
   \   00000026   B79B                       IN      R25,0x3B
   \   00000028   9B0D                       SBIS    0x01,0x05
   \   0000002A   C028                       RJMP    ??INT5_Handler_0
   \   0000002C   ....                       LDI     R26,LOW(_counter_remocon)
   \   0000002E   ....                       LDI     R27,(_counter_remocon) >> 8
   \   00000030   91ED                       LD      R30,X+
   \   00000032   91FC                       LD      R31,X
   \   00000034   9734                       SBIW    R31 : R30,4
   \   00000036   F050                       BRCS    ??INT5_Handler_1
   \   00000038   ....                       LDI     R26,LOW(_counter_remocon)
   \   0000003A   ....                       LDI     R27,(_counter_remocon) >> 8
   \   0000003C   91ED                       LD      R30,X+
   \   0000003E   91FC                       LD      R31,X
   \   00000040   9739                       SBIW    R31 : R30,9
   \   00000042   F420                       BRCC    ??INT5_Handler_1
   \   00000044   E001                       LDI     R16,1
   \   00000046   9300....                   STS     low_bit_time,R16
   \   0000004A   C075                       RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_1:
   \   0000004C   ....                       LDI     R30,LOW(_counter_remocon)
   \   0000004E   ....                       LDI     R31,(_counter_remocon) >> 8
   \   00000050   8100                       LD      R16,Z
   \   00000052   8111                       LDD     R17,Z+1
   \   00000054   3505                       CPI     R16,85
   \   00000056   E020                       LDI     R18,0
   \   00000058   0712                       CPC     R17,R18
   \   0000005A   F060                       BRCS    ??INT5_Handler_3
   \   0000005C   ....                       LDI     R30,LOW(_counter_remocon)
   \   0000005E   ....                       LDI     R31,(_counter_remocon) >> 8
   \   00000060   8100                       LD      R16,Z
   \   00000062   8111                       LDD     R17,Z+1
   \   00000064   3600                       CPI     R16,96
   \   00000066   E020                       LDI     R18,0
   \   00000068   0712                       CPC     R17,R18
   \   0000006A   F420                       BRCC    ??INT5_Handler_3
   \   0000006C   E001                       LDI     R16,1
   \   0000006E   9300....                   STS     low_start_flag,R16
   \   00000072   C061                       RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_3:
   \   00000074   E001                       LDI     R16,1
   \   00000076   9300....                   STS     ir_error,R16
   \   0000007A   C05D                       RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_0:
   \   0000007C   990D                       SBIC    0x01,0x05
   \   0000007E   C05B                       RJMP    ??INT5_Handler_2
   \   00000080   ....                       LDI     R26,LOW(_counter_remocon)
   \   00000082   ....                       LDI     R27,(_counter_remocon) >> 8
   \   00000084   91ED                       LD      R30,X+
   \   00000086   91FC                       LD      R31,X
   \   00000088   9734                       SBIW    R31 : R30,4
   \   0000008A   F050                       BRCS    ??INT5_Handler_4
   \   0000008C   ....                       LDI     R26,LOW(_counter_remocon)
   \   0000008E   ....                       LDI     R27,(_counter_remocon) >> 8
   \   00000090   91ED                       LD      R30,X+
   \   00000092   91FC                       LD      R31,X
   \   00000094   9739                       SBIW    R31 : R30,9
   \   00000096   F420                       BRCC    ??INT5_Handler_4
   \   00000098   E001                       LDI     R16,1
   \   0000009A   9300....                   STS     high_bit_0,R16
   \   0000009E   C04B                       RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_4:
   \   000000A0   ....                       LDI     R26,LOW(_counter_remocon)
   \   000000A2   ....                       LDI     R27,(_counter_remocon) >> 8
   \   000000A4   91ED                       LD      R30,X+
   \   000000A6   91FC                       LD      R31,X
   \   000000A8   9739                       SBIW    R31 : R30,9
   \   000000AA   F050                       BRCS    ??INT5_Handler_5
   \   000000AC   ....                       LDI     R26,LOW(_counter_remocon)
   \   000000AE   ....                       LDI     R27,(_counter_remocon) >> 8
   \   000000B0   91ED                       LD      R30,X+
   \   000000B2   91FC                       LD      R31,X
   \   000000B4   9775                       SBIW    R31 : R30,21
   \   000000B6   F420                       BRCC    ??INT5_Handler_5
   \   000000B8   E001                       LDI     R16,1
   \   000000BA   9300....                   STS     high_bit_1,R16
   \   000000BE   C03B                       RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_5:
   \   000000C0   ....                       LDI     R26,LOW(_counter_remocon)
   \   000000C2   ....                       LDI     R27,(_counter_remocon) >> 8
   \   000000C4   91ED                       LD      R30,X+
   \   000000C6   91FC                       LD      R31,X
   \   000000C8   97B8                       SBIW    R31 : R30,40
   \   000000CA   F050                       BRCS    ??INT5_Handler_6
   \   000000CC   ....                       LDI     R26,LOW(_counter_remocon)
   \   000000CE   ....                       LDI     R27,(_counter_remocon) >> 8
   \   000000D0   91ED                       LD      R30,X+
   \   000000D2   91FC                       LD      R31,X
   \   000000D4   97F3                       SBIW    R31 : R30,51
   \   000000D6   F420                       BRCC    ??INT5_Handler_6
   \   000000D8   E001                       LDI     R16,1
   \   000000DA   9300....                   STS     high_start_flag,R16
   \   000000DE   C02B                       RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_6:
   \   000000E0   ....                       LDI     R30,LOW(_counter_remocon)
   \   000000E2   ....                       LDI     R31,(_counter_remocon) >> 8
   \   000000E4   8100                       LD      R16,Z
   \   000000E6   8111                       LDD     R17,Z+1
   \   000000E8   3C08                       CPI     R16,200
   \   000000EA   E020                       LDI     R18,0
   \   000000EC   0712                       CPC     R17,R18
   \   000000EE   F060                       BRCS    ??INT5_Handler_7
   \   000000F0   ....                       LDI     R30,LOW(_counter_remocon)
   \   000000F2   ....                       LDI     R31,(_counter_remocon) >> 8
   \   000000F4   8100                       LD      R16,Z
   \   000000F6   8111                       LDD     R17,Z+1
   \   000000F8   3901                       CPI     R16,145
   \   000000FA   E021                       LDI     R18,1
   \   000000FC   0712                       CPC     R17,R18
   \   000000FE   F420                       BRCC    ??INT5_Handler_7
   \   00000100   E001                       LDI     R16,1
   \   00000102   9300....                   STS     high_repeat_flag0,R16
   \   00000106   C017                       RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_7:
   \   00000108   ....                       LDI     R30,LOW(_counter_remocon)
   \   0000010A   ....                       LDI     R31,(_counter_remocon) >> 8
   \   0000010C   8100                       LD      R16,Z
   \   0000010E   8111                       LDD     R17,Z+1
   \   00000110   3200                       CPI     R16,32
   \   00000112   E023                       LDI     R18,3
   \   00000114   0712                       CPC     R17,R18
   \   00000116   F060                       BRCS    ??INT5_Handler_8
   \   00000118   ....                       LDI     R30,LOW(_counter_remocon)
   \   0000011A   ....                       LDI     R31,(_counter_remocon) >> 8
   \   0000011C   8100                       LD      R16,Z
   \   0000011E   8111                       LDD     R17,Z+1
   \   00000120   3E09                       CPI     R16,233
   \   00000122   E023                       LDI     R18,3
   \   00000124   0712                       CPC     R17,R18
   \   00000126   F420                       BRCC    ??INT5_Handler_8
   \   00000128   E001                       LDI     R16,1
   \   0000012A   9300....                   STS     high_repeat_flag1,R16
   \   0000012E   C003                       RJMP    ??INT5_Handler_2
   \                     ??INT5_Handler_8:
   \   00000130   E001                       LDI     R16,1
   \   00000132   9300....                   STS     ir_error,R16
   \                     ??INT5_Handler_2:
   \   00000136   E000                       LDI     R16,0
   \   00000138   E010                       LDI     R17,0
   \   0000013A   ....                       LDI     R30,LOW(_counter_remocon)
   \   0000013C   ....                       LDI     R31,(_counter_remocon) >> 8
   \   0000013E   8300                       ST      Z,R16
   \   00000140   8311                       STD     Z+1,R17
   \   00000142   9100....                   LDS     R16,ir_error
   \   00000146   2300                       TST     R16
   \   00000148   F039                       BREQ    ??INT5_Handler_9
   \   0000014A   E000                       LDI     R16,0
   \   0000014C   9300....                   STS     ir_error,R16
   \   00000150   E000                       LDI     R16,0
   \   00000152   9300....                   STS     high_repeat_flag1,R16
   \   00000156   C001                       RJMP    ??INT5_Handler_10
   \                     ??INT5_Handler_9:
   \   00000158   ....                       RCALL   _remocon_processing
   \                     ??INT5_Handler_10:
   \   0000015A   BF9B                       OUT     0x3B,R25
   \   0000015C   BF8F                       OUT     0x3F,R24
   \   0000015E   9109                       LD      R16,Y+
   \   00000160   9119                       LD      R17,Y+
   \   00000162   9129                       LD      R18,Y+
   \   00000164   9139                       LD      R19,Y+
   \   00000166   9149                       LD      R20,Y+
   \   00000168   9159                       LD      R21,Y+
   \   0000016A   9169                       LD      R22,Y+
   \   0000016C   9179                       LD      R23,Y+
   \   0000016E   9009                       LD      R0,Y+
   \   00000170   9019                       LD      R1,Y+
   \   00000172   9029                       LD      R2,Y+
   \   00000174   9039                       LD      R3,Y+
   \   00000176   91E9                       LD      R30,Y+
   \   00000178   91F9                       LD      R31,Y+
   \   0000017A   9189                       LD      R24,Y+
   \   0000017C   9199                       LD      R25,Y+
   \   0000017E   91A9                       LD      R26,Y+
   \   00000180   91B9                       LD      R27,Y+
   \   00000182   9518                       RETI

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned int __near mtime_length
   \                     mtime_length:
   \   00000000                              DS 2

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
   \   unsigned char __near mtime_flag
   \                     mtime_flag:
   \   00000000                              DS 1

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void _system_init()
   \                     _system_init:
   \   00000000   EF0F                       LDI     R16,255
   \   00000002   BB0A                       OUT     0x1A,R16
   \   00000004   E30D                       LDI     R16,61
   \   00000006   BB07                       OUT     0x17,R16
   \   00000008   EF0F                       LDI     R16,255
   \   0000000A   BB04                       OUT     0x14,R16
   \   0000000C   E803                       LDI     R16,131
   \   0000000E   BB01                       OUT     0x11,R16
   \   00000010   E008                       LDI     R16,8
   \   00000012   B902                       OUT     0x02,R16
   \   00000014   E00F                       LDI     R16,15
   \   00000016   93000061                   STS     97,R16
   \   0000001A   E10F                       LDI     R16,31
   \   0000001C   93000064                   STS     100,R16
   \   00000020   E000                       LDI     R16,0
   \   00000022   BB0B                       OUT     0x1B,R16
   \   00000024   EF0F                       LDI     R16,255
   \   00000026   BB08                       OUT     0x18,R16
   \   00000028   EF0F                       LDI     R16,255
   \   0000002A   BB05                       OUT     0x15,R16
   \   0000002C   EF0F                       LDI     R16,255
   \   0000002E   BB02                       OUT     0x12,R16
   \   00000030   EF0F                       LDI     R16,255
   \   00000032   B903                       OUT     0x03,R16
   \   00000034   EF00                       LDI     R16,240
   \   00000036   93000062                   STS     98,R16
   \   0000003A   E10E                       LDI     R16,30
   \   0000003C   93000065                   STS     101,R16
   \   00000040   E003                       LDI     R16,3
   \   00000042   BF03                       OUT     0x33,R16
   \   00000044   E005                       LDI     R16,5
   \   00000046   BD0E                       OUT     0x2E,R16
   \   00000048   E002                       LDI     R16,2
   \   0000004A   BD05                       OUT     0x25,R16
   \   0000004C   E307                       LDI     R16,55
   \   0000004E   BD04                       OUT     0x24,R16
   \   00000050   E005                       LDI     R16,5
   \   00000052   BF02                       OUT     0x32,R16
   \   00000054   EE04                       LDI     R16,228
   \   00000056   EF19                       LDI     R17,249
   \   00000058   BD1D                       OUT     0x2D,R17
   \   0000005A   BD0C                       OUT     0x2C,R16
   \   0000005C   E000                       LDI     R16,0
   \   0000005E   BF01                       OUT     0x31,R16
   \   00000060   E405                       LDI     R16,69
   \   00000062   BF07                       OUT     0x37,R16
   \   00000064   E405                       LDI     R16,69
   \   00000066   BF06                       OUT     0x36,R16
   \   00000068   EF0C                       LDI     R16,252
   \   0000006A   BF09                       OUT     0x39,R16
   \   0000006C   EB00                       LDI     R16,176
   \   0000006E   9300006A                   STS     106,R16
   \   00000072   E505                       LDI     R16,85
   \   00000074   BF0A                       OUT     0x3A,R16
   \   00000076   EF0C                       LDI     R16,252
   \   00000078   BF08                       OUT     0x38,R16
   \   0000007A   BF08                       OUT     0x38,R16
   \   0000007C   ........                   CALL    dot_matrix_clear
   \   00000080   9478                       SEI
   \   00000082   E000                       LDI     R16,0
   \   00000084   C007                       RJMP    ??_system_init_0
   \                     ??_system_init_1:
   \   00000086   E220                       LDI     R18,32
   \   00000088   E010                       LDI     R17,0
   \   0000008A   01F8                       MOVW    R31 : R30,R17 : R16
   \   0000008C   ....                       SUBI    R30,LOW((-(dot_string) & 0xFFFF))
   \   0000008E   ....                       SBCI    R31,(-(dot_string) & 0xFFFF) >> 8
   \   00000090   8320                       ST      Z,R18
   \   00000092   9503                       INC     R16
   \                     ??_system_init_0:
   \   00000094   3100                       CPI     R16,16
   \   00000096   F3B8                       BRCS    ??_system_init_1
   \   00000098   E001                       LDI     R16,1
   \   0000009A   9300....                   STS     tmr_osc,R16
   \   0000009E   9508                       RET

   \                                 In segment CODE, align 2, keep-with-next
   \   __nearfunc void _system_init_se()
   \                     _system_init_se:
   \   00000000   E000                       LDI     R16,0
   \   00000002   E010                       LDI     R17,0
   \   00000004   ........                   CALL    rom_I2C_Read
   \   00000008   E010                       LDI     R17,0
   \   0000000A   3F0F                       CPI     R16,255
   \   0000000C   E020                       LDI     R18,0
   \   0000000E   0712                       CPC     R17,R18
   \   00000010   F541                       BRNE    ??_system_init_se_0
   \   00000012   E023                       LDI     R18,3
   \   00000014   E000                       LDI     R16,0
   \   00000016   E010                       LDI     R17,0
   \   00000018   ........                   CALL    rom_I2C_Write
   \   0000001C   E020                       LDI     R18,0
   \   0000001E   E001                       LDI     R16,1
   \   00000020   E010                       LDI     R17,0
   \   00000022   ........                   CALL    rom_I2C_Write
   \   00000026   E020                       LDI     R18,0
   \   00000028   E002                       LDI     R16,2
   \   0000002A   E010                       LDI     R17,0
   \   0000002C   ........                   CALL    rom_I2C_Write
   \   00000030   E020                       LDI     R18,0
   \   00000032   E003                       LDI     R16,3
   \   00000034   E010                       LDI     R17,0
   \   00000036   ........                   CALL    rom_I2C_Write
   \   0000003A   E120                       LDI     R18,16
   \   0000003C   E004                       LDI     R16,4
   \   0000003E   E010                       LDI     R17,0
   \   00000040   ........                   CALL    rom_I2C_Write
   \   00000044   E020                       LDI     R18,0
   \   00000046   E100                       LDI     R16,16
   \   00000048   E010                       LDI     R17,0
   \   0000004A   ........                   CALL    rom_I2C_Write
   \   0000004E   EF2F                       LDI     R18,255
   \   00000050   E101                       LDI     R16,17
   \   00000052   E010                       LDI     R17,0
   \   00000054   ........                   CALL    rom_I2C_Write
   \   00000058   E021                       LDI     R18,1
   \   0000005A   E102                       LDI     R16,18
   \   0000005C   E010                       LDI     R17,0
   \   0000005E   ........                   CALL    rom_I2C_Write
   \                     ??_system_init_se_0:
   \   00000062   E001                       LDI     R16,1
   \   00000064   E010                       LDI     R17,0
   \   00000066   ........                   CALL    rom_I2C_Read
   \   0000006A   E010                       LDI     R17,0
   \   0000006C   ....                       LDI     R30,LOW(rom_cycle)
   \   0000006E   ....                       LDI     R31,(rom_cycle) >> 8
   \   00000070   8300                       ST      Z,R16
   \   00000072   8311                       STD     Z+1,R17
   \   00000074   ....                       LDI     R30,LOW(rom_cycle)
   \   00000076   ....                       LDI     R31,(rom_cycle) >> 8
   \   00000078   8100                       LD      R16,Z
   \   0000007A   2F10                       MOV     R17,R16
   \   0000007C   E000                       LDI     R16,0
   \   0000007E   ....                       LDI     R30,LOW(rom_cycle)
   \   00000080   ....                       LDI     R31,(rom_cycle) >> 8
   \   00000082   8300                       ST      Z,R16
   \   00000084   8311                       STD     Z+1,R17
   \   00000086   E002                       LDI     R16,2
   \   00000088   E010                       LDI     R17,0
   \   0000008A   ........                   CALL    rom_I2C_Read
   \   0000008E   E010                       LDI     R17,0
   \   00000090   ....                       LDI     R30,LOW(rom_cycle)
   \   00000092   ....                       LDI     R31,(rom_cycle) >> 8
   \   00000094   8120                       LD      R18,Z
   \   00000096   8131                       LDD     R19,Z+1
   \   00000098   0F20                       ADD     R18,R16
   \   0000009A   1F31                       ADC     R19,R17
   \   0000009C   8320                       ST      Z,R18
   \   0000009E   8331                       STD     Z+1,R19
   \   000000A0   ....                       LDI     R30,LOW(rom_cycle)
   \   000000A2   ....                       LDI     R31,(rom_cycle) >> 8
   \   000000A4   8100                       LD      R16,Z
   \   000000A6   8111                       LDD     R17,Z+1
   \   000000A8   3000                       CPI     R16,0
   \   000000AA   E022                       LDI     R18,2
   \   000000AC   0712                       CPC     R17,R18
   \   000000AE   F008                       BRCS    $+2+2
   \   000000B0   C082                       RJMP    ??_system_init_se_1
   \   000000B2   E000                       LDI     R16,0
   \   000000B4   E010                       LDI     R17,0
   \   000000B6   ........                   CALL    rom_I2C_Read
   \   000000BA   9300....                   STS     rom_add_pt,R16
   \   000000BE   9100....                   LDS     R16,rom_add_pt
   \   000000C2   E010                       LDI     R17,0
   \   000000C4   ........                   CALL    rom_I2C_Read
   \   000000C8   E010                       LDI     R17,0
   \   000000CA   ....                       LDI     R30,LOW(rom_address)
   \   000000CC   ....                       LDI     R31,(rom_address) >> 8
   \   000000CE   8300                       ST      Z,R16
   \   000000D0   8311                       STD     Z+1,R17
   \   000000D2   ....                       LDI     R30,LOW(rom_address)
   \   000000D4   ....                       LDI     R31,(rom_address) >> 8
   \   000000D6   8100                       LD      R16,Z
   \   000000D8   2F10                       MOV     R17,R16
   \   000000DA   E000                       LDI     R16,0
   \   000000DC   ....                       LDI     R30,LOW(rom_address)
   \   000000DE   ....                       LDI     R31,(rom_address) >> 8
   \   000000E0   8300                       ST      Z,R16
   \   000000E2   8311                       STD     Z+1,R17
   \   000000E4   9100....                   LDS     R16,rom_add_pt
   \   000000E8   E010                       LDI     R17,0
   \   000000EA   5F0F                       SUBI    R16,255
   \   000000EC   4F1F                       SBCI    R17,255
   \   000000EE   ........                   CALL    rom_I2C_Read
   \   000000F2   E010                       LDI     R17,0
   \   000000F4   ....                       LDI     R30,LOW(rom_address)
   \   000000F6   ....                       LDI     R31,(rom_address) >> 8
   \   000000F8   8120                       LD      R18,Z
   \   000000FA   8131                       LDD     R19,Z+1
   \   000000FC   0F20                       ADD     R18,R16
   \   000000FE   1F31                       ADC     R19,R17
   \   00000100   8320                       ST      Z,R18
   \   00000102   8331                       STD     Z+1,R19
   \   00000104   ....                       LDI     R30,LOW(rom_address)
   \   00000106   ....                       LDI     R31,(rom_address) >> 8
   \   00000108   8100                       LD      R16,Z
   \   0000010A   8111                       LDD     R17,Z+1
   \   0000010C   ........                   CALL    rom_I2C_Read
   \   00000110   9300....                   STS     rom_data_cnt,R16
   \   00000114   ....                       LDI     R30,LOW(rom_address)
   \   00000116   ....                       LDI     R31,(rom_address) >> 8
   \   00000118   8100                       LD      R16,Z
   \   0000011A   8111                       LDD     R17,Z+1
   \   0000011C   5F0F                       SUBI    R16,255
   \   0000011E   4F1F                       SBCI    R17,255
   \   00000120   ........                   CALL    rom_I2C_Read
   \   00000124   E010                       LDI     R17,0
   \   00000126   ....                       LDI     R30,LOW(rom_data)
   \   00000128   ....                       LDI     R31,(rom_data) >> 8
   \   0000012A   8300                       ST      Z,R16
   \   0000012C   8311                       STD     Z+1,R17
   \   0000012E   ....                       LDI     R30,LOW(rom_data)
   \   00000130   ....                       LDI     R31,(rom_data) >> 8
   \   00000132   8100                       LD      R16,Z
   \   00000134   2F10                       MOV     R17,R16
   \   00000136   E000                       LDI     R16,0
   \   00000138   ....                       LDI     R30,LOW(rom_data)
   \   0000013A   ....                       LDI     R31,(rom_data) >> 8
   \   0000013C   8300                       ST      Z,R16
   \   0000013E   8311                       STD     Z+1,R17
   \   00000140   ....                       LDI     R30,LOW(rom_address)
   \   00000142   ....                       LDI     R31,(rom_address) >> 8
   \   00000144   8100                       LD      R16,Z
   \   00000146   8111                       LDD     R17,Z+1
   \   00000148   5F0E                       SUBI    R16,254
   \   0000014A   4F1F                       SBCI    R17,255
   \   0000014C   ........                   CALL    rom_I2C_Read
   \   00000150   E010                       LDI     R17,0
   \   00000152   ....                       LDI     R30,LOW(rom_data)
   \   00000154   ....                       LDI     R31,(rom_data) >> 8
   \   00000156   8120                       LD      R18,Z
   \   00000158   8131                       LDD     R19,Z+1
   \   0000015A   0F20                       ADD     R18,R16
   \   0000015C   1F31                       ADC     R19,R17
   \   0000015E   8320                       ST      Z,R18
   \   00000160   8331                       STD     Z+1,R19
   \   00000162   3706                       CPI     R16,118
   \   00000164   F4D8                       BRCC    ??_system_init_se_2
   \   00000166   ....                       LDI     R30,LOW(rom_data)
   \   00000168   ....                       LDI     R31,(rom_data) >> 8
   \   0000016A   8111                       LDD     R17,Z+1
   \   0000016C   2F01                       MOV     R16,R17
   \   0000016E   9300....                   STS     vol_dB,R16
   \   00000172   ....                       LDI     R30,LOW(rom_data)
   \   00000174   ....                       LDI     R31,(rom_data) >> 8
   \   00000176   8100                       LD      R16,Z
   \   00000178   9502                       SWAP    R16
   \   0000017A   700F                       ANDI    R16,0x0F
   \   0000017C   9300....                   STS     ch_led_data,R16
   \   00000180   ....                       LDI     R30,LOW(rom_data)
   \   00000182   ....                       LDI     R31,(rom_data) >> 8
   \   00000184   8100                       LD      R16,Z
   \   00000186   9506                       LSR     R16
   \   00000188   7007                       ANDI    R16,0x07
   \   0000018A   9300....                   STS     filter_flag,R16
   \   0000018E   ....                       LDI     R30,LOW(rom_data)
   \   00000190   ....                       LDI     R31,(rom_data) >> 8
   \   00000192   8100                       LD      R16,Z
   \   00000194   7001                       ANDI    R16,0x01
   \   00000196   9300....                   STS     phase_data,R16
   \   0000019A   C019                       RJMP    ??_system_init_se_3
   \                     ??_system_init_se_2:
   \   0000019C   EF0F                       LDI     R16,255
   \   0000019E   9300....                   STS     vol_dB,R16
   \   000001A2   E000                       LDI     R16,0
   \   000001A4   9300....                   STS     ch_led_data,R16
   \   000001A8   E000                       LDI     R16,0
   \   000001AA   9300....                   STS     filter_flag,R16
   \   000001AE   E001                       LDI     R16,1
   \   000001B0   9300....                   STS     phase_data,R16
   \   000001B4   C00C                       RJMP    ??_system_init_se_3
   \                     ??_system_init_se_1:
   \   000001B6   EF0F                       LDI     R16,255
   \   000001B8   9300....                   STS     vol_dB,R16
   \   000001BC   E000                       LDI     R16,0
   \   000001BE   9300....                   STS     ch_led_data,R16
   \   000001C2   E000                       LDI     R16,0
   \   000001C4   9300....                   STS     filter_flag,R16
   \   000001C8   E001                       LDI     R16,1
   \   000001CA   9300....                   STS     phase_data,R16
   \                     ??_system_init_se_3:
   \   000001CE   E020                       LDI     R18,0
   \   000001D0   E010                       LDI     R17,0
   \   000001D2   E200                       LDI     R16,32
   \   000001D4   ........                   CALL    I2C_Write
   \   000001D8   E824                       LDI     R18,132
   \   000001DA   E011                       LDI     R17,1
   \   000001DC   E200                       LDI     R16,32
   \   000001DE   ........                   CALL    I2C_Write
   \   000001E2   E029                       LDI     R18,9
   \   000001E4   E012                       LDI     R17,2
   \   000001E6   E200                       LDI     R16,32
   \   000001E8   ........                   CALL    I2C_Write
   \   000001EC   E520                       LDI     R18,80
   \   000001EE   E013                       LDI     R17,3
   \   000001F0   E200                       LDI     R16,32
   \   000001F2   ........                   CALL    I2C_Write
   \   000001F6   ....                       RCALL   channel_change
   \   000001F8   E825                       LDI     R18,133
   \   000001FA   E015                       LDI     R17,5
   \   000001FC   E200                       LDI     R16,32
   \   000001FE   ........                   CALL    I2C_Write
   \   00000202   E127                       LDI     R18,23
   \   00000204   E016                       LDI     R17,6
   \   00000206   E200                       LDI     R16,32
   \   00000208   ........                   CALL    I2C_Write
   \   0000020C   EC2F                       LDI     R18,207
   \   0000020E   E01A                       LDI     R17,10
   \   00000210   E900                       LDI     R16,144
   \   00000212   ........                   CALL    I2C_Write
   \   00000216   E825                       LDI     R18,133
   \   00000218   E01B                       LDI     R17,11
   \   0000021A   E900                       LDI     R16,144
   \   0000021C   ........                   CALL    I2C_Write
   \   00000220   E220                       LDI     R18,32
   \   00000222   E01C                       LDI     R17,12
   \   00000224   E900                       LDI     R16,144
   \   00000226   ........                   CALL    I2C_Write
   \   0000022A   E020                       LDI     R18,0
   \   0000022C   E01F                       LDI     R17,15
   \   0000022E   E900                       LDI     R16,144
   \   00000230   ........                   CALL    I2C_Write
   \   00000234   E12D                       LDI     R18,29
   \   00000236   E111                       LDI     R17,17
   \   00000238   E900                       LDI     R16,144
   \   0000023A   ........                   CALL    I2C_Write
   \   0000023E   E021                       LDI     R18,1
   \   00000240   E119                       LDI     R17,25
   \   00000242   E900                       LDI     R16,144
   \   00000244   ........                   CALL    I2C_Write
   \   00000248   EC2F                       LDI     R18,207
   \   0000024A   E01A                       LDI     R17,10
   \   0000024C   E902                       LDI     R16,146
   \   0000024E   ........                   CALL    I2C_Write
   \   00000252   E825                       LDI     R18,133
   \   00000254   E01B                       LDI     R17,11
   \   00000256   E902                       LDI     R16,146
   \   00000258   ........                   CALL    I2C_Write
   \   0000025C   E220                       LDI     R18,32
   \   0000025E   E01C                       LDI     R17,12
   \   00000260   E902                       LDI     R16,146
   \   00000262   ........                   CALL    I2C_Write
   \   00000266   E020                       LDI     R18,0
   \   00000268   E01F                       LDI     R17,15
   \   0000026A   E902                       LDI     R16,146
   \   0000026C   ........                   CALL    I2C_Write
   \   00000270   E92D                       LDI     R18,157
   \   00000272   E111                       LDI     R17,17
   \   00000274   E902                       LDI     R16,146
   \   00000276   ........                   CALL    I2C_Write
   \   0000027A   E021                       LDI     R18,1
   \   0000027C   E119                       LDI     R17,25
   \   0000027E   E902                       LDI     R16,146
   \   00000280   ........                   CALL    I2C_Write
   \   00000284   E728                       LDI     R18,120
   \   00000286   E018                       LDI     R17,8
   \   00000288   E900                       LDI     R16,144
   \   0000028A   ........                   CALL    I2C_Write
   \   0000028E   E728                       LDI     R18,120
   \   00000290   E018                       LDI     R17,8
   \   00000292   E902                       LDI     R16,146
   \   00000294   ........                   CALL    I2C_Write
   \   00000298   ........                   CALL    volume_set
   \   0000029C   ........                   CALL    phase_ess
   \   000002A0   ....                       RCALL   ess_filter
   \   000002A2   9A97                       SBI     0x12,0x07
   \   000002A4   E001                       LDI     R16,1
   \   000002A6   9300....                   STS     dot_light_reg,R16
   \   000002AA   91000065                   LDS     R16,101
   \   000002AE   6001                       ORI     R16,0x01
   \   000002B0   93000065                   STS     101,R16
   \   000002B4   E004                       LDI     R16,4
   \   000002B6   ........                   CALL    dot_matrix_bright
   \   000002BA   9508                       RET
      8          
      9          ///////////////////////////////////////////////////////////////////////////////

   \                                 In segment CODE, align 2, keep-with-next
     10          void sample_rate_cal(){
   \                     sample_rate_cal:
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
     11            U8 i,temp;
     12            
     13            if ( (old_ess_lock_ck!=ess_lock_ck) || (old_ess_automute!=ess_automute) ) {
   \   00000004   9100....                   LDS     R16,old_ess_lock_ck
   \   00000008   9110....                   LDS     R17,ess_lock_ck
   \   0000000C   1701                       CP      R16,R17
   \   0000000E   F439                       BRNE    ??sample_rate_cal_0
   \   00000010   9100....                   LDS     R16,old_ess_automute
   \   00000014   9110....                   LDS     R17,ess_automute
   \   00000018   1701                       CP      R16,R17
   \   0000001A   F409                       BRNE    $+2+2
   \   0000001C   C0E0                       RJMP    ??sample_rate_cal_1
     14              
     15              if (old_ess_lock_ck!=ess_lock_ck) old_ess_lock_ck=ess_lock_ck;
   \                     ??sample_rate_cal_0:
   \   0000001E   9100....                   LDS     R16,old_ess_lock_ck
   \   00000022   9110....                   LDS     R17,ess_lock_ck
   \   00000026   1701                       CP      R16,R17
   \   00000028   F021                       BREQ    ??sample_rate_cal_2
   \   0000002A   9100....                   LDS     R16,ess_lock_ck
   \   0000002E   9300....                   STS     old_ess_lock_ck,R16
     16              if (old_ess_automute!=ess_automute) old_ess_automute=ess_automute;
   \                     ??sample_rate_cal_2:
   \   00000032   9100....                   LDS     R16,old_ess_automute
   \   00000036   9110....                   LDS     R17,ess_automute
   \   0000003A   1701                       CP      R16,R17
   \   0000003C   F021                       BREQ    ??sample_rate_cal_3
   \   0000003E   9100....                   LDS     R16,ess_automute
   \   00000042   9300....                   STS     old_ess_automute,R16
     17            
     18              if(ess_lock_ck && !ess_automute) {
   \                     ??sample_rate_cal_3:
   \   00000046   9100....                   LDS     R16,ess_lock_ck
   \   0000004A   2300                       TST     R16
   \   0000004C   F409                       BRNE    $+2+2
   \   0000004E   C0C4                       RJMP    ??sample_rate_cal_4
   \   00000050   9100....                   LDS     R16,ess_automute
   \   00000054   2300                       TST     R16
   \   00000056   F009                       BREQ    $+2+2
   \   00000058   C0BF                       RJMP    ??sample_rate_cal_4
     19                sample_rate=I2C_Read(0x90, 31);
   \   0000005A   E11F                       LDI     R17,31
   \   0000005C   E900                       LDI     R16,144
   \   0000005E   ........                   CALL    I2C_Read
   \   00000062   E010                       LDI     R17,0
   \   00000064   ....                       LDI     R30,LOW(sample_rate)
   \   00000066   ....                       LDI     R31,(sample_rate) >> 8
   \   00000068   8300                       ST      Z,R16
   \   0000006A   8311                       STD     Z+1,R17
     20                 sample_rate<<=8;
   \   0000006C   ....                       LDI     R30,LOW(sample_rate)
   \   0000006E   ....                       LDI     R31,(sample_rate) >> 8
   \   00000070   8100                       LD      R16,Z
   \   00000072   2F10                       MOV     R17,R16
   \   00000074   E000                       LDI     R16,0
   \   00000076   ....                       LDI     R30,LOW(sample_rate)
   \   00000078   ....                       LDI     R31,(sample_rate) >> 8
   \   0000007A   8300                       ST      Z,R16
   \   0000007C   8311                       STD     Z+1,R17
     21                 sample_rate+=I2C_Read(0x90, 30);
   \   0000007E   E11E                       LDI     R17,30
   \   00000080   E900                       LDI     R16,144
   \   00000082   ........                   CALL    I2C_Read
   \   00000086   E010                       LDI     R17,0
   \   00000088   ....                       LDI     R30,LOW(sample_rate)
   \   0000008A   ....                       LDI     R31,(sample_rate) >> 8
   \   0000008C   8120                       LD      R18,Z
   \   0000008E   8131                       LDD     R19,Z+1
   \   00000090   0F20                       ADD     R18,R16
   \   00000092   1F31                       ADC     R19,R17
   \   00000094   8320                       ST      Z,R18
   \   00000096   8331                       STD     Z+1,R19
     22              
     23                  //0=44.1kHz,    1=48kHz,    2=88.2kHz,    3=96kHz,    4=176.4kHz,   5=196kHz
     24            
     25                  //192kHz
     26                  if(sample_rate>min192 && sample_rate<max192)	sr_led_data=5;
   \   00000098   ....                       LDI     R30,LOW(min192)
   \   0000009A   ....                       LDI     R31,(min192) >> 8
   \   0000009C   8100                       LD      R16,Z
   \   0000009E   8111                       LDD     R17,Z+1
   \   000000A0   ....                       LDI     R30,LOW(sample_rate)
   \   000000A2   ....                       LDI     R31,(sample_rate) >> 8
   \   000000A4   8120                       LD      R18,Z
   \   000000A6   8131                       LDD     R19,Z+1
   \   000000A8   1702                       CP      R16,R18
   \   000000AA   0713                       CPC     R17,R19
   \   000000AC   F478                       BRCC    ??sample_rate_cal_5
   \   000000AE   ....                       LDI     R30,LOW(sample_rate)
   \   000000B0   ....                       LDI     R31,(sample_rate) >> 8
   \   000000B2   8100                       LD      R16,Z
   \   000000B4   8111                       LDD     R17,Z+1
   \   000000B6   ....                       LDI     R30,LOW(max192)
   \   000000B8   ....                       LDI     R31,(max192) >> 8
   \   000000BA   8120                       LD      R18,Z
   \   000000BC   8131                       LDD     R19,Z+1
   \   000000BE   1702                       CP      R16,R18
   \   000000C0   0713                       CPC     R17,R19
   \   000000C2   F420                       BRCC    ??sample_rate_cal_5
   \   000000C4   E005                       LDI     R16,5
   \   000000C6   9300....                   STS     sr_led_data,R16
   \   000000CA   C089                       RJMP    ??sample_rate_cal_1
     27              
     28                  //176.4kHz
     29                  else if(sample_rate>min176 && sample_rate<max176)	sr_led_data=4;
   \                     ??sample_rate_cal_5:
   \   000000CC   ....                       LDI     R30,LOW(min176)
   \   000000CE   ....                       LDI     R31,(min176) >> 8
   \   000000D0   8100                       LD      R16,Z
   \   000000D2   8111                       LDD     R17,Z+1
   \   000000D4   ....                       LDI     R30,LOW(sample_rate)
   \   000000D6   ....                       LDI     R31,(sample_rate) >> 8
   \   000000D8   8120                       LD      R18,Z
   \   000000DA   8131                       LDD     R19,Z+1
   \   000000DC   1702                       CP      R16,R18
   \   000000DE   0713                       CPC     R17,R19
   \   000000E0   F478                       BRCC    ??sample_rate_cal_6
   \   000000E2   ....                       LDI     R30,LOW(sample_rate)
   \   000000E4   ....                       LDI     R31,(sample_rate) >> 8
   \   000000E6   8100                       LD      R16,Z
   \   000000E8   8111                       LDD     R17,Z+1
   \   000000EA   ....                       LDI     R30,LOW(max176)
   \   000000EC   ....                       LDI     R31,(max176) >> 8
   \   000000EE   8120                       LD      R18,Z
   \   000000F0   8131                       LDD     R19,Z+1
   \   000000F2   1702                       CP      R16,R18
   \   000000F4   0713                       CPC     R17,R19
   \   000000F6   F420                       BRCC    ??sample_rate_cal_6
   \   000000F8   E004                       LDI     R16,4
   \   000000FA   9300....                   STS     sr_led_data,R16
   \   000000FE   C06F                       RJMP    ??sample_rate_cal_1
     30                  
     31                  //96kHz
     32                  else if(sample_rate>min96 && sample_rate<max96)	sr_led_data=3;
   \                     ??sample_rate_cal_6:
   \   00000100   ....                       LDI     R30,LOW(min96)
   \   00000102   ....                       LDI     R31,(min96) >> 8
   \   00000104   8100                       LD      R16,Z
   \   00000106   8111                       LDD     R17,Z+1
   \   00000108   ....                       LDI     R30,LOW(sample_rate)
   \   0000010A   ....                       LDI     R31,(sample_rate) >> 8
   \   0000010C   8120                       LD      R18,Z
   \   0000010E   8131                       LDD     R19,Z+1
   \   00000110   1702                       CP      R16,R18
   \   00000112   0713                       CPC     R17,R19
   \   00000114   F478                       BRCC    ??sample_rate_cal_7
   \   00000116   ....                       LDI     R30,LOW(sample_rate)
   \   00000118   ....                       LDI     R31,(sample_rate) >> 8
   \   0000011A   8100                       LD      R16,Z
   \   0000011C   8111                       LDD     R17,Z+1
   \   0000011E   ....                       LDI     R30,LOW(max96)
   \   00000120   ....                       LDI     R31,(max96) >> 8
   \   00000122   8120                       LD      R18,Z
   \   00000124   8131                       LDD     R19,Z+1
   \   00000126   1702                       CP      R16,R18
   \   00000128   0713                       CPC     R17,R19
   \   0000012A   F420                       BRCC    ??sample_rate_cal_7
   \   0000012C   E003                       LDI     R16,3
   \   0000012E   9300....                   STS     sr_led_data,R16
   \   00000132   C055                       RJMP    ??sample_rate_cal_1
     33              
     34                  //88.2kHz
     35                  else if(sample_rate>min88 && sample_rate<max88)	sr_led_data=2;
   \                     ??sample_rate_cal_7:
   \   00000134   ....                       LDI     R30,LOW(min88)
   \   00000136   ....                       LDI     R31,(min88) >> 8
   \   00000138   8100                       LD      R16,Z
   \   0000013A   8111                       LDD     R17,Z+1
   \   0000013C   ....                       LDI     R30,LOW(sample_rate)
   \   0000013E   ....                       LDI     R31,(sample_rate) >> 8
   \   00000140   8120                       LD      R18,Z
   \   00000142   8131                       LDD     R19,Z+1
   \   00000144   1702                       CP      R16,R18
   \   00000146   0713                       CPC     R17,R19
   \   00000148   F478                       BRCC    ??sample_rate_cal_8
   \   0000014A   ....                       LDI     R30,LOW(sample_rate)
   \   0000014C   ....                       LDI     R31,(sample_rate) >> 8
   \   0000014E   8100                       LD      R16,Z
   \   00000150   8111                       LDD     R17,Z+1
   \   00000152   ....                       LDI     R30,LOW(max88)
   \   00000154   ....                       LDI     R31,(max88) >> 8
   \   00000156   8120                       LD      R18,Z
   \   00000158   8131                       LDD     R19,Z+1
   \   0000015A   1702                       CP      R16,R18
   \   0000015C   0713                       CPC     R17,R19
   \   0000015E   F420                       BRCC    ??sample_rate_cal_8
   \   00000160   E002                       LDI     R16,2
   \   00000162   9300....                   STS     sr_led_data,R16
   \   00000166   C03B                       RJMP    ??sample_rate_cal_1
     36              
     37                  //48kHz
     38                  else if(sample_rate>min48 && sample_rate<max48)	sr_led_data=1;
   \                     ??sample_rate_cal_8:
   \   00000168   ....                       LDI     R30,LOW(min48)
   \   0000016A   ....                       LDI     R31,(min48) >> 8
   \   0000016C   8100                       LD      R16,Z
   \   0000016E   8111                       LDD     R17,Z+1
   \   00000170   ....                       LDI     R30,LOW(sample_rate)
   \   00000172   ....                       LDI     R31,(sample_rate) >> 8
   \   00000174   8120                       LD      R18,Z
   \   00000176   8131                       LDD     R19,Z+1
   \   00000178   1702                       CP      R16,R18
   \   0000017A   0713                       CPC     R17,R19
   \   0000017C   F478                       BRCC    ??sample_rate_cal_9
   \   0000017E   ....                       LDI     R30,LOW(sample_rate)
   \   00000180   ....                       LDI     R31,(sample_rate) >> 8
   \   00000182   8100                       LD      R16,Z
   \   00000184   8111                       LDD     R17,Z+1
   \   00000186   ....                       LDI     R30,LOW(max48)
   \   00000188   ....                       LDI     R31,(max48) >> 8
   \   0000018A   8120                       LD      R18,Z
   \   0000018C   8131                       LDD     R19,Z+1
   \   0000018E   1702                       CP      R16,R18
   \   00000190   0713                       CPC     R17,R19
   \   00000192   F420                       BRCC    ??sample_rate_cal_9
   \   00000194   E001                       LDI     R16,1
   \   00000196   9300....                   STS     sr_led_data,R16
   \   0000019A   C021                       RJMP    ??sample_rate_cal_1
     39              
     40                  //44.1kHz
     41                  else if(sample_rate>min44 && sample_rate<max44)	sr_led_data=0;
   \                     ??sample_rate_cal_9:
   \   0000019C   ....                       LDI     R30,LOW(min44)
   \   0000019E   ....                       LDI     R31,(min44) >> 8
   \   000001A0   8100                       LD      R16,Z
   \   000001A2   8111                       LDD     R17,Z+1
   \   000001A4   ....                       LDI     R30,LOW(sample_rate)
   \   000001A6   ....                       LDI     R31,(sample_rate) >> 8
   \   000001A8   8120                       LD      R18,Z
   \   000001AA   8131                       LDD     R19,Z+1
   \   000001AC   1702                       CP      R16,R18
   \   000001AE   0713                       CPC     R17,R19
   \   000001B0   F478                       BRCC    ??sample_rate_cal_10
   \   000001B2   ....                       LDI     R30,LOW(sample_rate)
   \   000001B4   ....                       LDI     R31,(sample_rate) >> 8
   \   000001B6   8100                       LD      R16,Z
   \   000001B8   8111                       LDD     R17,Z+1
   \   000001BA   ....                       LDI     R30,LOW(max44)
   \   000001BC   ....                       LDI     R31,(max44) >> 8
   \   000001BE   8120                       LD      R18,Z
   \   000001C0   8131                       LDD     R19,Z+1
   \   000001C2   1702                       CP      R16,R18
   \   000001C4   0713                       CPC     R17,R19
   \   000001C6   F420                       BRCC    ??sample_rate_cal_10
   \   000001C8   E000                       LDI     R16,0
   \   000001CA   9300....                   STS     sr_led_data,R16
   \   000001CE   C007                       RJMP    ??sample_rate_cal_1
     42              
     43                  else sr_led_data=6;	//sr led off
   \                     ??sample_rate_cal_10:
   \   000001D0   E006                       LDI     R16,6
   \   000001D2   9300....                   STS     sr_led_data,R16
   \   000001D6   C003                       RJMP    ??sample_rate_cal_1
     44                  
     45                  /*
     46                  //192kHz
     47                  if(sample_rate>min192 && sample_rate<max192)	{sr_led_data=5;exMute=0;}
     48              
     49                  //176.4kHz
     50                  else if(sample_rate>min176 && sample_rate<max176)	{sr_led_data=4;exMute=0;}
     51                  
     52                  //96kHz
     53                  else if(sample_rate>min96 && sample_rate<max96)	{sr_led_data=3;exMute=0;}
     54              
     55                  //88.2kHz
     56                  else if(sample_rate>min88 && sample_rate<max88)	{sr_led_data=2;exMute=0;}
     57              
     58                  //48kHz
     59                  else if(sample_rate>min48 && sample_rate<max48)	{sr_led_data=1;exMute=0;}
     60              
     61                  //44.1kHz
     62                  else if(sample_rate>min44 && sample_rate<max44)	{sr_led_data=0;exMute=0;}
     63                  else{
     64                    sr_led_data=6;
     65                    exMute=1;
     66                  }
     67                  */
     68              }
     69              else sr_led_data=6;	//sr led off
   \                     ??sample_rate_cal_4:
   \   000001D8   E006                       LDI     R16,6
   \   000001DA   9300....                   STS     sr_led_data,R16
     70            }
     71            
     72            
     73            if(sr_led_data==6){
   \                     ??sample_rate_cal_1:
   \   000001DE   9100....                   LDS     R16,sr_led_data
   \   000001E2   3006                       CPI     R16,6
   \   000001E4   F421                       BRNE    ??sample_rate_cal_11
     74              exMute=1;
   \   000001E6   E001                       LDI     R16,1
   \   000001E8   9300....                   STS     exMute,R16
   \   000001EC   C003                       RJMP    ??sample_rate_cal_12
     75            }
     76            else exMute=0;
   \                     ??sample_rate_cal_11:
   \   000001EE   E000                       LDI     R16,0
   \   000001F0   9300....                   STS     exMute,R16
     77           
     78            if(exMute!=old_exMute) {
   \                     ??sample_rate_cal_12:
   \   000001F4   9100....                   LDS     R16,exMute
   \   000001F8   9110....                   LDS     R17,old_exMute
   \   000001FC   1701                       CP      R16,R17
   \   000001FE   F0D9                       BREQ    ??sample_rate_cal_13
     79              old_exMute=exMute;
   \   00000200   9100....                   LDS     R16,exMute
   \   00000204   9300....                   STS     old_exMute,R16
     80             
     81              if(!old_exMute) temp=vol_dB;
   \   00000208   9100....                   LDS     R16,old_exMute
   \   0000020C   2300                       TST     R16
   \   0000020E   F419                       BRNE    ??sample_rate_cal_14
   \   00000210   9190....                   LDS     R25,vol_dB
   \   00000214   C001                       RJMP    ??sample_rate_cal_15
     82              else temp=224;    //-114dB
   \                     ??sample_rate_cal_14:
   \   00000216   EE90                       LDI     R25,224
     83                
     84              for(i=0; i<8; i++){
   \                     ??sample_rate_cal_15:
   \   00000218   E080                       LDI     R24,0
   \   0000021A   C00B                       RJMP    ??sample_rate_cal_16
     85                I2C_Write(0x90,i,temp);	//Lch volume of DAC0
   \                     ??sample_rate_cal_17:
   \   0000021C   2F29                       MOV     R18,R25
   \   0000021E   2F18                       MOV     R17,R24
   \   00000220   E900                       LDI     R16,144
   \   00000222   ........                   CALL    I2C_Write
     86                I2C_Write(0x92,i,temp);	//Rch volume of DAC0
   \   00000226   2F29                       MOV     R18,R25
   \   00000228   2F18                       MOV     R17,R24
   \   0000022A   E902                       LDI     R16,146
   \   0000022C   ........                   CALL    I2C_Write
     87              }
   \   00000230   9583                       INC     R24
   \                     ??sample_rate_cal_16:
   \   00000232   3088                       CPI     R24,8
   \   00000234   F398                       BRCS    ??sample_rate_cal_17
     88              
     89              /*
     90              temp=0xce+(old_exMute);
     91              I2C_Write(0x90, 0x0a, temp);
     92              I2C_Write(0x92, 0x0a, temp);
     93              */
     94            }
     95            
     96          }
   \                     ??sample_rate_cal_13:
   \   00000236   9189                       LD      R24,Y+
   \   00000238   9199                       LD      R25,Y+
   \   0000023A   9508                       RET
     97          
     98          
     99          //ES9018 Automute check
    100          //Any logical change
    101          //active L : unmute, sample rate on
    102          //active H : mute,  sample rate off
    103          #pragma vector = INT7_vect

   \                                 In segment CODE, align 2, keep-with-next
    104          __interrupt void INT7_Handler(void)
   \                     INT7_Handler:
    105          {
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
   \   00000004   93FA                       ST      -Y,R31
   \   00000006   93EA                       ST      -Y,R30
   \   00000008   923A                       ST      -Y,R3
   \   0000000A   922A                       ST      -Y,R2
   \   0000000C   921A                       ST      -Y,R1
   \   0000000E   920A                       ST      -Y,R0
   \   00000010   937A                       ST      -Y,R23
   \   00000012   936A                       ST      -Y,R22
   \   00000014   935A                       ST      -Y,R21
   \   00000016   934A                       ST      -Y,R20
   \   00000018   933A                       ST      -Y,R19
   \   0000001A   932A                       ST      -Y,R18
   \   0000001C   931A                       ST      -Y,R17
   \   0000001E   930A                       ST      -Y,R16
   \   00000020   B78F                       IN      R24,0x3F
   \   00000022   B79B                       IN      R25,0x3B
    106           if(tmr_osc_ck){
   \   00000024   9100....                   LDS     R16,tmr_osc_ck
   \   00000028   2300                       TST     R16
   \   0000002A   F051                       BREQ    ??INT7_Handler_0
    107            if(AUTOMUTE) ess_automute=1; 			//mute,  sample rate off
   \   0000002C   9B0F                       SBIS    0x01,0x07
   \   0000002E   C004                       RJMP    ??INT7_Handler_1
   \   00000030   E001                       LDI     R16,1
   \   00000032   9300....                   STS     ess_automute,R16
   \   00000036   C003                       RJMP    ??INT7_Handler_2
    108            else ess_automute=0;            	                            //unmute, sample rate on
   \                     ??INT7_Handler_1:
   \   00000038   E000                       LDI     R16,0
   \   0000003A   9300....                   STS     ess_automute,R16
    109            
    110            sample_rate_cal();
   \                     ??INT7_Handler_2:
   \   0000003E   ....                       RCALL   sample_rate_cal
    111           }
    112          }
   \                     ??INT7_Handler_0:
   \   00000040   BF9B                       OUT     0x3B,R25
   \   00000042   BF8F                       OUT     0x3F,R24
   \   00000044   9109                       LD      R16,Y+
   \   00000046   9119                       LD      R17,Y+
   \   00000048   9129                       LD      R18,Y+
   \   0000004A   9139                       LD      R19,Y+
   \   0000004C   9149                       LD      R20,Y+
   \   0000004E   9159                       LD      R21,Y+
   \   00000050   9169                       LD      R22,Y+
   \   00000052   9179                       LD      R23,Y+
   \   00000054   9009                       LD      R0,Y+
   \   00000056   9019                       LD      R1,Y+
   \   00000058   9029                       LD      R2,Y+
   \   0000005A   9039                       LD      R3,Y+
   \   0000005C   91E9                       LD      R30,Y+
   \   0000005E   91F9                       LD      R31,Y+
   \   00000060   9189                       LD      R24,Y+
   \   00000062   9199                       LD      R25,Y+
   \   00000064   9518                       RETI
    113          
    114          
    115          //ESS LOCK-Lch
    116          //Any logical change
    117          //high : lock,		low : unlock
    118          #pragma vector = INT6_vect

   \                                 In segment CODE, align 2, keep-with-next
    119          __interrupt void INT6_Handler(void)
   \                     INT6_Handler:
    120          {
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
   \   00000004   93FA                       ST      -Y,R31
   \   00000006   93EA                       ST      -Y,R30
   \   00000008   923A                       ST      -Y,R3
   \   0000000A   922A                       ST      -Y,R2
   \   0000000C   921A                       ST      -Y,R1
   \   0000000E   920A                       ST      -Y,R0
   \   00000010   937A                       ST      -Y,R23
   \   00000012   936A                       ST      -Y,R22
   \   00000014   935A                       ST      -Y,R21
   \   00000016   934A                       ST      -Y,R20
   \   00000018   933A                       ST      -Y,R19
   \   0000001A   932A                       ST      -Y,R18
   \   0000001C   931A                       ST      -Y,R17
   \   0000001E   930A                       ST      -Y,R16
   \   00000020   B78F                       IN      R24,0x3F
   \   00000022   B79B                       IN      R25,0x3B
    121           if(tmr_osc_ck){
   \   00000024   9100....                   LDS     R16,tmr_osc_ck
   \   00000028   2300                       TST     R16
   \   0000002A   F051                       BREQ    ??INT6_Handler_0
    122            if(ESS_LOCK) ess_lock_ck=1;
   \   0000002C   9B0E                       SBIS    0x01,0x06
   \   0000002E   C004                       RJMP    ??INT6_Handler_1
   \   00000030   E001                       LDI     R16,1
   \   00000032   9300....                   STS     ess_lock_ck,R16
   \   00000036   C003                       RJMP    ??INT6_Handler_2
    123            else ess_lock_ck=0;
   \                     ??INT6_Handler_1:
   \   00000038   E000                       LDI     R16,0
   \   0000003A   9300....                   STS     ess_lock_ck,R16
    124            
    125            sample_rate_cal();
   \                     ??INT6_Handler_2:
   \   0000003E   ....                       RCALL   sample_rate_cal
    126           }
    127          }
   \                     ??INT6_Handler_0:
   \   00000040   BF9B                       OUT     0x3B,R25
   \   00000042   BF8F                       OUT     0x3F,R24
   \   00000044   9109                       LD      R16,Y+
   \   00000046   9119                       LD      R17,Y+
   \   00000048   9129                       LD      R18,Y+
   \   0000004A   9139                       LD      R19,Y+
   \   0000004C   9149                       LD      R20,Y+
   \   0000004E   9159                       LD      R21,Y+
   \   00000050   9169                       LD      R22,Y+
   \   00000052   9179                       LD      R23,Y+
   \   00000054   9009                       LD      R0,Y+
   \   00000056   9019                       LD      R1,Y+
   \   00000058   9029                       LD      R2,Y+
   \   0000005A   9039                       LD      R3,Y+
   \   0000005C   91E9                       LD      R30,Y+
   \   0000005E   91F9                       LD      R31,Y+
   \   00000060   9189                       LD      R24,Y+
   \   00000062   9199                       LD      R25,Y+
   \   00000064   9518                       RETI
    128          /*
    129          U8 non_audio_check=0;
    130          U8 old_non_audio=0;
    131          U8 non_audio_tmr=0;
    132          //Non_audio check
    133          //Any logical change
    134          //high : non_audio -> sdout: muted,		low : audio -> sdout : not muted
    135          #pragma vector = INT4_vect
    136          __interrupt void INT4_Handler(void)
    137          {
    138            non_audio_check=1;
    139            if(PINE_Bit4) old_non_audio=1;
    140            else I2C_Write(0x20, 0x01, 0x84);    //not muted
    141          }*/
    142          
    143          //Button Key
    144          // falling edge
    145          #pragma vector = INT3_vect

   \                                 In segment CODE, align 2, keep-with-next
    146          __interrupt void INT3_Handler(void)
   \                     INT3_Handler:
    147          {
   \   00000000   939A                       ST      -Y,R25
   \   00000002   938A                       ST      -Y,R24
   \   00000004   93FA                       ST      -Y,R31
   \   00000006   93EA                       ST      -Y,R30
   \   00000008   923A                       ST      -Y,R3
   \   0000000A   922A                       ST      -Y,R2
   \   0000000C   921A                       ST      -Y,R1
   \   0000000E   920A                       ST      -Y,R0
   \   00000010   937A                       ST      -Y,R23
   \   00000012   936A                       ST      -Y,R22
   \   00000014   935A                       ST      -Y,R21
   \   00000016   934A                       ST      -Y,R20
   \   00000018   933A                       ST      -Y,R19
   \   0000001A   932A                       ST      -Y,R18
   \   0000001C   931A                       ST      -Y,R17
   \   0000001E   930A                       ST      -Y,R16
   \   00000020   B78F                       IN      R24,0x3F
   \   00000022   B79B                       IN      R25,0x3B
    148            U8 data=0;
    149            key_int_flag=0;
   \   00000024   E010                       LDI     R17,0
   \   00000026   9310....                   STS     key_int_flag,R17
    150            data=KEY_DATA2;
   \   0000002A   E010                       LDI     R17,0
   \   0000002C   9986                       SBIC    0x10,0x06
   \   0000002E   9513                       INC     R17
   \                     ??INT3_Handler_0:
   \   00000030   2F01                       MOV     R16,R17
    151            data<<=1;
   \   00000032   0F00                       LSL     R16
    152            data+=KEY_DATA1;
   \   00000034   E010                       LDI     R17,0
   \   00000036   9985                       SBIC    0x10,0x05
   \   00000038   9513                       INC     R17
   \                     ??INT3_Handler_1:
   \   0000003A   0F01                       ADD     R16,R17
    153            data<<=1;
   \   0000003C   0F00                       LSL     R16
    154            data+=KEY_DATA0;
   \   0000003E   E010                       LDI     R17,0
   \   00000040   9984                       SBIC    0x10,0x04
   \   00000042   9513                       INC     R17
   \                     ??INT3_Handler_2:
   \   00000044   0F01                       ADD     R16,R17
    155            
    156            // data =1 : ch-dn,   2: vol-up,  3 : mute,   4 : ch-up,  5 : vol-dn,   6 : inverse,  7 : filter
    157           if(tmr_osc_ck){
   \   00000046   9110....                   LDS     R17,tmr_osc_ck
   \   0000004A   2311                       TST     R17
   \   0000004C   F1C9                       BREQ    ??INT3_Handler_3
    158            //channel down
    159            if(data==1){
   \   0000004E   3001                       CPI     R16,1
   \   00000050   F419                       BRNE    ??INT3_Handler_4
    160              channel_down();
   \   00000052   ........                   CALL    channel_down
   \   00000056   C031                       RJMP    ??INT3_Handler_5
    161            }
    162            
    163            //volume up
    164            else if(data==2) {
   \                     ??INT3_Handler_4:
   \   00000058   3002                       CPI     R16,2
   \   0000005A   F419                       BRNE    ??INT3_Handler_6
    165              audio_level_up();                            //Master Volume Up
   \   0000005C   ........                   CALL    audio_level_up
   \   00000060   C02C                       RJMP    ??INT3_Handler_5
    166            }
    167            
    168            //mute
    169            else if(data==3){
   \                     ??INT3_Handler_6:
   \   00000062   3003                       CPI     R16,3
   \   00000064   F419                       BRNE    ??INT3_Handler_7
    170              ess_mute();	//mute
   \   00000066   ........                   CALL    ess_mute
   \   0000006A   C027                       RJMP    ??INT3_Handler_5
    171            }
    172            
    173            //channel up
    174            else if(data==4){
   \                     ??INT3_Handler_7:
   \   0000006C   3004                       CPI     R16,4
   \   0000006E   F419                       BRNE    ??INT3_Handler_8
    175              channel_up();
   \   00000070   ........                   CALL    channel_up
   \   00000074   C022                       RJMP    ??INT3_Handler_5
    176            }
    177            
    178            //volume down
    179            else if(data==5){
   \                     ??INT3_Handler_8:
   \   00000076   3005                       CPI     R16,5
   \   00000078   F419                       BRNE    ??INT3_Handler_9
    180              audio_level_down();                        //Master Volume Down
   \   0000007A   ........                   CALL    audio_level_down
   \   0000007E   C01D                       RJMP    ??INT3_Handler_5
    181            }
    182            
    183            //inverse
    184            else if(data==6){
   \                     ??INT3_Handler_9:
   \   00000080   3006                       CPI     R16,6
   \   00000082   F469                       BRNE    ??INT3_Handler_10
    185              if(!key_condition) key_func=1;
   \   00000084   9100....                   LDS     R16,key_condition
   \   00000088   2300                       TST     R16
   \   0000008A   F421                       BRNE    ??INT3_Handler_11
   \   0000008C   E001                       LDI     R16,1
   \   0000008E   9300....                   STS     key_func,R16
   \   00000092   C003                       RJMP    ??INT3_Handler_12
    186              else key_func=3;
   \                     ??INT3_Handler_11:
   \   00000094   E003                       LDI     R16,3
   \   00000096   9300....                   STS     key_func,R16
    187              femto_function();
   \                     ??INT3_Handler_12:
   \   0000009A   ....                       RCALL   femto_function
   \   0000009C   C00E                       RJMP    ??INT3_Handler_5
    188              //phase_write();	//phase
    189              //phase_ess();
    190            }
    191            
    192            //filter
    193            else if(data==7){
   \                     ??INT3_Handler_10:
   \   0000009E   3007                       CPI     R16,7
   \   000000A0   F461                       BRNE    ??INT3_Handler_5
    194              if(!key_condition) key_func=2;
   \   000000A2   9100....                   LDS     R16,key_condition
   \   000000A6   2300                       TST     R16
   \   000000A8   F421                       BRNE    ??INT3_Handler_13
   \   000000AA   E002                       LDI     R16,2
   \   000000AC   9300....                   STS     key_func,R16
   \   000000B0   C003                       RJMP    ??INT3_Handler_14
    195              else key_func=4;
   \                     ??INT3_Handler_13:
   \   000000B2   E004                       LDI     R16,4
   \   000000B4   9300....                   STS     key_func,R16
    196              femto_function();
   \                     ??INT3_Handler_14:
   \   000000B8   ....                       RCALL   femto_function
    197              //filter_led<<=1;
    198              //if(filter_led>0x04)  filter_led=1;	//filter1
    199              //ess_filter(filter_led);
    200            }
    201            key_int_flag=1;
   \                     ??INT3_Handler_5:
   \   000000BA   E001                       LDI     R16,1
   \   000000BC   9300....                   STS     key_int_flag,R16
    202           }
    203          }
   \                     ??INT3_Handler_3:
   \   000000C0   BF9B                       OUT     0x3B,R25
   \   000000C2   BF8F                       OUT     0x3F,R24
   \   000000C4   9109                       LD      R16,Y+
   \   000000C6   9119                       LD      R17,Y+
   \   000000C8   9129                       LD      R18,Y+
   \   000000CA   9139                       LD      R19,Y+
   \   000000CC   9149                       LD      R20,Y+
   \   000000CE   9159                       LD      R21,Y+
   \   000000D0   9169                       LD      R22,Y+
   \   000000D2   9179                       LD      R23,Y+
   \   000000D4   9009                       LD      R0,Y+
   \   000000D6   9019                       LD      R1,Y+
   \   000000D8   9029                       LD      R2,Y+
   \   000000DA   9039                       LD      R3,Y+
   \   000000DC   91E9                       LD      R30,Y+
   \   000000DE   91F9                       LD      R31,Y+
   \   000000E0   9189                       LD      R24,Y+
   \   000000E2   9199                       LD      R25,Y+
   \   000000E4   9518                       RETI
    204          
    205          ///////////////////////////////////////////////////////////////////////////////
    206          

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
    207          U16 led_tmr=0;
   \                     led_tmr:
   \   00000000                              DS 2

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
    208          U8 init_sr_led=1;
   \                     init_sr_led:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for init_sr_led>`
    209          
    210          #pragma vector = TIMER0_OVF_vect

   \                                 In segment CODE, align 2, keep-with-next
    211          __interrupt void TIMER0_OVF_Handler(void)
   \                     TIMER0_OVF_Handler:
    212          {
   \   00000000   925A                       ST      -Y,R5
   \   00000002   924A                       ST      -Y,R4
   \   00000004   93BA                       ST      -Y,R27
   \   00000006   93AA                       ST      -Y,R26
   \   00000008   939A                       ST      -Y,R25
   \   0000000A   938A                       ST      -Y,R24
   \   0000000C   93FA                       ST      -Y,R31
   \   0000000E   93EA                       ST      -Y,R30
   \   00000010   923A                       ST      -Y,R3
   \   00000012   922A                       ST      -Y,R2
   \   00000014   921A                       ST      -Y,R1
   \   00000016   920A                       ST      -Y,R0
   \   00000018   937A                       ST      -Y,R23
   \   0000001A   936A                       ST      -Y,R22
   \   0000001C   935A                       ST      -Y,R21
   \   0000001E   934A                       ST      -Y,R20
   \   00000020   933A                       ST      -Y,R19
   \   00000022   932A                       ST      -Y,R18
   \   00000024   931A                       ST      -Y,R17
   \   00000026   930A                       ST      -Y,R16
   \   00000028   B64F                       IN      R4,0x3F
   \   0000002A   B65B                       IN      R5,0x3B
   \   0000002C                              REQUIRE ?Register_R4_is_cg_reg
   \   0000002C                              REQUIRE ?Register_R5_is_cg_reg
    213            U8 i;
    214            
    215            TCNT0=255-250; //500usec 
   \   0000002C   E005                       LDI     R16,5
   \   0000002E   BF02                       OUT     0x32,R16
    216            // 16MHz / 32prescaling = 500kHz
    217            // T= 1 / 500kHz = 2usec
    218            // 2usec X 250 = 500usec
    219            
    220            Time_500us++;  
   \   00000030   ....                       LDI     R30,LOW(Time_500us)
   \   00000032   ....                       LDI     R31,(Time_500us) >> 8
   \   00000034   8100                       LD      R16,Z
   \   00000036   9503                       INC     R16
   \   00000038   8300                       ST      Z,R16
    221           // if(mtime_flag) mtime_length++;
    222            
    223            if(tmr_osc_ck){
   \   0000003A   9100....                   LDS     R16,tmr_osc_ck
   \   0000003E   2300                       TST     R16
   \   00000040   F409                       BRNE    $+2+2
   \   00000042   C092                       RJMP    ??TIMER0_OVF_Handler_0
    224              if(key_func){   //filter or inverse f();  
   \   00000044   9100....                   LDS     R16,key_func
   \   00000048   2300                       TST     R16
   \   0000004A   F0B9                       BREQ    ??TIMER0_OVF_Handler_1
    225                if(key_func_tmr>6000) { key_func=0; key_condition=0; }
   \   0000004C   ....                       LDI     R30,LOW(key_func_tmr)
   \   0000004E   ....                       LDI     R31,(key_func_tmr) >> 8
   \   00000050   8100                       LD      R16,Z
   \   00000052   8111                       LDD     R17,Z+1
   \   00000054   3701                       CPI     R16,113
   \   00000056   E127                       LDI     R18,23
   \   00000058   0712                       CPC     R17,R18
   \   0000005A   F030                       BRCS    ??TIMER0_OVF_Handler_2
   \   0000005C   E000                       LDI     R16,0
   \   0000005E   9300....                   STS     key_func,R16
   \   00000062   E000                       LDI     R16,0
   \   00000064   9300....                   STS     key_condition,R16
    226                
    227                key_func_tmr++;
   \                     ??TIMER0_OVF_Handler_2:
   \   00000068   ....                       LDI     R30,LOW(key_func_tmr)
   \   0000006A   ....                       LDI     R31,(key_func_tmr) >> 8
   \   0000006C   8100                       LD      R16,Z
   \   0000006E   8111                       LDD     R17,Z+1
   \   00000070   5F0F                       SUBI    R16,255
   \   00000072   4F1F                       SBCI    R17,255
   \   00000074   8300                       ST      Z,R16
   \   00000076   8311                       STD     Z+1,R17
   \   00000078   C077                       RJMP    ??TIMER0_OVF_Handler_0
    228              }
    229              
    230              else {         // channel and sample rate, volume
    231                if(led_tmr==200){   //0.1sec      
   \                     ??TIMER0_OVF_Handler_1:
   \   0000007A   ....                       LDI     R30,LOW(led_tmr)
   \   0000007C   ....                       LDI     R31,(led_tmr) >> 8
   \   0000007E   8100                       LD      R16,Z
   \   00000080   8111                       LDD     R17,Z+1
   \   00000082   3C08                       CPI     R16,200
   \   00000084   E020                       LDI     R18,0
   \   00000086   0712                       CPC     R17,R18
   \   00000088   F009                       BREQ    $+2+2
   \   0000008A   C045                       RJMP    ??TIMER0_OVF_Handler_3
    232                  for(i=0; i<16; i++){
   \   0000008C   E080                       LDI     R24,0
   \   0000008E   C00D                       RJMP    ??TIMER0_OVF_Handler_4
    233                    if(i<6) dot_string[i]=ch_name[ch_led_data][i];
    234                    else if(i<12) dot_string[i]=sr_name[sr_led_data][i-6];
    235                    else  dot_string[i]=ess_volume[i-12];
   \                     ??TIMER0_OVF_Handler_5:
   \   00000090   2FA8                       MOV     R26,R24
   \   00000092   E0B0                       LDI     R27,0
   \   00000094   971C                       SBIW    R27 : R26,12
   \   00000096   01FD                       MOVW    R31 : R30,R27 : R26
   \   00000098   ....                       SUBI    R30,LOW((-(ess_volume) & 0xFFFF))
   \   0000009A   ....                       SBCI    R31,(-(ess_volume) & 0xFFFF) >> 8
   \   0000009C   8100                       LD      R16,Z
   \   0000009E   E090                       LDI     R25,0
   \   000000A0   01FC                       MOVW    R31 : R30,R25 : R24
   \   000000A2   ....                       SUBI    R30,LOW((-(dot_string) & 0xFFFF))
   \   000000A4   ....                       SBCI    R31,(-(dot_string) & 0xFFFF) >> 8
   \   000000A6   8300                       ST      Z,R16
   \                     ??TIMER0_OVF_Handler_6:
   \   000000A8   9583                       INC     R24
   \                     ??TIMER0_OVF_Handler_4:
   \   000000AA   3180                       CPI     R24,16
   \   000000AC   F588                       BRCC    ??TIMER0_OVF_Handler_7
   \   000000AE   3086                       CPI     R24,6
   \   000000B0   F4A8                       BRCC    ??TIMER0_OVF_Handler_8
   \   000000B2   ....                       LDI     R26,LOW(ch_name)
   \   000000B4   ....                       LDI     R27,(ch_name) >> 8
   \   000000B6   9140....                   LDS     R20,ch_led_data
   \   000000BA   E050                       LDI     R21,0
   \   000000BC   E006                       LDI     R16,6
   \   000000BE   E010                       LDI     R17,0
   \   000000C0   ........                   CALL    ?S_EC_MUL_L02
   \   000000C4   0FA0                       ADD     R26,R16
   \   000000C6   1FB1                       ADC     R27,R17
   \   000000C8   E090                       LDI     R25,0
   \   000000CA   0FA8                       ADD     R26,R24
   \   000000CC   1FB9                       ADC     R27,R25
   \   000000CE   910C                       LD      R16,X
   \   000000D0   E090                       LDI     R25,0
   \   000000D2   01FC                       MOVW    R31 : R30,R25 : R24
   \   000000D4   ....                       SUBI    R30,LOW((-(dot_string) & 0xFFFF))
   \   000000D6   ....                       SBCI    R31,(-(dot_string) & 0xFFFF) >> 8
   \   000000D8   8300                       ST      Z,R16
   \   000000DA   CFE6                       RJMP    ??TIMER0_OVF_Handler_6
   \                     ??TIMER0_OVF_Handler_8:
   \   000000DC   308C                       CPI     R24,12
   \   000000DE   F6C0                       BRCC    ??TIMER0_OVF_Handler_5
   \   000000E0   ....                       LDI     R26,LOW(sr_name)
   \   000000E2   ....                       LDI     R27,(sr_name) >> 8
   \   000000E4   9140....                   LDS     R20,sr_led_data
   \   000000E8   E050                       LDI     R21,0
   \   000000EA   E006                       LDI     R16,6
   \   000000EC   E010                       LDI     R17,0
   \   000000EE   ........                   CALL    ?S_EC_MUL_L02
   \   000000F2   0FA0                       ADD     R26,R16
   \   000000F4   1FB1                       ADC     R27,R17
   \   000000F6   2F08                       MOV     R16,R24
   \   000000F8   E010                       LDI     R17,0
   \   000000FA   5006                       SUBI    R16,6
   \   000000FC   4010                       SBCI    R17,0
   \   000000FE   0FA0                       ADD     R26,R16
   \   00000100   1FB1                       ADC     R27,R17
   \   00000102   910C                       LD      R16,X
   \   00000104   E090                       LDI     R25,0
   \   00000106   01FC                       MOVW    R31 : R30,R25 : R24
   \   00000108   ....                       SUBI    R30,LOW((-(dot_string) & 0xFFFF))
   \   0000010A   ....                       SBCI    R31,(-(dot_string) & 0xFFFF) >> 8
   \   0000010C   8300                       ST      Z,R16
   \   0000010E   CFCC                       RJMP    ??TIMER0_OVF_Handler_6
    236                  }
    237                  dot_string_digit();
   \                     ??TIMER0_OVF_Handler_7:
   \   00000110   ........                   CALL    dot_string_digit
   \   00000114   C021                       RJMP    ??TIMER0_OVF_Handler_9
    238                  //for(i=0; i<5; i++)        dot_matrix_digit ( ch_name[ch_led_data][i],i ); 
    239                  //dot_vol_hextodeci(vol_dB);
    240                }
    241                
    242                else if(led_tmr==800){  //sample rate,  0.4sec
   \                     ??TIMER0_OVF_Handler_3:
   \   00000116   ....                       LDI     R30,LOW(led_tmr)
   \   00000118   ....                       LDI     R31,(led_tmr) >> 8
   \   0000011A   8100                       LD      R16,Z
   \   0000011C   8111                       LDD     R17,Z+1
   \   0000011E   3200                       CPI     R16,32
   \   00000120   E023                       LDI     R18,3
   \   00000122   0712                       CPC     R17,R18
   \   00000124   F4C9                       BRNE    ??TIMER0_OVF_Handler_9
    243                  
    244                  if(AUTOMUTE) ess_automute=1; 			//mute,  sample rate off
   \   00000126   9B0F                       SBIS    0x01,0x07
   \   00000128   C004                       RJMP    ??TIMER0_OVF_Handler_10
   \   0000012A   E001                       LDI     R16,1
   \   0000012C   9300....                   STS     ess_automute,R16
   \   00000130   C003                       RJMP    ??TIMER0_OVF_Handler_11
    245                  else ess_automute=0;            	                            //unmute, sample rate on
   \                     ??TIMER0_OVF_Handler_10:
   \   00000132   E000                       LDI     R16,0
   \   00000134   9300....                   STS     ess_automute,R16
    246                
    247                  if(ESS_LOCK) ess_lock_ck=1;
   \                     ??TIMER0_OVF_Handler_11:
   \   00000138   9B0E                       SBIS    0x01,0x06
   \   0000013A   C004                       RJMP    ??TIMER0_OVF_Handler_12
   \   0000013C   E001                       LDI     R16,1
   \   0000013E   9300....                   STS     ess_lock_ck,R16
   \   00000142   C003                       RJMP    ??TIMER0_OVF_Handler_13
    248                  else ess_lock_ck=0;
   \                     ??TIMER0_OVF_Handler_12:
   \   00000144   E000                       LDI     R16,0
   \   00000146   9300....                   STS     ess_lock_ck,R16
    249                
    250                  sample_rate_cal();
   \                     ??TIMER0_OVF_Handler_13:
   \   0000014A   ....                       RCALL   sample_rate_cal
    251                  
    252                  //for(i=0; i<2; i++)       dot_matrix_digit ( sr_name[sr_led_data][i],i+6 );
    253                  //for(i=2; i<5; i++)       dot_matrix_digit2 ( sr_name[sr_led_data][i],i-2 );
    254                
    255                  led_tmr=0;
   \   0000014C   E000                       LDI     R16,0
   \   0000014E   E010                       LDI     R17,0
   \   00000150   ....                       LDI     R30,LOW(led_tmr)
   \   00000152   ....                       LDI     R31,(led_tmr) >> 8
   \   00000154   8300                       ST      Z,R16
   \   00000156   8311                       STD     Z+1,R17
    256                }
    257                led_tmr++;  
   \                     ??TIMER0_OVF_Handler_9:
   \   00000158   ....                       LDI     R30,LOW(led_tmr)
   \   0000015A   ....                       LDI     R31,(led_tmr) >> 8
   \   0000015C   8100                       LD      R16,Z
   \   0000015E   8111                       LDD     R17,Z+1
   \   00000160   5F0F                       SUBI    R16,255
   \   00000162   4F1F                       SBCI    R17,255
   \   00000164   8300                       ST      Z,R16
   \   00000166   8311                       STD     Z+1,R17
    258              }// end else 
    259             
    260              
    261            }
    262          }
   \                     ??TIMER0_OVF_Handler_0:
   \   00000168   BE5B                       OUT     0x3B,R5
   \   0000016A   BE4F                       OUT     0x3F,R4
   \   0000016C   9109                       LD      R16,Y+
   \   0000016E   9119                       LD      R17,Y+
   \   00000170   9129                       LD      R18,Y+
   \   00000172   9139                       LD      R19,Y+
   \   00000174   9149                       LD      R20,Y+
   \   00000176   9159                       LD      R21,Y+
   \   00000178   9169                       LD      R22,Y+
   \   0000017A   9179                       LD      R23,Y+
   \   0000017C   9009                       LD      R0,Y+
   \   0000017E   9019                       LD      R1,Y+
   \   00000180   9029                       LD      R2,Y+
   \   00000182   9039                       LD      R3,Y+
   \   00000184   91E9                       LD      R30,Y+
   \   00000186   91F9                       LD      R31,Y+
   \   00000188   9189                       LD      R24,Y+
   \   0000018A   9199                       LD      R25,Y+
   \   0000018C   91A9                       LD      R26,Y+
   \   0000018E   91B9                       LD      R27,Y+
   \   00000190   9049                       LD      R4,Y+
   \   00000192   9059                       LD      R5,Y+
   \   00000194   9518                       RETI

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
    263          U8 tmr_flag_ck=1;
   \                     tmr_flag_ck:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for tmr_flag_ck>`
    264          //Board Timer
    265          #pragma vector = TIMER1_OVF_vect

   \                                 In segment CODE, align 2, keep-with-next
    266          __interrupt void TIMER1_OVF_Handler(void)
   \                     TIMER1_OVF_Handler:
    267          {
   \   00000000   93BA                       ST      -Y,R27
   \   00000002   93AA                       ST      -Y,R26
   \   00000004   939A                       ST      -Y,R25
   \   00000006   938A                       ST      -Y,R24
   \   00000008   93FA                       ST      -Y,R31
   \   0000000A   93EA                       ST      -Y,R30
   \   0000000C   923A                       ST      -Y,R3
   \   0000000E   922A                       ST      -Y,R2
   \   00000010   921A                       ST      -Y,R1
   \   00000012   920A                       ST      -Y,R0
   \   00000014   937A                       ST      -Y,R23
   \   00000016   936A                       ST      -Y,R22
   \   00000018   935A                       ST      -Y,R21
   \   0000001A   934A                       ST      -Y,R20
   \   0000001C   933A                       ST      -Y,R19
   \   0000001E   932A                       ST      -Y,R18
   \   00000020   931A                       ST      -Y,R17
   \   00000022   930A                       ST      -Y,R16
   \   00000024   B78F                       IN      R24,0x3F
   \   00000026   B79B                       IN      R25,0x3B
    268          U8 data=0;
    269          U16 temp;
    270            //TCNT1=0xffff-1563; //0.1sec 
    271            TCNT1=0xffff-781; //0.05sec 
   \   00000028   EF02                       LDI     R16,242
   \   0000002A   EF1C                       LDI     R17,252
   \   0000002C   BD1D                       OUT     0x2D,R17
   \   0000002E   BD0C                       OUT     0x2C,R16
    272            // 16MHz / 1024precaling = 15.625kHz
    273            // T= 1 / 15.625Hz = 64usec
    274            // 64usec X 1563 = 0.1sec
    275            // 64usec X 781 = 50msec
    276            
    277            //test
    278            if(tmr_osc) {
   \   00000030   9100....                   LDS     R16,tmr_osc
   \   00000034   2300                       TST     R16
   \   00000036   F409                       BRNE    $+2+2
   \   00000038   C110                       RJMP    ??TIMER1_OVF_Handler_0
    279              if(tmr_osc<91) tmr_osc++;
   \   0000003A   9100....                   LDS     R16,tmr_osc
   \   0000003E   350B                       CPI     R16,91
   \   00000040   F428                       BRCC    ??TIMER1_OVF_Handler_1
   \   00000042   ....                       LDI     R30,LOW(tmr_osc)
   \   00000044   ....                       LDI     R31,(tmr_osc) >> 8
   \   00000046   8100                       LD      R16,Z
   \   00000048   9503                       INC     R16
   \   0000004A   8300                       ST      Z,R16
    280              if(tmr_osc==30) {   //1.5sec
   \                     ??TIMER1_OVF_Handler_1:
   \   0000004C   9100....                   LDS     R16,tmr_osc
   \   00000050   310E                       CPI     R16,30
   \   00000052   F411                       BRNE    ??TIMER1_OVF_Handler_2
    281                //_system_init_1();
    282                _system_init_se();
   \   00000054   ....                       RCALL   _system_init_se
   \   00000056   C029                       RJMP    ??TIMER1_OVF_Handler_3
    283              }
    284              /*else if(tmr_osc==60) {    //3sec
    285                _system_init_se();
    286              }*/
    287              else if(tmr_osc==90) {    //4.5sec
   \                     ??TIMER1_OVF_Handler_2:
   \   00000058   9100....                   LDS     R16,tmr_osc
   \   0000005C   350A                       CPI     R16,90
   \   0000005E   F529                       BRNE    ??TIMER1_OVF_Handler_3
    288                //_system_init_1();
    289                es9018_reg10=0xce;			
   \   00000060   EC0E                       LDI     R16,206
   \   00000062   9300....                   STS     es9018_reg10,R16
    290                I2C_Write(0x90, 0x0a, es9018_reg10);
   \   00000066   9120....                   LDS     R18,es9018_reg10
   \   0000006A   E01A                       LDI     R17,10
   \   0000006C   E900                       LDI     R16,144
   \   0000006E   ........                   CALL    I2C_Write
    291                I2C_Write(0x92, 0x0a, es9018_reg10);
   \   00000072   9120....                   LDS     R18,es9018_reg10
   \   00000076   E01A                       LDI     R17,10
   \   00000078   E902                       LDI     R16,146
   \   0000007A   ........                   CALL    I2C_Write
    292                init_vol_dn(vol_dB);
   \   0000007E   9100....                   LDS     R16,vol_dB
   \   00000082   ........                   CALL    init_vol_dn
    293                DelayTime_ms(50);  //50msec
   \   00000086   E302                       LDI     R16,50
   \   00000088   E010                       LDI     R17,0
   \   0000008A   ........                   CALL    DelayTime_ms
    294                init_vol(vol_dB);
   \   0000008E   9100....                   LDS     R16,vol_dB
   \   00000092   ........                   CALL    init_vol
    295                dot_vol_hextodeci(vol_dB);
   \   00000096   9100....                   LDS     R16,vol_dB
   \   0000009A   ........                   CALL    dot_vol_hextodeci
    296                tmr_osc_ck=1;
   \   0000009E   E001                       LDI     R16,1
   \   000000A0   9300....                   STS     tmr_osc_ck,R16
    297                init_setting_check=1;   //include remocon interrupt,
   \   000000A4   E001                       LDI     R16,1
   \   000000A6   9300....                   STS     init_setting_check,R16
    298              }
    299              
    300              if(tmr_osc_ck){
   \                     ??TIMER1_OVF_Handler_3:
   \   000000AA   9100....                   LDS     R16,tmr_osc_ck
   \   000000AE   2300                       TST     R16
   \   000000B0   F409                       BRNE    $+2+2
   \   000000B2   C0D3                       RJMP    ??TIMER1_OVF_Handler_0
    301                
    302                if(!KEY_FLAG){
   \   000000B4   9983                       SBIC    0x10,0x03
   \   000000B6   C03A                       RJMP    ??TIMER1_OVF_Handler_4
    303                  if(key_int_flag==1 && key_tmr>5) key_int_flag=2;
   \   000000B8   9100....                   LDS     R16,key_int_flag
   \   000000BC   3001                       CPI     R16,1
   \   000000BE   F451                       BRNE    ??TIMER1_OVF_Handler_5
   \   000000C0   ....                       LDI     R26,LOW(key_tmr)
   \   000000C2   ....                       LDI     R27,(key_tmr) >> 8
   \   000000C4   91ED                       LD      R30,X+
   \   000000C6   91FC                       LD      R31,X
   \   000000C8   9736                       SBIW    R31 : R30,6
   \   000000CA   F020                       BRCS    ??TIMER1_OVF_Handler_5
   \   000000CC   E002                       LDI     R16,2
   \   000000CE   9300....                   STS     key_int_flag,R16
   \   000000D2   C020                       RJMP    ??TIMER1_OVF_Handler_6
    304                  else if(key_int_flag==2 && key_tmr>6){ //key_tmr=400 : 0.05sec
   \                     ??TIMER1_OVF_Handler_5:
   \   000000D4   9100....                   LDS     R16,key_int_flag
   \   000000D8   3002                       CPI     R16,2
   \   000000DA   F4E1                       BRNE    ??TIMER1_OVF_Handler_6
   \   000000DC   ....                       LDI     R26,LOW(key_tmr)
   \   000000DE   ....                       LDI     R27,(key_tmr) >> 8
   \   000000E0   91ED                       LD      R30,X+
   \   000000E2   91FC                       LD      R31,X
   \   000000E4   9737                       SBIW    R31 : R30,7
   \   000000E6   F0B0                       BRCS    ??TIMER1_OVF_Handler_6
    305           
    306                    data=KEY_DATA2;
   \   000000E8   E020                       LDI     R18,0
   \   000000EA   9986                       SBIC    0x10,0x06
   \   000000EC   9523                       INC     R18
    307                    data<<=1;
   \                     ??TIMER1_OVF_Handler_7:
   \   000000EE   0F22                       LSL     R18
    308                    data+=KEY_DATA1;
   \   000000F0   E000                       LDI     R16,0
   \   000000F2   9985                       SBIC    0x10,0x05
   \   000000F4   9503                       INC     R16
   \                     ??TIMER1_OVF_Handler_8:
   \   000000F6   0F20                       ADD     R18,R16
    309                    data<<=1;
   \   000000F8   0F22                       LSL     R18
    310                    data+=KEY_DATA0;
   \   000000FA   E000                       LDI     R16,0
   \   000000FC   9984                       SBIC    0x10,0x04
   \   000000FE   9503                       INC     R16
   \                     ??TIMER1_OVF_Handler_9:
   \   00000100   0F20                       ADD     R18,R16
    311                    
    312                    if(data==2) {
   \   00000102   3022                       CPI     R18,2
   \   00000104   F419                       BRNE    ??TIMER1_OVF_Handler_10
    313                      audio_level_up();                            //Master Volume Up
   \   00000106   ........                   CALL    audio_level_up
   \   0000010A   C004                       RJMP    ??TIMER1_OVF_Handler_6
    314                    }
    315                    else if(data==5){
   \                     ??TIMER1_OVF_Handler_10:
   \   0000010C   3025                       CPI     R18,5
   \   0000010E   F411                       BRNE    ??TIMER1_OVF_Handler_6
    316                      audio_level_down();                        //Master Volume Down
   \   00000110   ........                   CALL    audio_level_down
    317                    }
    318                    
    319                  }//end else if
    320                  tmr_flag_ck=0;
   \                     ??TIMER1_OVF_Handler_6:
   \   00000114   E000                       LDI     R16,0
   \   00000116   9300....                   STS     tmr_flag_ck,R16
    321                  key_tmr++;
   \   0000011A   ....                       LDI     R30,LOW(key_tmr)
   \   0000011C   ....                       LDI     R31,(key_tmr) >> 8
   \   0000011E   8100                       LD      R16,Z
   \   00000120   8111                       LDD     R17,Z+1
   \   00000122   5F0F                       SUBI    R16,255
   \   00000124   4F1F                       SBCI    R17,255
   \   00000126   8300                       ST      Z,R16
   \   00000128   8311                       STD     Z+1,R17
   \   0000012A   C016                       RJMP    ??TIMER1_OVF_Handler_11
    322                }
    323                else { 
    324                  key_int_flag=0; key_tmr=0; 
   \                     ??TIMER1_OVF_Handler_4:
   \   0000012C   E000                       LDI     R16,0
   \   0000012E   9300....                   STS     key_int_flag,R16
   \   00000132   E000                       LDI     R16,0
   \   00000134   E010                       LDI     R17,0
   \   00000136   ....                       LDI     R30,LOW(key_tmr)
   \   00000138   ....                       LDI     R31,(key_tmr) >> 8
   \   0000013A   8300                       ST      Z,R16
   \   0000013C   8311                       STD     Z+1,R17
    325                  if(tmr_flag_ck==0) {
   \   0000013E   9100....                   LDS     R16,tmr_flag_ck
   \   00000142   2300                       TST     R16
   \   00000144   F449                       BRNE    ??TIMER1_OVF_Handler_11
    326                    tmr_flag_ck=1;
   \   00000146   E001                       LDI     R16,1
   \   00000148   9300....                   STS     tmr_flag_ck,R16
    327                    rom_tmr=0;
   \   0000014C   E000                       LDI     R16,0
   \   0000014E   E010                       LDI     R17,0
   \   00000150   ....                       LDI     R30,LOW(rom_tmr)
   \   00000152   ....                       LDI     R31,(rom_tmr) >> 8
   \   00000154   8300                       ST      Z,R16
   \   00000156   8311                       STD     Z+1,R17
    328                  }
    329                }
    330                
    331                if(KEY_FLAG && rom_save_flag && rom_save_flag2 ){    //rom_save_flag: remocon,     rom_save_flag2 : filter
   \                     ??TIMER1_OVF_Handler_11:
   \   00000158   9B83                       SBIS    0x10,0x03
   \   0000015A   C07F                       RJMP    ??TIMER1_OVF_Handler_0
   \   0000015C   9100....                   LDS     R16,rom_save_flag
   \   00000160   2300                       TST     R16
   \   00000162   F409                       BRNE    $+2+2
   \   00000164   C07A                       RJMP    ??TIMER1_OVF_Handler_0
   \   00000166   9100....                   LDS     R16,rom_save_flag2
   \   0000016A   2300                       TST     R16
   \   0000016C   F409                       BRNE    $+2+2
   \   0000016E   C075                       RJMP    ??TIMER1_OVF_Handler_0
    332                  if( (rom_cycle<0x200 )&& (rom_tmr>100) ){      //20 = 1sec, 300 = 15sec,
   \   00000170   ....                       LDI     R30,LOW(rom_cycle)
   \   00000172   ....                       LDI     R31,(rom_cycle) >> 8
   \   00000174   8100                       LD      R16,Z
   \   00000176   8111                       LDD     R17,Z+1
   \   00000178   3000                       CPI     R16,0
   \   0000017A   E022                       LDI     R18,2
   \   0000017C   0712                       CPC     R17,R18
   \   0000017E   F008                       BRCS    $+2+2
   \   00000180   C064                       RJMP    ??TIMER1_OVF_Handler_12
   \   00000182   ....                       LDI     R30,LOW(rom_tmr)
   \   00000184   ....                       LDI     R31,(rom_tmr) >> 8
   \   00000186   8100                       LD      R16,Z
   \   00000188   8111                       LDD     R17,Z+1
   \   0000018A   3605                       CPI     R16,101
   \   0000018C   E020                       LDI     R18,0
   \   0000018E   0712                       CPC     R17,R18
   \   00000190   F408                       BRCC    $+2+2
   \   00000192   C05B                       RJMP    ??TIMER1_OVF_Handler_12
    333                   
    334                    temp=rom_data;
   \   00000194   ....                       LDI     R30,LOW(rom_data)
   \   00000196   ....                       LDI     R31,(rom_data) >> 8
   \   00000198   8120                       LD      R18,Z
   \   0000019A   8131                       LDD     R19,Z+1
    335                    rom_data=vol_dB;
   \   0000019C   9100....                   LDS     R16,vol_dB
   \   000001A0   E010                       LDI     R17,0
   \   000001A2   ....                       LDI     R30,LOW(rom_data)
   \   000001A4   ....                       LDI     R31,(rom_data) >> 8
   \   000001A6   8300                       ST      Z,R16
   \   000001A8   8311                       STD     Z+1,R17
    336                    rom_data<<=4;
   \   000001AA   ....                       LDI     R30,LOW(rom_data)
   \   000001AC   ....                       LDI     R31,(rom_data) >> 8
   \   000001AE   8100                       LD      R16,Z
   \   000001B0   8111                       LDD     R17,Z+1
   \   000001B2   E044                       LDI     R20,4
   \   000001B4   ........                   CALL    ?S_SHL_L02
   \   000001B8   ....                       LDI     R30,LOW(rom_data)
   \   000001BA   ....                       LDI     R31,(rom_data) >> 8
   \   000001BC   8300                       ST      Z,R16
   \   000001BE   8311                       STD     Z+1,R17
    337                    rom_data+=ch_led_data;
   \   000001C0   9100....                   LDS     R16,ch_led_data
   \   000001C4   E010                       LDI     R17,0
   \   000001C6   ....                       LDI     R30,LOW(rom_data)
   \   000001C8   ....                       LDI     R31,(rom_data) >> 8
   \   000001CA   8140                       LD      R20,Z
   \   000001CC   8151                       LDD     R21,Z+1
   \   000001CE   0F40                       ADD     R20,R16
   \   000001D0   1F51                       ADC     R21,R17
   \   000001D2   8340                       ST      Z,R20
   \   000001D4   8351                       STD     Z+1,R21
    338                    rom_data<<=3;
   \   000001D6   ....                       LDI     R30,LOW(rom_data)
   \   000001D8   ....                       LDI     R31,(rom_data) >> 8
   \   000001DA   8100                       LD      R16,Z
   \   000001DC   8111                       LDD     R17,Z+1
   \   000001DE   E043                       LDI     R20,3
   \   000001E0   ........                   CALL    ?S_SHL_L02
   \   000001E4   ....                       LDI     R30,LOW(rom_data)
   \   000001E6   ....                       LDI     R31,(rom_data) >> 8
   \   000001E8   8300                       ST      Z,R16
   \   000001EA   8311                       STD     Z+1,R17
    339                    rom_data+=filter_flag;
   \   000001EC   9100....                   LDS     R16,filter_flag
   \   000001F0   E010                       LDI     R17,0
   \   000001F2   ....                       LDI     R30,LOW(rom_data)
   \   000001F4   ....                       LDI     R31,(rom_data) >> 8
   \   000001F6   8140                       LD      R20,Z
   \   000001F8   8151                       LDD     R21,Z+1
   \   000001FA   0F40                       ADD     R20,R16
   \   000001FC   1F51                       ADC     R21,R17
   \   000001FE   8340                       ST      Z,R20
   \   00000200   8351                       STD     Z+1,R21
    340                    rom_data<<=1;
   \   00000202   ....                       LDI     R30,LOW(rom_data)
   \   00000204   ....                       LDI     R31,(rom_data) >> 8
   \   00000206   8100                       LD      R16,Z
   \   00000208   8111                       LDD     R17,Z+1
   \   0000020A   0F00                       LSL     R16
   \   0000020C   1F11                       ROL     R17
   \   0000020E   ....                       LDI     R30,LOW(rom_data)
   \   00000210   ....                       LDI     R31,(rom_data) >> 8
   \   00000212   8300                       ST      Z,R16
   \   00000214   8311                       STD     Z+1,R17
    341                    rom_data+=phase_data;
   \   00000216   9100....                   LDS     R16,phase_data
   \   0000021A   E010                       LDI     R17,0
   \   0000021C   ....                       LDI     R30,LOW(rom_data)
   \   0000021E   ....                       LDI     R31,(rom_data) >> 8
   \   00000220   8140                       LD      R20,Z
   \   00000222   8151                       LDD     R21,Z+1
   \   00000224   0F40                       ADD     R20,R16
   \   00000226   1F51                       ADC     R21,R17
   \   00000228   8340                       ST      Z,R20
   \   0000022A   8351                       STD     Z+1,R21
    342                    if(temp!=rom_data){
   \   0000022C   ....                       LDI     R30,LOW(rom_data)
   \   0000022E   ....                       LDI     R31,(rom_data) >> 8
   \   00000230   8100                       LD      R16,Z
   \   00000232   8111                       LDD     R17,Z+1
   \   00000234   1720                       CP      R18,R16
   \   00000236   0731                       CPC     R19,R17
   \   00000238   F011                       BREQ    ??TIMER1_OVF_Handler_13
    343                      //__disable_interrupt();
    344                      ex_eeprom_save();
   \   0000023A   ........                   CALL    ex_eeprom_save
    345                      //__enable_interrupt(); 
    346                    }
    347                    rom_tmr=0;
   \                     ??TIMER1_OVF_Handler_13:
   \   0000023E   E000                       LDI     R16,0
   \   00000240   E010                       LDI     R17,0
   \   00000242   ....                       LDI     R30,LOW(rom_tmr)
   \   00000244   ....                       LDI     R31,(rom_tmr) >> 8
   \   00000246   8300                       ST      Z,R16
   \   00000248   8311                       STD     Z+1,R17
    348                  }
    349                  rom_tmr++;
   \                     ??TIMER1_OVF_Handler_12:
   \   0000024A   ....                       LDI     R30,LOW(rom_tmr)
   \   0000024C   ....                       LDI     R31,(rom_tmr) >> 8
   \   0000024E   8100                       LD      R16,Z
   \   00000250   8111                       LDD     R17,Z+1
   \   00000252   5F0F                       SUBI    R16,255
   \   00000254   4F1F                       SBCI    R17,255
   \   00000256   8300                       ST      Z,R16
   \   00000258   8311                       STD     Z+1,R17
    350                }
    351                /*
    352                if(non_audio_check){
    353                  if(non_audio_tmr==1){ //50msec
    354                    if(PINE_Bit4==old_non_audio)  {
    355                      if(PINE_Bit4) I2C_Write(0x20, 0x01, 0xc4);
    356                    }
    357                    non_audio_check=0;
    358                    non_audio_tmr=0;
    359                  }
    360                  non_audio_tmr++;
    361                }*/
    362              }
    363            }		
    364          	
    365            Time_100ms++;
   \                     ??TIMER1_OVF_Handler_0:
   \   0000025A   ....                       LDI     R30,LOW(Time_100ms)
   \   0000025C   ....                       LDI     R31,(Time_100ms) >> 8
   \   0000025E   8100                       LD      R16,Z
   \   00000260   9503                       INC     R16
   \   00000262   8300                       ST      Z,R16
    366          	
    367          }
   \   00000264   BF9B                       OUT     0x3B,R25
   \   00000266   BF8F                       OUT     0x3F,R24
   \   00000268   9109                       LD      R16,Y+
   \   0000026A   9119                       LD      R17,Y+
   \   0000026C   9129                       LD      R18,Y+
   \   0000026E   9139                       LD      R19,Y+
   \   00000270   9149                       LD      R20,Y+
   \   00000272   9159                       LD      R21,Y+
   \   00000274   9169                       LD      R22,Y+
   \   00000276   9179                       LD      R23,Y+
   \   00000278   9009                       LD      R0,Y+
   \   0000027A   9019                       LD      R1,Y+
   \   0000027C   9029                       LD      R2,Y+
   \   0000027E   9039                       LD      R3,Y+
   \   00000280   91E9                       LD      R30,Y+
   \   00000282   91F9                       LD      R31,Y+
   \   00000284   9189                       LD      R24,Y+
   \   00000286   9199                       LD      R25,Y+
   \   00000288   91A9                       LD      R26,Y+
   \   0000028A   91B9                       LD      R27,Y+
   \   0000028C   9518                       RETI
    368          
    369          ///////////////////////////////////////////////////////////////////////////////
    370          //U8 non_audio_flag=0;

   \                                 In segment CODE, align 2, keep-with-next
    371          void main(void){
   \                     main:
    372            _system_init();
   \   00000000   ....                       RCALL   _system_init
    373            //_system_init_1();
    374              
    375            while(1){
   \                     ??main_0:
   \   00000002   CFFF                       RJMP    ??main_0
    376              //if(tmr_osc_ck) _system_init_1();
    377              /*
    378              if(tmr_osc_ck){
    379                tmr_osc_ck2=1;
    380                tmr_osc_ck=0;
    381                //one time
    382                if(KeyReady){
    383                  _system_init_se();
    384                  es9018_reg10=0xce;			
    385                  I2C_Write(0x90, 0x0a, es9018_reg10);
    386                  I2C_Write(0x92, 0x0a, es9018_reg10);
    387                  //led_start_flag=1;
    388                  KeyReady=0;
    389                }
    390                
    391              }//end if
    392              */
    393            }//end while
    394          
    395          }

   \                                 In segment INTVEC, offset 0x10, root
   \   00000000   ........                   JMP     INT3_Handler

   \                                 In segment INTVEC, offset 0x18, root
   \   00000000   ........                   JMP     INT5_Handler

   \                                 In segment INTVEC, offset 0x1c, root
   \   00000000   ........                   JMP     INT6_Handler

   \                                 In segment INTVEC, offset 0x20, root
   \   00000000   ........                   JMP     INT7_Handler

   \                                 In segment INTVEC, offset 0x28, root
   \   00000000   ........                   JMP     TIMER2_OVF_Handler

   \                                 In segment INTVEC, offset 0x38, root
   \   00000000   ........                   JMP     TIMER1_OVF_Handler

   \                                 In segment INTVEC, offset 0x40, root
   \   00000000   ........                   JMP     TIMER0_OVF_Handler

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for phase_data>`:
   \   00000000   01                         DB 1

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for interrupt_eicra>`:
   \   00000000   B5                         DB 181

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for rom_save_flag>`:
   \   00000000   01                         DB 1

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for rom_save_flag2>`:
   \   00000000   01                         DB 1

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for dot_light_reg>`:
   \   00000000   01                         DB 1

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for ch_led_enable>`:
   \   00000000   01                         DB 1

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for sr_led_data>`:
   \   00000000   06                         DB 6

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for display_num>`:
   \   00000000   64                         DB 100

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for vol_dB>`:
   \   00000000   FF                         DB 255

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for i2s_flag>`:
   \   00000000   01                         DB 1

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for usb_sr>`:
   \   00000000   30                         DB 48

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for mute_enable>`:
   \   00000000   01                         DB 1

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for es9018_reg10>`:
   \   00000000   CE                         DB 206

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min44>`:
   \   00000000   0907                       DW 2311

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max44>`:
   \   00000000   0909                       DW 2313

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min48>`:
   \   00000000   09D3                       DW 2515

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max48>`:
   \   00000000   09D5                       DW 2517

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min88>`:
   \   00000000   120F                       DW 4623

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max88>`:
   \   00000000   1211                       DW 4625

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min96>`:
   \   00000000   13A8                       DW 5032

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max96>`:
   \   00000000   13AA                       DW 5034

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min176>`:
   \   00000000   241F                       DW 9247

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max176>`:
   \   00000000   2421                       DW 9249

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for min192>`:
   \   00000000   2751                       DW 10065

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for max192>`:
   \   00000000   2753                       DW 10067

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for interface_ch>`:
   \   00000000   80                         DB 128

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for KeyReady>`:
   \   00000000   01                         DB 1

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for ch_name>`:
   \   00000000   4F4358412031               DB 43H, 4FH, 41H, 58H, 31H, 20H
   \   00000006   4F4358412032               DB 43H, 4FH, 41H, 58H, 32H, 20H
   \   0000000C   412053452031               DB 20H, 41H, 45H, 53H, 31H, 20H
   \   00000012   412053452032               DB 20H, 41H, 45H, 53H, 32H, 20H
   \   00000018   4220434E2020               DB 20H, 42H, 4EH, 43H, 20H, 20H
   \   0000001E   4F2054502031               DB 20H, 4FH, 50H, 54H, 31H, 20H
   \   00000024   4F2054502032               DB 20H, 4FH, 50H, 54H, 32H, 20H
   \   0000002A   552042532020               DB 20H, 55H, 53H, 42H, 20H, 20H

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for sr_name>`:
   \   00000000   34202E342031               DB 20H, 34H, 34H, 2EH, 31H, 20H
   \   00000006   34202E382030               DB 20H, 34H, 38H, 2EH, 30H, 20H
   \   0000000C   38202E382032               DB 20H, 38H, 38H, 2EH, 32H, 20H
   \   00000012   39202E362030               DB 20H, 39H, 36H, 2EH, 30H, 20H
   \   00000018   37312E362034               DB 31H, 37H, 36H, 2EH, 34H, 20H
   \   0000001E   39312E322030               DB 31H, 39H, 32H, 2EH, 30H, 20H
   \   00000024   202020202020               DB 20H, 20H, 20H, 20H, 20H, 20H

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for filter_name>`:
   \   00000000   4946544C5245               DB 46H, 49H, 4CH, 54H, 45H, 52H, 31H, 20H
   \              2031        
   \   00000008   4946544C5245               DB 46H, 49H, 4CH, 54H, 45H, 52H, 32H, 20H
   \              2032        
   \   00000010   4946544C5245               DB 46H, 49H, 4CH, 54H, 45H, 52H, 33H, 20H
   \              2033        

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for phase_name>`:
   \   00000000   4920564E5245               DB 20H, 49H, 4EH, 56H, 45H, 52H, 53H, 45H
   \              4553        

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for normal_name>`:
   \   00000000   20204F4E4D52               DB 20H, 20H, 4EH, 4FH, 52H, 4DH, 41H, 4CH
   \              4C41        

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for f1_coeff_st1>`:
   \   00000000   00000000463D               DD 0, 1656381, 9659303, 34409768, 93398781, 209942799, 407444422
   \              001963A70093
   \              0D28020D26FD
   \              0591790F0C83
   \              1BC61849    
   \   0000001C   3C8E29AA49B7               DD 699022478, 1074874807, 1492352005, 1874902824, 2124488166
   \              40117C0558F3
   \              BF286FC01DE6
   \              7EA1        
   \   00000030   FFFF7FFFA305               DD 2147483647, 1887806213, 1355685389, 639107586, 4184211741
   \              70851E0D50CE
   \              02022618011D
   \              F966        
   \   00000044   F2BBD51B578D               DD 3575378619, 3250935693, 3274239131, 3604212817, 4107112925
   \              C1C5EC9BC328
   \              EC51D6D391DD
   \              F4CD        
   \   00000058   6A261250390E               DD 307259942, 630274318, 690105478, 497041076, 151573293, 4094472509
   \              25912C862922
   \              3EB41DA0D32D
   \              0908B13DF40C
   \   00000070   437DE687DFE5               DD 3867624317, 3834699749, 3981431401, 4225727969, 163487939, 295508341
   \              E490D269ED4F
   \              7DE1FBDFA0C3
   \              09BE1975119D
   \   00000088   F94A11543B15               DD 290781514, 173357845, 8625355, 4165136668, 4103278079, 4128386279
   \              0A559CCB0083
   \              F11CF8420DFF
   \              F4932CE7F612
   \   000000A0   4E1DFB284F6E               DD 4213722653, 18370414, 89760574, 110702807, 84163673, 31575802
   \              0118A33E0559
   \              30D706993C59
   \              0504CEFA01E1
   \   000000B8   124FFECC404F               DD 4274786895, 4243865679, 4240421441, 4258480823, 4285296094, 13456521
   \              FCF4B241FCBF
   \              42B7FDD36DDE
   \              FF6C548900CD
   \   000000D0   DC9E0187E1CF               DD 25681054, 26272207, 19136308, 9640102, 1930723, 4292721623
   \              0190FF340123
   \              18A6009375E3
   \              001DBBD7FFDD
   \   000000E8   6C2DFFCE543B               DD 4291718189, 4292498491, 4293704071, 4294560129, 0, 0
   \              FFDAB987FFEC
   \              C981FFF90000
   \              000000000000

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for f1_coeff_st2>`:
   \   00000000   1B9F57F51B9F               DD 1475681183, 1475681183, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              57F500000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              00000000    

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for f2_coeff_st1>`:
   \   00000000   000000008221               DD 0, 4293165601, 4290958653, 4289846283, 4292752816, 5996574, 16606227
   \              FFE4D53DFFC2
   \              DC0BFFB135B0
   \              FFDE801E005B
   \              641300FD    
   \   0000001C   91530154E867               DD 22319443, 15460455, 4289712737, 4264886706, 4253862403, 4271338540
   \              00EBD261FFAF
   \              01B2FE35CA03
   \              FD8C742CFE97
   \   00000034   AAB301328FAA               DD 20097715, 65638314, 77510493, 33703685, 4243282078, 4168217690
   \              03E9B75D049E
   \              47050202589E
   \              FCEBF45AF871
   \   0000004C   EBA7F847DF9B               DD 4165462951, 4262125467, 122779073, 237746372, 208859258, 4955037
   \              FE0A75C10751
   \              B8C40E2BF07A
   \              0C729B9D004B
   \   00000064   1CB6EEF78B57               DD 4009172150, 3818163031, 3920942180, 107471796, 869797120, 1652694820
   \              E394D464E9B4
   \              E3B406670D00
   \              33D81F246282
   \   0000007C   FFFF7FFFFFFF               DD 2147483647, 2147483647, 1652694820, 869797120, 107471796, 3920942180
   \              7FFF1F246282
   \              0D0033D8E3B4
   \              0667D464E9B4
   \   00000094   8B57E3941CB6               DD 3818163031, 4009172150, 4955037, 208859258, 237746372, 122779073
   \              EEF79B9D004B
   \              F07A0C72B8C4
   \              0E2B75C10751
   \   000000AC   DF9BFE0AEBA7               DD 4262125467, 4165462951, 4168217690, 4243282078, 33703685, 77510493
   \              F847F45AF871
   \              589EFCEB4705
   \              0202B75D049E
   \   000000C4   8FAA03E9AAB3               DD 65638314, 20097715, 4271338540, 4253862403, 4264886706, 4289712737
   \              0132742CFE97
   \              CA03FD8C01B2
   \              FE35D261FFAF
   \   000000DC   E86700EB9153               DD 15460455, 22319443, 16606227, 5996574, 4292752816, 4289846283
   \              0154641300FD
   \              801E005B35B0
   \              FFDEDC0BFFB1
   \   000000F4   D53DFFC28221               DD 4290958653, 4293165601, 0
   \              FFE400000000

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for f2_coeff_st2>`:
   \   00000000   B9C47FFEB9C4               DD 2147400132, 2147400132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              7FFE00000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              00000000    

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for test_osc>`:
   \   00000000   01                         DB 1

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for _repeat_data>`:
   \   00000000   30                         DB 48

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for init_sr_led>`:
   \   00000000   01                         DB 1

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for tmr_flag_ck>`:
   \   00000000   01                         DB 1

   \                                 In segment ABSOLUTE, at 0x45
   \   union <unnamed> volatile __io _A_TCCR2
   \                     _A_TCCR2:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x4c
   \   union <unnamed> volatile __io _A_TCNT1
   \                     _A_TCNT1:
   \   00000000                              DS 2

   \                                 In segment ABSOLUTE, at 0x4e
   \   union <unnamed> volatile __io _A_TCCR1B
   \                     _A_TCCR1B:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x51
   \   union <unnamed> volatile __io _A_OCR0
   \                     _A_OCR0:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x52
   \   union <unnamed> volatile __io _A_TCNT0
   \                     _A_TCNT0:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x53
   \   union <unnamed> volatile __io _A_TCCR0
   \                     _A_TCCR0:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x56
   \   union <unnamed> volatile __io _A_TIFR
   \                     _A_TIFR:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x57
   \   union <unnamed> volatile __io _A_TIMSK
   \                     _A_TIMSK:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x58
   \   union <unnamed> volatile __io _A_EIFR
   \                     _A_EIFR:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x59
   \   union <unnamed> volatile __io _A_EIMSK
   \                     _A_EIMSK:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x5a
   \   union <unnamed> volatile __io _A_EICRB
   \                     _A_EICRB:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x61
   \   union <unnamed> volatile __io _A_DDRF
   \                     _A_DDRF:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x62
   \   union <unnamed> volatile __io _A_PORTF
   \                     _A_PORTF:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x63
   \   union <unnamed> volatile __io _A_PING
   \                     _A_PING:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x64
   \   union <unnamed> volatile __io _A_DDRG
   \                     _A_DDRG:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x65
   \   union <unnamed> volatile __io _A_PORTG
   \                     _A_PORTG:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x6a
   \   union <unnamed> volatile __io _A_EICRA
   \                     _A_EICRA:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x20
   \   union <unnamed> volatile __io _A_PINF
   \                     _A_PINF:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x21
   \   union <unnamed> volatile __io _A_PINE
   \                     _A_PINE:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x22
   \   union <unnamed> volatile __io _A_DDRE
   \                     _A_DDRE:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x23
   \   union <unnamed> volatile __io _A_PORTE
   \                     _A_PORTE:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x30
   \   union <unnamed> volatile __io _A_PIND
   \                     _A_PIND:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x31
   \   union <unnamed> volatile __io _A_DDRD
   \                     _A_DDRD:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x32
   \   union <unnamed> volatile __io _A_PORTD
   \                     _A_PORTD:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x33
   \   union <unnamed> volatile __io _A_PINC
   \                     _A_PINC:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x34
   \   union <unnamed> volatile __io _A_DDRC
   \                     _A_DDRC:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x35
   \   union <unnamed> volatile __io _A_PORTC
   \                     _A_PORTC:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x36
   \   union <unnamed> volatile __io _A_PINB
   \                     _A_PINB:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x37
   \   union <unnamed> volatile __io _A_DDRB
   \                     _A_DDRB:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x38
   \   union <unnamed> volatile __io _A_PORTB
   \                     _A_PORTB:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x39
   \   union <unnamed> volatile __io _A_PINA
   \                     _A_PINA:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x3a
   \   union <unnamed> volatile __io _A_DDRA
   \                     _A_DDRA:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x3b
   \   union <unnamed> volatile __io _A_PORTA
   \                     _A_PORTA:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x44
   \   union <unnamed> volatile __io _A_TCNT2
   \                     _A_TCNT2:
   \   00000000                              DS 1
    396          
    397          

   Maximum stack usage in bytes:

     Function                 CSTACK RSTACK
     --------                 ------ ------
     DelayTime                    0      2
     DelayTime_ms                 4      2
       -> DelayTime               4      2
     I2C_Read                     2      2
       -> I2C_START               2      2
       -> I2C_SHOUT               2      2
       -> I2C_SHOUT               2      2
       -> I2C_STOP                2      2
       -> I2C_START               2      2
       -> I2C_SHOUT               2      2
       -> I2C_SHIN                2      2
       -> I2C_STOP                2      2
     I2C_SHIN                     2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
     I2C_SHOUT                    2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
     I2C_START                    0      2
       -> DelayTime               0      2
       -> DelayTime               0      2
       -> DelayTime               0      2
     I2C_STOP                     0      2
       -> DelayTime               0      2
       -> DelayTime               0      2
       -> DelayTime               0      2
     I2C_Write                    3      2
       -> I2C_START               3      2
       -> I2C_SHOUT               3      2
       -> I2C_SHOUT               3      2
       -> I2C_SHOUT               3      2
       -> I2C_STOP                3      2
     INT3_Handler                15      2
       -> channel_down           15      2
       -> audio_level_up         15      2
       -> ess_mute               15      2
       -> channel_up             15      2
       -> audio_level_down       15      2
       -> femto_function         15      2
       -> femto_function         15      2
     INT5_Handler                17      2
       -> _remocon_processing    17      2
     INT6_Handler                15      2
       -> sample_rate_cal        15      2
     INT7_Handler                15      2
       -> sample_rate_cal        15      2
     TIMER0_OVF_Handler          19      4
       -> dot_string_digit       19      2
       -> sample_rate_cal        19      2
     TIMER1_OVF_Handler          17      4
       -> _system_init_se        17      2
       -> I2C_Write              17      2
       -> I2C_Write              17      2
       -> init_vol_dn            17      2
       -> DelayTime_ms           17      2
       -> init_vol               17      2
       -> dot_vol_hextodeci      17      2
       -> audio_level_up         17      2
       -> audio_level_down       17      2
       -> ex_eeprom_save         17      2
     TIMER2_OVF_Handler           6      2
     _bit_init                    0      4
     _inbit                       0      4
     _inport                      0      2
     _outbit                      0      4
     _outport                     0      2
     _port_init                   0      2
     _remocon_processing          2      2
       -> remocon_data            2      2
       -> remocon_data            2      2
       -> audio_level_sp_up       2      2
       -> audio_level_sp_down     2      2
       -> audio_level_up          2      2
       -> audio_level_down        2      2
     _system_init                 0      2
       -> dot_matrix_clear        0      2
     _system_init_se              0      2
       -> rom_I2C_Read            0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Read            0      2
       -> rom_I2C_Read            0      2
       -> rom_I2C_Read            0      2
       -> rom_I2C_Read            0      2
       -> rom_I2C_Read            0      2
       -> rom_I2C_Read            0      2
       -> rom_I2C_Read            0      2
       -> rom_I2C_Read            0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> channel_change          0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> volume_set              0      2
       -> phase_ess               0      2
       -> ess_filter              0      2
       -> dot_matrix_bright       0      2
     audio_level_down             0      2
       -> ess_mute                0      2
       -> volume_set              0      2
       -> dot_vol_hextodeci       0      2
     audio_level_sp_down          0      2
       -> volume_set              0      2
       -> dot_vol_hextodeci       0      2
     audio_level_sp_up            0      2
       -> volume_set              0      2
       -> dot_vol_hextodeci       0      2
     audio_level_up               0      2
       -> ess_mute                0      2
       -> volume_set              0      2
       -> dot_vol_hextodeci       0      2
     channel_change               0      2
       -> I2C_Write               0      2
     channel_down                 0      2
       -> channel_change          0      2
     channel_up                   0      2
       -> channel_change          0      2
     dot_0x_hexadecimal           2      4
       -> dot_matrix_digit        2      2
       -> dot_matrix_digit        2      2
       -> dot_matrix_digit        2      2
       -> dot_matrix_digit        2      2
     dot_matrix_bright            2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
       -> DelayTime               2      2
     dot_matrix_clear             0      2
     dot_matrix_digit             1      2
       -> DelayTime               1      2
       -> DelayTime               1      2
       -> DelayTime               1      2
       -> DelayTime               1      2
       -> DelayTime               1      2
     dot_matrix_digit2            1      2
       -> DelayTime               1      2
       -> DelayTime               1      2
       -> DelayTime               1      2
       -> DelayTime               1      2
       -> DelayTime               1      2
     dot_matrix_set               0      2
       -> dot_matrix_bright       0      2
     dot_string_digit             3      4
       -> DelayTime               3      2
       -> DelayTime               3      2
       -> DelayTime               3      2
       -> DelayTime               3      2
       -> DelayTime               3      2
     dot_vol_hextodeci            4      4
       -> dot_string_digit        4      2
     ess_filter                   7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
       -> I2C_Write               7      2
     ess_mute                     0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> dot_vol_hextodeci       0      2
     ex_eeprom_save               0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
       -> rom_I2C_Write           0      2
     femto_function               4      4
       -> phase_ess               4      2
       -> ess_filter              4      2
       -> dot_string_digit        4      2
     init_vol                     2      2
       -> I2C_Write               2      2
       -> I2C_Write               2      2
     init_vol_dn                  2      2
       -> I2C_Write               2      2
       -> I2C_Write               2      2
     main                         0      2
       -> _system_init            0      2
     phase_ess                    0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
       -> I2C_Write               0      2
     remocon_data                 0      2
       -> ess_mute                0      2
       -> audio_level_up          0      2
       -> audio_level_down        0      2
       -> channel_up              0      2
       -> channel_down            0      2
       -> femto_function          0      2
       -> femto_function          0      2
     rom_I2C_Read                 0      2
       -> I2C_Read                0      2
     rom_I2C_Write                0      2
       -> I2C_Write               0      2
       -> DelayTime_ms            0      2
     sample_rate_cal              2      2
       -> I2C_Read                2      2
       -> I2C_Read                2      2
       -> I2C_Write               2      2
       -> I2C_Write               2      2
     volume_set                   1      2
       -> I2C_Write               1      2
       -> I2C_Write               1      2


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     rom_add_pt                        1
     rom_cycle                         2
     rom_address                       2
     rom_data_cnt                      1
     rom_data                          2
     phase_data                        1
     interrupt_eicra                   1
     init_setting_check                1
     ess_automute                      1
     ess_lock_ck                       1
     old_ess_automute                  1
     old_ess_lock_ck                   1
     exMute                            1
     old_exMute                        1
     key_tmr                           2
     tmr_osc_ck                        1
     key_int_flag                      1
     rom_tmr                           2
     rom_save_flag                     1
     rom_save_flag2                    1
     Time_500us                        1
     Time_100ms                        1
     dot_light_reg                     1
     ch_led_data                       1
     ch_led_enable                     1
     sr_led_data                       1
     display_num                       1
     vol_dB                            1
     i2s_flag                          1
     usb_sr                            1
     button_data                       1
     filter_flag                       1
     mute_enable                       1
     key_func                          1
     key_func_tmr                      2
     key_condition                     1
     es9018_reg10                      1
     es9018_lock                       1
     es9018_lock_flag                  1
     dac_audio_timer                   2
     sample_rate                       2
     min44                             2
     max44                             2
     min48                             2
     max48                             2
     min88                             2
     max88                             2
     min96                             2
     max96                             2
     min176                            2
     max176                            2
     min192                            2
     max192                            2
     tmr_osc                           1
     interface_ch                      1
     cs_audio_timer                    2
     usb_audio_timer                   2
     KeyReady                          1
     I2C_error                         1
     ch_name                          48
     sr_name                          42
     filter_name                      24
     phase_name                        8
     normal_name                       8
     ch_data                           1
     sr_data                           1
     filter_data                       1
     inverse_data                      1
     dot_string                       16
     ess_volume                        4
     f1_coeff_st1                    256
     f1_coeff_st2                     64
     f2_coeff_st1                    256
     f2_coeff_st2                     64
     ??DelayTime_0                    14
     DelayTime_ms                     38
     _porta                            1
     _portb                            1
     _portc                            1
     _portd                            1
     _porte                            1
     _portf                            1
     _portg                            1
     _outport                        118
     _inport                          62
     _inbit                          210
     _outbit                         410
     _port_init                       62
     _bit_init                       322
     inByte                            1
     grAck                             1
     I2C_START                        28
     I2C_STOP                         26
     I2C_SHOUT                       122
     I2C_SHIN                        166
     I2C_Write                        32
     I2C_Read                         46
     rom_I2C_Write                    26
     rom_I2C_Read                     20
     dot_matrix_clear                 10
     dot_string_digit                454
     dot_matrix_digit                378
     dot_matrix_digit2               362
     dot_matrix_bright               764
     dot_0x_hexadecimal               76
     dot_vol_hextodeci               232
     dot_matrix_set                   24
     test_osc                          1
     ess_mute                         80
     phase_ess                        44
     volume_set                       36
     init_vol_dn                      48
     init_vol                         38
     audio_level_sp_down              56
     audio_level_sp_up                72
     audio_level_down                 66
     audio_level_up                   74
     channel_change                   82
     channel_up                       38
     channel_down                     38
     ess_filter                      610
     femto_function                  212
     ex_eeprom_save                  330
     _flg_on_remocon                   1
     _code_remocon                     1
     _counter_remocon                  2
     _remocon_custom                   2
     _remocon_custom_2                 2
     _remocon_data                     2
     Remoc_data_save                   2
     _remocon_data_2                   2
     _remocon_counter                  1
     _flgOrKey                         1
     _flg_enter                        1
     _remocon_buffer                   2
     _flg_repeat                       1
     _remocon_repeat_count             2
     _flg_run_repeat                   1
     _flg_allow_remocon_repeat         1
     bit_input                         1
     _repeat_remocon                   1
     _repeat_data                      1
     low_bit_time                      1
     low_start_flag                    1
     high_bit_0                        1
     high_bit_1                        1
     high_start_flag                   1
     high_repeat_flag0                 1
     high_repeat_flag1                 1
     ir_error_check                    1
     TIMER2_OVF_Handler              232
     remocon_data                    672
     sp_en_cnt                         2
     _remocon_processing             404
     ir_error                          1
     INT5_Handler                    388
     mtime_length                      2
     mtime_flag                        1
     _system_init                    160
     _system_init_se                 700
     sample_rate_cal                 572
     INT7_Handler                    102
     INT6_Handler                    102
     INT3_Handler                    230
     led_tmr                           2
     init_sr_led                       1
     TIMER0_OVF_Handler              406
     tmr_flag_ck                       1
     TIMER1_OVF_Handler              654
     main                              4
     ?<Initializer for phase_data>     1
     ?<Initializer for interrupt_eicra>
                                       1
     ?<Initializer for rom_save_flag>
                                       1
     ?<Initializer for rom_save_flag2>
                                       1
     ?<Initializer for dot_light_reg>
                                       1
     ?<Initializer for ch_led_enable>
                                       1
     ?<Initializer for sr_led_data>    1
     ?<Initializer for display_num>    1
     ?<Initializer for vol_dB>         1
     ?<Initializer for i2s_flag>       1
     ?<Initializer for usb_sr>         1
     ?<Initializer for mute_enable>    1
     ?<Initializer for es9018_reg10>
                                       1
     ?<Initializer for min44>          2
     ?<Initializer for max44>          2
     ?<Initializer for min48>          2
     ?<Initializer for max48>          2
     ?<Initializer for min88>          2
     ?<Initializer for max88>          2
     ?<Initializer for min96>          2
     ?<Initializer for max96>          2
     ?<Initializer for min176>         2
     ?<Initializer for max176>         2
     ?<Initializer for min192>         2
     ?<Initializer for max192>         2
     ?<Initializer for interface_ch>
                                       1
     ?<Initializer for KeyReady>       1
     ?<Initializer for ch_name>       48
     ?<Initializer for sr_name>       42
     ?<Initializer for filter_name>   24
     ?<Initializer for phase_name>     8
     ?<Initializer for normal_name>    8
     ?<Initializer for f1_coeff_st1>
                                     256
     ?<Initializer for f1_coeff_st2>
                                      64
     ?<Initializer for f2_coeff_st1>
                                     256
     ?<Initializer for f2_coeff_st2>
                                      64
     ?<Initializer for test_osc>       1
     ?<Initializer for _repeat_data>
                                       1
     ?<Initializer for init_sr_led>    1
     ?<Initializer for tmr_flag_ck>    1
     _A_TCCR2                          1
     _A_TCNT1                          2
     _A_TCCR1B                         1
     _A_OCR0                           1
     _A_TCNT0                          1
     _A_TCCR0                          1
     _A_TIFR                           1
     _A_TIMSK                          1
     _A_EIFR                           1
     _A_EIMSK                          1
     _A_EICRB                          1
     _A_DDRF                           1
     _A_PORTF                          1
     _A_PING                           1
     _A_DDRG                           1
     _A_PORTG                          1
     _A_EICRA                          1
     _A_PINF                           1
     _A_PINE                           1
     _A_DDRE                           1
     _A_PORTE                          1
     _A_PIND                           1
     _A_DDRD                           1
     _A_PORTD                          1
     _A_PINC                           1
     _A_DDRC                           1
     _A_PORTC                          1
     _A_PINB                           1
     _A_DDRB                           1
     _A_PORTB                          1
     _A_PINA                           1
     _A_DDRA                           1
     _A_PORTA                          1
     _A_TCNT2                          1
      Others                          42

 
     35 bytes in segment ABSOLUTE
 10 452 bytes in segment CODE
     14 bytes in segment INITTAB
     28 bytes in segment INTVEC
    813 bytes in segment NEAR_I
    813 bytes in segment NEAR_ID
    117 bytes in segment NEAR_Z
 
 11 293 bytes of CODE memory (+ 14 bytes shared)
    930 bytes of DATA memory (+ 35 bytes shared)

Errors: none
Warnings: none
